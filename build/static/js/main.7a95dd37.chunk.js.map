{"version":3,"sources":["reducers/reducer.js","sagas/saga.js","js/index.js","components/Others/About.js","components/Others/Location.js","components/Others/Spinner.js","components/Client/DisplaySelectedVesselDetails.js","components/Others/PieCharts.js","components/api/index.js","components/Client/ClientHome.js","components/Common/LeftMenu.js","components/Admin/AdminHome.js","components/Manager/ManagerHome.js","components/Admin/user/ViewAllUsers.js","components/Others/Page.js","components/Login/LoginHome.js","components/Others/SlideShow.js","components/Others/Home.js","components/Others/Header.js","components/Others/Footer.js","components/Client/CheckPerformance.js","components/FirstComponentStateFul.js","action/action.js","components/Others/Alert.js","components/Login/FormPasswordReset.js","components/Login/ForgotPassword.js","components/Admin/user/AddNewUser.js","components/Admin/common/AddDynamicField.js","components/Admin/vessel/AddNewVessel.js","components/Admin/vessel/ViewAllVessels.js","components/Admin/voyage/FillVoyageDetails.js","components/Admin/voyage/ViewVoyageDetails.js","components/Admin/common/ShowDropDownAdmin.js","components/Admin/performance/ViewPerformanceModule.js","components/Admin/performance/ViewPerformanceDetails.js","components/Admin/common/PrivateRoute.js","components/Admin/performance/PerformanceModule.js","components/Admin/performance/FillPerformanceDetails.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","apiData","watcherSaga","workerFunction","takeEvery","call","getAPIData","finalData","put","type","fetch","then","response","json","initializeMiddleware","createSagaMiddleware","store","createStore","state","action","Object","assign","concat","payload","applyMiddleware","run","About","className","AnyReactComponent","text","Location","style","height","width","bootstrapURLKeys","key","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","Spinner","display","flexDirection","justifyContent","alignItems","CircularProgress","color","DisplaySelectedVesselDetails","pairs","getDisplayKey","charAt","toUpperCase","slice","replace","trim","vesselDetails","push","marginTop","PieCharts","options","chart","labels","keys","responsive","breakpoint","legend","position","series","values","api","apiUrl","checkUsername","data","axios","post","headers","updatePassword","login","insertUserDetails","insertVesselDetails","insertPerformanceData","insertVoyageData","getAllVesselsPerformance","get","isDetailsFilled","getAllVoyage","companyName","getAllUserDetails","getAllClientList","getAllVesselsList","getAllVesselsDetails","getAllVoyageDetails","fillPerformanceDetails","deleteVesselDetails","delete","updateVesselDetails","deleteVoyageDetails","updateVoyageDetails","getPortDetails","userName","vesselName","cpDate","getPerformanceDetails","chartererName","getCompletePerformanceDetailsForView","ClientHome","a","async","localStorage","getItem","res","status","setState","vesselList","error","handlePerformanceClick","e","c","find","m","target","id","history","pathname","detail","buildCustomTableBodyCell","val","cellVal","column","rowId","textAlign","onClick","getPopupContent","capitalize","s","vesselSize","loadPort","cargo","cargoIntake","ownerName","trigger","textDecoration","cursor","modal","closeOnDocumentClick","dischargePort","tableData","performanceDetails","isPeformancePage","showData","length","title","keyColumn","font","dimensions","datatable","row","stripped","features","canSearch","canDownload","canPrint","canOrderColumns","columns","label","colSize","dataType","rows","map","_id","checkPerformance","ourCount","previousYearDate","Date","pastYear","getFullYear","setFullYear","forEach","v","getTime","parseInt","marginLeft","CustomTableBodyCell","withRouter","LeftMenu","menuItems","link","linksTo","titles","link1","link2","linksTo1","titles1","linksTo2","titles2","Grid","item","md","lg","index","to","navigation","links1","links2","links","React","AdminHome","navigateLinks","ManagerHome","localRoles","JSON","parse","arrayItemsRoles","role","AddUser","ViewUsers","EditUser","AddVessel","ViewVessels","EditVessels","FillVoyage","ViewVoyage","EditVoyage","FillPerformance","ViewPerformance","EditPerformance","i","marginRight","bind","ViewAllUsers","localState","clientList","componentDidMount","handleViewVesselList","cl","getPopupContent_ManagerRoles","vsl","content","active","managerRoles","filter","on","keepTooltipInside","showAddUser","toLowerCase","rowsPerPage","available","selected","displayName","clientType","viewVesselList","container","direction","xs","margin","Page","LoginHome","isLoggedIn","errorMsg","_handleSubmit","username","password","setSubmitting","resetForm","resp","err","setItem","token","stringify","initialValues","validationSchema","object","shape","string","required","onSubmit","render","touched","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","userRole","Typography","variant","Paper","elevation","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","name","autoComplete","value","onChange","onBlur","FormHelperText","Button","size","disabled","images","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","SlideShow","each","src","alt","Home","Header","handleClick","showHeader","toggleHeaderState","logoutAndToggleState","toggleState","clear","scroll","Footer","CheckPerformance","console","log","location","FirstComponentStateFul","count","itemList","incrementCounter","addItemTo","addItems","getApiCall","event","addItem","getApiCallData","document","connect","dispatch","Transition","Slide","Alert","handleClose","isOpen","hasTwoButtons","submitButtonText","Dialog","open","transition","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","FormPasswordReset","passChangeSuccess","user","_handleModalClose","_renderModal","_handleClose","confirmPass","newPass","oneOf","ref","ForgotPassword","AddNewUser","userDetails","success","clientDisplay","ViewDocuments","roles","handleUserDetailsChange","preventDefault","handleMultiSelectManager","checked","handleMultiSelectClient","handleRoleChange","handleClientTypeChange","handleAddNewUserSubmit","handleBackButton","goBack","indexOf","getElementById","reset","placeholder","component","FormGroup","FormControlLabel","control","Checkbox","top","left","fontSize","AddDynamicField","IconButton","aria-label","submitNewFieldDetails","TextField","inputProps","maxLength","startIcon","AddNewVessel","handleVesselDetailsChange","inputs","querySelectorAll","otherFields","displayOtherFields","handleNewFieldDetailsChange","newFields","handleAddNewVesselSubmit","defaultValue","ViewAllVessels","isEditPage","some","f","showAddVessel","canRefreshRows","editable","inputType","canEdit","canDelete","IMO","flag","built","DWT","draft","LOA","beam","GRT","NRT","TPC","grainCapacity","baleCapacity","cranes","grabs","holdsHatches","vesselType","refreshRows","window","reload","actionsRow","actions","FillVoyageDetails","voyageDetails","shipper","loadPortAgent","receiver","onHireSurveyor","offHireSurveyor","bunkerSupplier","bunkerTrader","pniInsurance","weatherRoutingCompany","fieldVisibility","handleChartererNameChange","handleVesselNameChange","handleAdminChange","handleDateFieldChange","handleCheckBoxChange","sort","handleVesselDetailSubmit","toString","defaultChecked","maxDate","placeholderText","ViewVoyageDetails","voyageList","getPopupContent_OtherFields","getPopupContent_FieldVisibility","showAddVoyage","showBackButton","dischargePortAgent","right","ShowDropDownAdmin","clients","allClients","vessels","allVslForSelectedClient","dates","allCpDatesForSelectedClient","selectedClient","handleClientListChange","isDisabled","selectedVessel","handleVesselListChange","selectedCpDate","handleCpDateChange","ViewPerformanceModule","obj","original","actual","actual$","original$","ViewPerformanceDetails","portDetails","allCpDates","allVessels","Set","tcHire","addressCommission","showTable","bunkerIFOAct","bunkerIFOOrg","bunkerMDOAct","bunkerMDOOrg","dischargePortDAAct$","dischargePortDAOrg$","dischargePortDelay","intermediatePortDelay","loadPortDAAct$","loadPortDAOrg$","loadPortDelay","freightAct","freightOrg","totalAct","totalOrg","voyageDays","CargoQuantityAct","CargoQuantityOrg","ILOHCandCVEAct$","ILOHCandCVEOrg$","PNIInsuranceAct$","PNIInsuranceOrg$","bunkerSurveyCostBendsAct$","bunkerSurveyCostBendsOrg$","despatchPaidAct$","despatchPaidOrg$","otherExpenseOrg$","otherExpenseAct$","wXRoutingExpenseAct$","wXRoutingExpenseOrg$","demmurrageReceivedOrg$","demmurrageReceivedAct$","HraWarRiskOrg$","HraWarRiskAct$","remarks","showAddPerformance","showEditPerformance","consumption","price","bunkerIFOOrg$","bunkerIFOAct$","bunkerMDOOrg$","bunkerMDOAct$","PrivateRoute","rest","from","PerformanceModule","getOriginalValue","getActualValue","updateOriginal$","commonFunction","updateActual$","localObj","onOriginalActualChange","prevProps","notifyRequired","prevState","snapshot","updateAndNotify","parseFloat","muitpleItem","getValue","FillPerformanceDetails","isEditContinue","handlePerformanceDetailsChange","getTotalOrg","getTotalAct","toFixed","handlePerformanceDetailSubmit","tcHireChange","addressCommissionChange","onVoyageDaysChange","onLoadPortDelayChange","onDischargePortDelayChange","onIntermediatePortDelayChange","handleIFOchange","handleIFOChange","handleMDOChange","vessel","vId","str","split","total","substr","App","path","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a95dd37.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    items: [],\r\n    apiData: [],\r\n};\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD': {\r\n            return Object.assign({}, state, {\r\n                items: state.items.concat(action.payload)\r\n            });\r\n        }\r\n        case 'DATA-LOADED': {\r\n            return Object.assign({}, state, {\r\n                apiData: state.apiData.concat(action.finalData)\r\n            });\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nexport default function* watcherSaga() {\r\n    yield takeEvery('APICALL', workerFunction)\r\n}\r\nfunction* workerFunction() {\r\n    try {\r\n        const finalData = yield call(getAPIData);\r\n        //const finalResponse = yield finalData.json();\r\n        yield put({ type: 'DATA-LOADED', finalData });\r\n    }\r\n    catch (e) {\r\n        yield put({ type: 'DATA-ERROR', finalData: e });\r\n    }\r\n}\r\nfunction getAPIData() {\r\n    return fetch('https://jsonplaceholder.typicode.com/posts').then((response) =>\r\n        response.json()\r\n    );\r\n    // return fetch('https://jsonplaceholder.typicode.com/posts').then(function(response) {\r\n    // response.json();\r\n    // })\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers/reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport watcherSaga from '../sagas/saga';\r\n\r\nconst initializeMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(initializeMiddleware));\r\ninitializeMiddleware.run(watcherSaga);\r\nexport default store;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <section className=\"about_us_2 about_us_2_animated\">\r\n                <div className=\"about_text\">\r\n                    <p className=\"main anim animated\">about bulkcom shipping</p>\r\n                    <div className=\"pic_cont anim animated\">\r\n                    </div>\r\n                    <p className=\"sub anim4 animated\">WE'VE BUILT OUR REPUTATION ON EXCELLENCE IN SHIP CHARTERING BOTH VOYAGE AND TIME CHARTER, WITH A CONSTANT FOCUS ON SERVING OUR CUSTOMERS.<br />\r\n                        We are experts in planning, executing and handling any dry cargo movement in bulk across the globe.\r\n                        We have booked over 5Million MT of dry bulk cargo on all kinds of vessel ranging from handy to cape size with special focus on supramax category.<br />\r\n                        When trust us to charter vessels exclusively through us, you'll know that your shipments are in the hands of skilled, qualified professionals with decades of experience in shipping.<br /><br />\r\n                        Contact us today to discuss your current and future chartering needs. We have trained friendly staff to provide the best customer service in the industry.\r\n\r\n                        <br /><br /><b>WHY CHOOSE US?</b><br />\r\n                        WE AIM TO PROVIDE LEVERAGE TO YOUR BUSINESS BACKED BY OUR MARKET INFORMATION<br />\r\n                        Your freight is too important to trust to amateur and most important aspect for a trade deal to conclude. We deliver every time, and that's a promise.<br /><br />\r\n\r\n                        WE KNOW THE INS AND OUTS OF SHIPPING<br />\r\n                        The difference, in one word, is experience. Our team is fully capable to provide you the best service in industry.<br /><br />\r\n\r\n                        WE'RE NOT JUST A BROKER, WE'RE YOUR PARTNER<br />\r\n                        Shipping needs fluctuate, grow, and evolve in ways you might not be able to anticipate. We can help create not just a solution, but a entire shipping strategy.<br /><br />\r\n                        {/* <span className=\"more_btn\">\r\n                            more\r\n                        <img src=\"https://aegisuae.com/resources/img/arrow_down_white.svg\" alt=\"arrow\" className=\"arrow\" />\r\n                        </span> */}\r\n                        {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                        <span className=\"sub_more\">Our Trading efforts are currently focused on Bulk, Limestone, Dolomite, Gypsum, and Coal. We also have our own fleet of Chartered in tonnage and Dry Bulk Vessels to provide end to end solutions to our Clients.\r\n                        Our business endeavours tirelessly to create strong foundations of trust with all stake holders of the organisation.\r\n                        The company specializes in Value Addition with the supply chain. Our primary objective is to cater to and exceed our clients expectations in a timely and professional manner.\r\n                The Group is on the cusp of massive expansions and business growth and has been growing from strength to strength supported with the faith our customers, suppliers and employees repose on the organisation.</span>\r\n                    </p>\r\n                    {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link_2\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass Location extends Component {\r\n    static defaultProps = {\r\n        center: {\r\n          lat: 59.95,\r\n          lng: 30.33\r\n        },\r\n        zoom: 11\r\n      };\r\n      render() {\r\n        return (\r\n            <div>\r\n                <section className='about_us_2 about_us_2_animated'>\r\n                    <div className='about_text'>\r\n                    <div style={{ height: '100vh', width: '100%' }}>\r\n                            <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: 'AIzaSyAtqgKhqfCi91s3GL1SM5HEt9pfqQvnZDw' }}\r\n                            defaultCenter={this.props.center}\r\n                            defaultZoom={this.props.zoom}\r\n                            >\r\n                            <AnyReactComponent\r\n                                lat={59.955413}\r\n                                lng={30.337844}\r\n                                text='My Marker'\r\n                            />\r\n                            </GoogleMapReact>\r\n                        </div>\r\n                    </div>\r\n                    </section>\r\n            </div>\r\n        )\r\n      }\r\n}\r\nexport default Location;","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nexport default function Spinner() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <CircularProgress color='primary' />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst DisplaySelectedVesselDetails = props => {\r\n    var pairs = [];\r\n    const getDisplayKey = key => {\r\n        key = key.charAt(0).toUpperCase() + key.slice(1)\r\n        return key.replace(/([A-Z])/g, ' $1').trim()\r\n    }\r\n\r\n    for (var key in props.vesselDetails) {\r\n        pairs.push(\r\n            <tr key={key}>\r\n                <td>\r\n                    <label>\r\n                        {getDisplayKey(key)}\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    {props.vesselDetails[key]}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <table style={{marginTop:'5%'}}>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    {pairs}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplaySelectedVesselDetails","import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nclass PieCharts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: 'pie',\r\n        },\r\n        labels: Object.keys(props.vesselDetails),\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }]\r\n},\r\n      series: Object.values(props.vesselDetails),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='row' />\r\n\r\n        <div className='row'>\r\n          <div className='col percentage-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='pie'\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PieCharts;\r\n\r\n/*import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {},\r\n      series: [44, 55, 41, 17, 15],\r\n      labels: ['A', 'B', 'C', 'D', 'E']\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='row' />\r\n\r\n        <div className='row'>\r\n          <div className='col percentage-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='pie'\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n */","import axios from 'axios';\r\n\r\nclass API {\r\n    apiUrl = '';\r\n\r\n    checkUsername = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/checkUsername', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    updatePassword = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/updatePassword', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    login = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/login', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertUserDetails = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/insertUserDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/insertVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertPerformanceData = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/insertPerformanceData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVoyageData = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/insertVoyageData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllVesselsPerformance = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getAllVessels/' + data.isDetailsFilled);\r\n    }\r\n\r\n    getAllVoyage = data => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyage/' + data.companyName, {\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n    }\r\n\r\n    getAllUserDetails = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllUserDetails');\r\n    }\r\n\r\n    getAllClientList = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllClientList');\r\n    }\r\n\r\n    getAllVesselsList = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselsList');\r\n    }\r\n\r\n    getAllVesselsDetails = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselDetails');\r\n    }\r\n\r\n    getAllVoyageDetails = () => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyageDetails');\r\n    }\r\n\r\n    fillPerformanceDetails = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/fillPerformanceDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVesselDetails = data => {\r\n        return axios.delete(this.apiUrl + '/vesselDetails/' + data);\r\n    }\r\n\r\n    updateVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/updateVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVoyageDetails = data => {\r\n        return axios.delete(this.apiUrl + '/voyageDetails/' + data);\r\n    }\r\n\r\n    updateVoyageDetails = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/updateVoyageDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getPortDetails = data => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getPortDetails/' + data.userName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n    \r\n    getPerformanceDetails = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getPerformanceDetails/' + data.chartererName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n\r\n    getCompletePerformanceDetailsForView = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getCompletePerformanceDetailsForView/' + data.userName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n\r\n};\r\n\r\nconst api = new API();\r\nexport default api;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport Popup from 'reactjs-popup';\r\nimport DisplaySelectedVesselDetails from './DisplaySelectedVesselDetails';\r\nimport { withRouter } from 'react-router-dom'\r\nimport PieCharts from '../../components/Others/PieCharts';\r\nimport api from '../api';\r\n\r\nclass ClientHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getAllVoyage();\r\n        this.state = {\r\n            vesselList: [],\r\n            vesselDetails: {\r\n                vesselName: '',\r\n                vesselSize: '',\r\n                cpDate: '',\r\n                loadPort: '',\r\n                dischargePort: '',\r\n                cargo: '',\r\n                cargoIntake: '',\r\n                ownerName: ''\r\n            },\r\n            tableData: [],\r\n            performanceDetails: {},\r\n            isPeformancePage: false,\r\n            error: false,\r\n            userName: '',\r\n        }\r\n    }\r\n\r\n    getAllVoyage = async () => {\r\n       await api.getAllVoyage({ 'companyName': localStorage.getItem('companyName') }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    vesselList: res.data.vesselList,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                    error: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    error: true,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handlePerformanceClick = e => {\r\n        const { vesselList } = this.state;\r\n        const c = vesselList.find(m => m['_id'] === e.target.id);\r\n        this.props.history.push({\r\n            pathname: '/CheckPerformance',\r\n            state: { detail: c }\r\n        });\r\n    }\r\n\r\n\r\n    // handleVesselClick = e => {\r\n    //     const { vesselList } = this.state;\r\n    //     const c = vesselList.find(m => m['_id'] === e.target.id);\r\n    //     console.log(c.vesselName);\r\n    //     alert(c.vesselName)\r\n    // }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'checkPerformance':\r\n                val = <button style={{ color: 'blue', textAlign: 'center' }} id={rowId} type='button' onClick={this.handlePerformanceClick}>Check Performance</button>;\r\n                break;\r\n            case 'vesselName':\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        let showData;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Fixture List',\r\n                keyColumn: 'id',\r\n                font: 'Arial',\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: '10px'\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: 'vesselName',\r\n                            label: 'Vessel Name',\r\n                            colSize: '50px',\r\n                            dataType: ''\r\n                        },\r\n                        {\r\n                            id: 'cpDate',\r\n                            label: 'CP Date',\r\n                            colSize: '50px',\r\n                        },\r\n                        {\r\n                            id: 'checkPerformance',\r\n                            label: 'Performance',\r\n                            colSize: '50px',\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList.map(({ vesselName, cpDate, _id }) => ({ vesselName, cpDate, id: _id, checkPerformance: true }))\r\n                    ],\r\n                }\r\n            }\r\n\r\n            const ourCount = {};\r\n            let previousYearDate = new Date();\r\n            const pastYear = previousYearDate.getFullYear() - 1;\r\n            previousYearDate.setFullYear(pastYear);\r\n            vesselList.forEach(v => {\r\n                if (!ourCount[v.cargo]) {\r\n                    ourCount[v.cargo] = 0;\r\n                }\r\n                if (new Date(v.cpDate).getTime() <= new Date().getTime() && new Date(v.cpDate).getTime() > previousYearDate.getTime()) {\r\n                    ourCount[v.cargo] += parseInt(v.cargoIntake);\r\n                }\r\n            });\r\n\r\n\r\n            showData = < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                <div style={{ marginTop: '15%', marginLeft: '0%' }}>\r\n                    {/* <DisplaySelectedVesselDetails vesselDetails={ourCount} /> */}\r\n                    <PieCharts vesselDetails={ourCount} />\r\n\r\n                </div>\r\n            </div >\r\n        } else {\r\n            showData = <div style={{ marginTop: '15%' }}> Oops!! There are no business details for you.</div>\r\n        }\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <span>\r\n                    <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                    {showData}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        let vesselDetails = vesselList.find(m => m['_id'] === rowId);\r\n        vesselDetails = (({ vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }) => (\r\n            { vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }))(vesselDetails);\r\n\r\n        const content = <div>\r\n            <Popup trigger={<a id={rowId} style={{ color: 'blue', textAlign: 'center', textDecoration: 'underline', cursor: 'pointer' }}> {cellVal} </a>}\r\n                modal closeOnDocumentClick >\r\n                <div className='content'>\r\n                    <DisplaySelectedVesselDetails vesselDetails={vesselDetails} />\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientHome);\r\n","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\nclass LeftMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            menuItems: [\r\n                {\r\n                    link: 'View All User',\r\n                    title: 'User Manager',\r\n                    linksTo: 'viewAllUsers', titles: ['Add New User', 'View All Users', 'Edit All Users'],\r\n                },\r\n                {\r\n                    link: 'View Vessel',\r\n                    title: 'Vessel Manager',\r\n                    linksTo: 'viewAllVessels', titles: ['Add New Vessel', 'View All Vessels', 'Edit Vessel Details'],\r\n\r\n                },\r\n                {\r\n                    link1: 'View Voyage Details',\r\n                    title: 'Fill Details',\r\n                    link2: 'View Performance Details',\r\n                    linksTo1: 'viewVoyageDetails', titles1: ['Fill Voyage Details', 'View Voyage Details', 'Edit Voyage Details'],\r\n                    linksTo2: 'viewPerformanceDetails', titles2: ['Fill Performance Details', 'View Performance Details', 'Edit Performance Details'],\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { menuItems } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Grid item md={3} lg={3} className='left left-section'>\r\n                    <div className=\"left-menu-wrapper\">\r\n\r\n                        <div className='content-wrapper'>\r\n                            <div className='title'>\r\n                                <h1 className='heading_1'>Bulk Shipping</h1></div>\r\n                            <div className='menu-items-wrappers'>\r\n                                <ul className='menu-items'>\r\n                                    {menuItems && menuItems.length && menuItems.map((item, index) => {\r\n                                        if (index === 2) {\r\n                                            return <li className='list-item' key={item.title}>\r\n                                                <span>{item.title}</span>\r\n                                                <Link style={{ cursor: 'pointer' }} to={item.linksTo1} navigation={item.links1} title={item.titles1}>{item.link1}</Link>\r\n                                                <Link style={{ cursor: 'pointer' }} to={item.linksTo2} navigation={item.links2} title={item.titles2}>{item.link2}</Link>\r\n                                            </li>\r\n                                        }\r\n                                        else {\r\n                                            return <li className='list-item' key={item.titles}>\r\n                                                <span>{item.title}</span>\r\n                                                <Link style={{ cursor: 'pointer' }} to={item.linksTo} navigation={item.links} title={item.titles}>{item.link}</Link>\r\n                                            </li>\r\n                                        }\r\n                                    })}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default LeftMenu","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport LeftMenu from '../Common/LeftMenu'\r\n\r\nclass AdminHome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menuItems: [\r\n                {\r\n                    link: 'View All User',\r\n                    title: 'User Manager',\r\n                    links: ['addNewUser', 'viewAllUsers', 'editUserDetails'], titles: ['Add New User', 'View All Users', 'Edit All Users'],\r\n                },\r\n                {\r\n                    link: 'View Vessel',\r\n                    title: 'Vessel Manager',\r\n                    links: ['addNewVessel', 'viewAllVessels', 'editVesselDetails'], titles: ['Add New Vessel', 'View All Vessels', 'Edit Vessel Details'],\r\n\r\n                },\r\n                {\r\n                    link1: 'Fill Voyage Details',\r\n                    title: 'Fill Details',\r\n                    link2: 'Fill Performance Details',\r\n                    links1: ['fillVoyageDetails', 'viewVoyageDetails', 'editVoyageDetails'], titles1: ['Fill Voyage Details', 'View Voyage Details', 'Edit Voyage Details'],\r\n                    links2: ['fillPerformanceDetails', 'viewPerformanceDetails', 'editPerformanceDetails'], titles2: ['Fill Performance Details', 'View Performance Details', 'Edit Performance Details'],\r\n                },\r\n            ],\r\n            navigateLinks: []\r\n        }\r\n    }\r\n\r\n    history;\r\n\r\n    render() {\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <LeftMenu menuItems={this.state.menuItems} />\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminHome);","\r\nimport React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nclass ManagerHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let localRoles = JSON.parse(localStorage.getItem('managerRoles'));\r\n        if (Object.keys(localRoles).length) {\r\n            this.state = {\r\n                arrayItemsRoles: [\r\n                    { role: localRoles.AddUser, to: '/addNewUser', text: 'Add New User' },\r\n                    { role: localRoles.ViewUsers, to: '/viewAllUsers', text: 'View All Users' },\r\n                    { role: localRoles.EditUser, to: '/editUserDetails', text: 'Edit User Details' },\r\n\r\n                    { role: localRoles.AddVessel, to: '/addNewVessel', text: 'Add New Vessel' },\r\n                    { role: localRoles.ViewVessels, to: '/viewAllVessels', text: 'View All Vessels' },\r\n                    { role: localRoles.EditVessels, to: '/editVesselDetails', text: 'Edit Vessel Details' },\r\n\r\n                    { role: localRoles.FillVoyage, to: '/fillVoyageDetails', text: 'Fill Voyage Details' },\r\n                    { role: localRoles.ViewVoyage, to: '/viewVoyageDetails', text: 'View Voyage Details' },\r\n                    { role: localRoles.EditVoyage, to: '/editVoyageDetails', text: 'Edit Voyage Details' },\r\n\r\n                    { role: localRoles.FillPerformance, to: '/fillPerformanceDetails', text: 'Fill Performance Details' },\r\n                    { role: localRoles.ViewPerformance, to: '/viewPerformanceDetails', text: 'View Performance Details' },\r\n                    { role: localRoles.EditPerformance, to: '/editPerformanceDetails', text: 'Edit Performance Details' }]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.arrayItemsRoles.map(function (item, i) {\r\n            return item.role ?\r\n                (<Link style={{ width: '300px', height: '40px', marginRight: '80px' }} key={i} to={item.to}> {item.text} </Link>) :\r\n                ''\r\n        }.bind(this));\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    {data}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\nexport default withRouter(ManagerHome);","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Grid } from '@material-ui/core';\r\nimport LeftMenu from '../../../components/Common/LeftMenu';\r\nclass ViewAllUsers extends Component {\r\n\r\n    localState = {\r\n        clientList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n    }\r\n\r\n    componentDidMount = async e => {\r\n        const res = await api.getAllUserDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                clientList: res.data.clientList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleViewVesselList = e => {\r\n        const { clientList } = this.state;\r\n        const cl = clientList.find(m => m['id'] === e.target.id);\r\n        if (cl && cl.companyName) {\r\n            this.props.history.push({\r\n                pathname: '/viewVoyageDetails',\r\n                state: { userName: cl.companyName }\r\n            });\r\n        }\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'viewVesselList':\r\n                const { clientList } = this.state;\r\n                const cl = clientList.find(m => m['id'] === rowId);\r\n                if (cl && cl.role === 'Client') {\r\n                    val = <button style={{ color: 'blue', textAlign: 'center', marginLeft: '20%' }} id={rowId} type='button' onClick={this.handleViewVesselList}>View Vessels</button>;\r\n                } else if (cl && cl.role === 'Manager') {\r\n                    val = this.getPopupContent_ManagerRoles(cl);\r\n                } else {\r\n                    val = ''\r\n                }\r\n                break;\r\n            default:\r\n                val = <div style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    getPopupContent_ManagerRoles = (vsl) => {\r\n        let content = <p></p>;\r\n        let active = [];\r\n        if (vsl && vsl.managerRoles && Object.keys(vsl.managerRoles).length) {\r\n            const identifiers = Object.keys(vsl.managerRoles)\r\n            active = identifiers.filter(function (id) {\r\n                return vsl.managerRoles[id]\r\n            })\r\n            if (active && active.length) {\r\n                active = active.map(m => m.replace(/([A-Z])/g, ' $1').trim());\r\n            }\r\n            return content =\r\n                <Popup trigger={\r\n                    <button style={{ color: 'blue', textAlign: 'center', marginLeft: '20%' }} type='button'>View Roles</button>\r\n                }\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'>\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={active} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n    render() {\r\n        let { clientList } = this.state;\r\n        let showAddUser = false;\r\n        if ((localStorage.getItem('userRole').toLowerCase() === 'admin') || (localStorage.getItem('managerRoles') && JSON.parse(localStorage.getItem('managerRoles')).AddUser)) {\r\n            showAddUser = true;\r\n        }\r\n        const options = {\r\n            title: 'User List',\r\n            keyColumn: 'id',\r\n            font: 'Arial',\r\n            dimensions: {\r\n                datatable: {\r\n                    width: '90%',\r\n                    height: '648px',\r\n                },\r\n                row: {\r\n                    height: '10px'\r\n                }\r\n            },\r\n            stripped: true,\r\n            features: {\r\n                canSearch: true,\r\n                canDownload: true,\r\n                canPrint: true,\r\n                canOrderColumns: true,\r\n                rowsPerPage: {\r\n                    available: [5, 10, 25, 50, 100],\r\n                    selected: 10\r\n                },\r\n            },\r\n            data: {\r\n                columns: [\r\n                    {\r\n                        id: 'userName',\r\n                        label: 'User Name',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'displayName',\r\n                        label: 'Display Name',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'companyName',\r\n                        label: 'Company Name',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'role',\r\n                        label: 'Role',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'clientType',\r\n                        label: 'User Type',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'viewVesselList',\r\n                        label: 'View',\r\n                        colSize: '50px',\r\n                    },\r\n                ],\r\n                rows: [],\r\n            }\r\n        }\r\n\r\n        if (clientList && clientList.length) {\r\n            options.data.rows = [...clientList.map(({ userName, displayName, companyName, role, clientType, id, viewVesselList }) => ({ userName, displayName, companyName, role, clientType, id, viewVesselList: true }))\r\n            ]\r\n        }\r\n\r\n        return (\r\n            <Grid container direction='row' className='main-container'>\r\n                <LeftMenu />\r\n                <Grid item xs={12} md={9} lg={9}>\r\n                    <section className='right right-section'>\r\n                        <div className='right-container'>\r\n                            <section className='component-wrapper'>\r\n                                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                                {showAddUser ? (<Link className=\"addLink\" to='/addNewUser'>Add New User </Link>) : (<></>)}\r\n                                <div id='table' className={'tooltipBoundary'} style={{ margin: '2% 0 6% 2%', display: 'flex' }}>\r\n                                    <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                                </div >\r\n                            </section>\r\n                        </div>\r\n                    </section>\r\n                </Grid>\r\n            </Grid >\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllUsers;\r\n","import React from 'react';\r\nimport LoginHome from '../Login/LoginHome';\r\nimport ClientHome from '../Client/ClientHome';\r\nimport AdminHome from '../Admin/AdminHome';\r\nimport ManagerHome from '../Manager/ManagerHome';\r\nimport ViewAllUsers from '../Admin/user/ViewAllUsers'\r\n\r\nfunction Page(props) {\r\n    if (localStorage.getItem('authToken')) {\r\n        switch (localStorage.getItem('userRole').toLowerCase()) {\r\n            case 'admin':\r\n                return <ViewAllUsers/>;\r\n            case 'manager':\r\n                return <ViewAllUsers/>;\r\n            case 'client':\r\n                return <ClientHome/>;\r\n            default:\r\n                return <LoginHome />;\r\n        }\r\n    }\r\n    return <LoginHome />;\r\n}\r\nexport default Page","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../Others/Page'\r\nimport api from '../api'\r\n\r\nexport default class LoginHome extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: localStorage.getItem('authToken') ? true : false,\r\n        role: localStorage.getItem('userRole') ? localStorage.getItem('userRole') : '',\r\n        errorMsg: '',\r\n        error: localStorage.getItem('authToken') ? false : true\r\n    }\r\n\r\n    // handleLogoutClick = (e) => {\r\n    //     localStorage.setItem('authToken', '');\r\n    //     localStorage.setItem('userRole', '');\r\n    //     localStorage.setItem('userName', '');\r\n    //     this.setState({\r\n    //         isLoggedIn: false,\r\n    //         role: '',\r\n    //         errorMsg: '',\r\n    //         error: false,\r\n    //     });\r\n    // }\r\n\r\n    _handleSubmit = async ({\r\n        username,\r\n        password,\r\n        setSubmitting,\r\n        resetForm,\r\n    }) => {\r\n        this.setState(() => ({\r\n            isLoggedIn: false,\r\n            error: false,\r\n            role: '',\r\n        }));\r\n\r\n        let resp = await api.login({ username, password, });\r\n        resp = resp.data;\r\n        setSubmitting(false);\r\n        if (!resp.status) {\r\n            this.setState(() => ({\r\n                isLoggedIn: false,\r\n                errorMsg: resp.err,\r\n                error: true,\r\n                role: '',\r\n            }))\r\n            return;\r\n        } else {\r\n            this.setState(() => ({\r\n                isLoggedIn: true,\r\n                error: false,\r\n                errorMsg: '',\r\n            }))\r\n            localStorage.setItem('authToken', resp.token);\r\n            localStorage.setItem('userRole', resp.role);\r\n            localStorage.setItem('displayName', resp.displayName);\r\n            localStorage.setItem('userName', resp.userName);\r\n            localStorage.setItem('companyName', resp.companyName);\r\n            localStorage.setItem('managerRoles', resp.managerRoles ? JSON.stringify(resp.managerRoles): '');\r\n        }\r\n\r\n        resetForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                }}\r\n                validationSchema={object().shape({\r\n                    username: string().required('Please enter a valid email address.'),\r\n                    password: string().required('Password is required'),\r\n                })}\r\n                onSubmit={(\r\n                    { username, password },\r\n                    { setSubmitting, resetForm }\r\n                ) =>\r\n                    this._handleSubmit({\r\n                        username,\r\n                        password,\r\n                        setSubmitting,\r\n                        resetForm,\r\n                    })\r\n                }\r\n                render={props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isValid,\r\n                        isSubmitting,\r\n                    } = props\r\n\r\n                    const { error } = this.state;\r\n                    const authToken = localStorage.getItem('authToken');\r\n                    const userRole = localStorage.getItem('userRole');\r\n                    let showData;\r\n                    if (isSubmitting) {\r\n                        showData = <Spinner />\r\n                    } else if (userRole && !error) {\r\n                        showData = <div>\r\n                            <Page />\r\n                            {/* <LogoutButton onClick={this.handleLogoutClick} ></LogoutButton> */}\r\n                        </div>\r\n                    } else {\r\n                        showData = <div className='ForgotPasswordForm'>\r\n                            <Typography variant='h4' style={{ margin: '10px 0' }}> Login </Typography>\r\n                            <Paper className='form form--wrapper' elevation={10}>\r\n                                <form className='form' onSubmit={handleSubmit}>\r\n                                    <FormControl fullWidth margin='dense'>\r\n                                        <InputLabel htmlFor='username' error={Boolean(touched.username && errors.username)}>\r\n                                            {'Enter your username'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id='username'\r\n                                            name='username'\r\n                                            type='email'\r\n                                            required\r\n                                            autoComplete='off'\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.username && errors.username)} />\r\n                                        <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                                            {touched.username && errors.username ? errors.username : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        fullWidth\r\n                                        margin='dense'\r\n                                        error={Boolean(touched.password && errors.password)}>\r\n                                        <InputLabel htmlFor='password' error={Boolean(touched.password && errors.password)}>\r\n                                            {'Enter your password'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id='password'\r\n                                            name='password'\r\n                                            type='password'\r\n                                            autoComplete='off'\r\n                                            value={values.password}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.password && errors.password)}\r\n                                        />\r\n                                        <FormHelperText error={Boolean(touched.password && errors.password)}>\r\n                                            {touched.password && errors.password ? errors.password : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormHelperText error={Boolean(this.state.error)}>\r\n                                        {this.state.error ? this.state.errorMsg : ''}\r\n                                    </FormHelperText>\r\n                                    <Button\r\n                                        type='submit'\r\n                                        variant='contained'\r\n                                        size='small'\r\n                                        color='primary'\r\n                                        disabled={Boolean(!isValid || isSubmitting)}\r\n                                        style={{ margin: '16px' }}>\r\n                                        Login </Button>\r\n                                    <Link style={{ color: 'black' }} to='/forgotPassword'>Forgot Password !!</Link>\r\n                                </form>\r\n                            </Paper>\r\n                        </div>\r\n                    }\r\n                    return (\r\n                        showData\r\n                    )\r\n                }\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Zoom } from 'react-slideshow-image';\r\n\r\nconst images = [\r\n  '/assests/images/ship1.jpg',\r\n  '/assests/images/ship2.jpg',\r\n  '/assests/images/ship3.jpg',\r\n];\r\n\r\nconst zoomOutProperties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n  scale: 2,\r\n  arrows: true\r\n}\r\n\r\nconst SlideShow = () => {\r\n  return (\r\n    <div className='slide-container'>\r\n      <Zoom {...zoomOutProperties}>\r\n        {\r\n          images.map((each, index) => <img key={index} style={{ width: '100%' }} src={each} alt={each} />)\r\n        }\r\n      </Zoom>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SlideShow;","import React from 'react';\r\nimport Slideshow from './SlideShow';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=''>\r\n            <h2>Welcome to Bulkcom Shipping</h2>\r\n            <Slideshow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.toggleHeaderState = this.toggleHeaderState.bind(this);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n    this.state = {\r\n      showHeader: props.toggleState,\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      showHeader: !this.state.showHeader,\r\n    })\r\n  }\r\n\r\n  toggleHeaderState() {\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.showHeader ? 'menu_open menu' : 'menu'} id='main_menu'>\r\n        <div className='header_right'>\r\n          <div className='explore' id='menu_label'>explore</div>\r\n          <img src='https://aegisuae.com/resources/img/arrow_white.svg' alt='arrow' className='arrow' />\r\n          <button className='js-toggle-nav c-btn-nav -inited' id='menu_button' onClick={this.handleClick} >\r\n            <div className='c-btn-nav_burger'>\r\n              <span className='c-burger_top'></span>\r\n              <span className='c-burger_middle'></span>\r\n              <span className='c-burger_bottom'></span>\r\n              <div className='c-close-burger_top'></div>\r\n              <div className='c-close-burger_bottom'></div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div className={this.state.showHeader ? 'left_menu_open left_menu' : 'left_menu'} id='left_menu' scroll='no'>\r\n          <ul className={this.state.showHeader ? 'opened main_nav' : 'main_nav'} id='navigation'>\r\n            <li>\r\n              <Link className='' to='/' onClick={this.toggleHeaderState}>\r\n                Home\r\n              <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='' to='/about' onClick={this.toggleHeaderState}>\r\n                About\r\n            <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='' to='/location' onClick={this.toggleHeaderState}>\r\n                Locations\r\n            <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            {localStorage.getItem('authToken') ? (\r\n              <li>\r\n                <Link className='' to='/login' onClick={this.logoutAndToggleState}>\r\n                  Logout\r\n             <span className='menu_line'></span>\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n                <li>\r\n                  <Link className='' to='/login' onClick={this.toggleHeaderState}>\r\n                    Login\r\n              <span className='menu_line'></span>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Footer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer className='navbar navbar-dark bg-primary fixed-top'>\r\n        <div className='bottom_footer'>\r\n          <Link className='navbar-brand' to='/'>\r\n            Home\r\n            </Link>\r\n          <Link className='navbar-brand' to='/about'>\r\n            About\r\n            </Link>\r\n          <Link className='navbar-brand' to='/location'>\r\n            Locations\r\n            </Link>\r\n          {localStorage.getItem('authToken') ? (\r\n            <Link className='navbar-brand' to='/login' onClick={this.logoutAndToggleState}>\r\n              Logout\r\n             </Link>) : (\r\n              <Link className='navbar-brand' to='/login'>\r\n                Login\r\n                </Link>\r\n            )}\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React,{Component} from 'react';\r\n\r\nclass CheckPerformance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.location.state);\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                Check Performance\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CheckPerformance;","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem, getApiActionCal } from '../action/action';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addItem: item => {\r\n            dispatch(addItem(item))\r\n        },\r\n        getApiCallData: () => {\r\n            dispatch(getApiActionCal())\r\n        }\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        apiData: state.apiData\r\n    };\r\n}\r\n\r\nclass FirstComponentStateFul extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 1,\r\n            items: ['bunty', 'babli'],\r\n            apiData: []\r\n        }\r\n        this.itemList = '';\r\n        this.incrementCounter = this.incrementCounter.bind(this);\r\n        this.addItemTo = this.addItemTo.bind(this);\r\n        this.addItems = this.addItems.bind(this);\r\n        this.getApiCall = this.getApiCall.bind(this);\r\n    }\r\n    addItemTo(event) {\r\n        this.itemList = event.target.value;\r\n    }\r\n    addItems() {\r\n        this.props.addItem(this.itemList)\r\n    }\r\n    incrementCounter() {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n\r\n    }\r\n    getApiCall() {\r\n        this.props.getApiCallData();\r\n    }\r\n    componentDidUpdate() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    componentDidMount() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>you clicked it {this.state.count} times</p>\r\n                <button onClick={this.incrementCounter}></button>\r\n                <input type='text' onChange={this.addItemTo} />\r\n                <button onClick={this.addItems}></button>\r\n                <ul>\r\n                    {\r\n                        this.props.items.map(item =>\r\n                            <li key={item}>{item}</li>)\r\n                    }\r\n\r\n                </ul>\r\n                <button onClick={this.getApiCall}>get API call</button>\r\n                <ul>\r\n                    {\r\n                        this.props.apiData.map(item =>\r\n                            <li key={item.id}>{item.title}</li>)\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Form = connect(mapStatetoProps, mapDispatchToProps)(FirstComponentStateFul)\r\nexport default Form;","export function addItem(payload) {\r\n    return {\r\n        type: 'ADD',\r\n        payload\r\n    }\r\n}\r\nexport function getApiActionCal() {\r\n    return {\r\n        type: 'APICALL'\r\n    }\r\n}\r\nexport function getDataLoaded(payload) {\r\n    return {\r\n        type: 'DATA-LOADED',\r\n        payload\r\n    }\r\n}\r\nexport function getDataError() {\r\n    return {\r\n        type: 'DATA-ERROR'\r\n    }\r\n}","import React from 'react'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction='up' {...props} />\r\n}\r\n\r\nexport default function Alert({\r\n  handleClose,\r\n  handleSubmit,\r\n  isOpen,\r\n  hasTwoButtons = false,\r\n  submitButtonText,\r\n  title,\r\n  text,\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      transition={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby='alert-dialog-slide-title'\r\n      aria-describedby='alert-dialog-slide-description'\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{text}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {hasTwoButtons ? (\r\n          <Button onClick={handleClose} variant='raised' color='primary'>\r\n            {'CANCEL'}\r\n          </Button>\r\n        ) : null}\r\n        <Button onClick={handleSubmit} color='primary'>\r\n          {submitButtonText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, ref, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Alert from '../Others/Alert';\r\nimport api from '../api'\r\n\r\nexport default class FormPasswordReset extends Component {\r\n\r\n  state = {\r\n    passChangeSuccess: false,\r\n    user: this.props.username,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _renderModal = () => {\r\n    const onClick = () => {\r\n      this.setState(() => ({ passChangeSuccess: false }))\r\n    }\r\n\r\n    return (\r\n      <Alert\r\n        isOpen={this.state.passChangeSuccess}\r\n        onClose={this._handleClose}\r\n        handleSubmit={onClick}\r\n        title='Password Reset'\r\n        text='Your password was changed successfully'\r\n        submitButtonText='Done'\r\n      />\r\n    )\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    confirmPass,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n\r\n    let resp = await api.updatePassword({ user: this.state.user, confirmPass });\r\n    resp = resp.data;\r\n    setSubmitting(false);\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n      }));\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        passChangeSuccess: true,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newPass: '',\r\n          confirmPass: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          newPass: string().required('New password is required'),\r\n          confirmPass: string()\r\n            .oneOf([ref('newPass')], 'Passwords do not match')\r\n            .required('Password is required'),\r\n        })}\r\n        onSubmit={(\r\n          { newPass, confirmPass },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            newPass,\r\n            confirmPass,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n          return isSubmitting ? (\r\n            <Spinner />\r\n          ) : (\r\n              <Paper className='form form--wrapper' elevation={10}>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin='dense' error={Boolean(touched.newPass && errors.newPass)}>\r\n                    <InputLabel htmlFor='password-new' error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {'New Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='password-new'\r\n                      name='newPass'\r\n                      type='password'\r\n                      autoComplete='off'\r\n                      value={values.newPass}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.newPass && errors.newPass)} />\r\n                    <FormHelperText error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {touched.newPass && errors.newPass ? errors.newPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl fullWidth margin='dense' error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                    <InputLabel htmlFor='password-confirm' error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {'Confirm Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='password-confirm'\r\n                      name='confirmPass'\r\n                      type='password'\r\n                      value={values.confirmPass}\r\n                      autoComplete='off'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.confirmPass && errors.confirmPass)} />\r\n                    <FormHelperText error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {touched.confirmPass && errors.confirmPass ? errors.confirmPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type='submit'\r\n                    variant='raised'\r\n                    color='primary'\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }} >\r\n                    {'Reset Password'}\r\n                  </Button>\r\n                </form>\r\n                {this._renderModal()}\r\n              </Paper>\r\n            )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport FormPasswordReset from './FormPasswordReset';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport api from '../api'\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    passChangeSuccess: false,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    username,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    let resp = await api.checkUsername({ username });\r\n    setSubmitting(false);\r\n    resp = resp.data;\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n        error: true,\r\n        errorMsg: 'Username not found'\r\n      }))\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        username,\r\n        passChangeSuccess: true,\r\n        error: false,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          username: string().required('Please enter a valid email address.'),\r\n        })}\r\n        onSubmit={(\r\n          { username },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            username,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n\r\n          let showData;\r\n          if (isSubmitting) {\r\n            showData = <Spinner />\r\n          } else if (this.state.passChangeSuccess) {\r\n            showData = <div className='ForgotPasswordForm'>\r\n              <Typography variant='title' style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <FormPasswordReset username={this.state.username} />\r\n            </div>\r\n          } else {\r\n            showData = <div className='ForgotPasswordForm'>\r\n              <Typography variant='title' style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <Paper className='form form--wrapper' elevation={10}>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin='dense'>\r\n                    <InputLabel\r\n                      htmlFor='username'\r\n                      error={Boolean(touched.username && errors.username)}>\r\n                      {'Enter your username'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='username'\r\n                      name='username'\r\n                      type='email'\r\n                      autoComplete='off'\r\n                      value={values.username}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.username && errors.username)}\r\n                    />\r\n                    <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                      {touched.username && errors.username ? errors.username : ''}\r\n                    </FormHelperText>\r\n                    <FormHelperText error={Boolean(this.state.error)}>\r\n                      {this.state.error ? this.state.errorMsg : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type='submit'\r\n                    variant='raised'\r\n                    color='primary'\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }}>\r\n                    {'Check Username'}\r\n                  </Button>\r\n                </form>\r\n              </Paper>\r\n            </div>\r\n          }\r\n          return (\r\n            showData\r\n          )\r\n        }\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../../../css/Admin.css';\r\nimport Select from 'react-select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport api from '../../api';\r\nclass AddNewUser extends Component {\r\n\r\n  userDetails = {\r\n    userName: '',\r\n    companyName: '',\r\n    displayName: '',\r\n    password: '',\r\n    role: '',\r\n    clientType: '',\r\n    success: true,\r\n    errorMsg: '',\r\n    managerRoles: {\r\n      AddUser: false,\r\n      ViewUsers: false,\r\n      EditUser: false,\r\n      AddVessel: false,\r\n      ViewVessels: false,\r\n      EditVessels: false,\r\n      FillVoyage: false,\r\n      ViewVoyage: false,\r\n      EditVoyage: false,\r\n      FillPerformance: false,\r\n      ViewPerformance: false,\r\n      EditPerformance: false,\r\n    },\r\n    clientDisplay: {\r\n      ViewPerformance: false,\r\n      ViewVoyage: false,\r\n      ViewDocuments: false\r\n    }\r\n  };\r\n\r\n  roles = [{ label: 'Client', value: 'Client' }, { label: 'Manager', value: 'Manager' }];\r\n  clientType = [{ label: 'Owner', value: 'Owner' }, { label: 'Charterer', value: 'Charterer' }];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.userDetails };\r\n    this.handleUserDetailsChange = this.handleUserDetailsChange.bind(this);\r\n    this.handleRoleChange = this.handleRoleChange.bind(this);\r\n    this.handleClientTypeChange = this.handleClientTypeChange.bind(this);\r\n    this.handleAddNewUserSubmit = this.handleAddNewUserSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleUserDetailsChange = async e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleMultiSelectManager = (event) => {\r\n    console.log(event);\r\n    this.setState({\r\n      ...this.state, managerRoles: {\r\n        ...this.state.managerRoles,\r\n        [event.target.name]: event.target.checked\r\n      }\r\n    });\r\n  };\r\n\r\n  handleMultiSelectClient = (event) => {\r\n    console.log(event);\r\n    this.setState({\r\n      ...this.state, clientDisplay: {\r\n        ...this.state.clientDisplay,\r\n        [event.target.name]: event.target.checked\r\n      }\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  handleRoleChange = e => {\r\n    this.setState({\r\n      role: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  handleClientTypeChange = e => {\r\n    this.setState({\r\n      clientType: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  async handleAddNewUserSubmit(event) {\r\n    event.preventDefault();\r\n    const { userName, password, displayName, companyName, role, clientType, managerRoles, clientDisplay } = this.state;\r\n    if (!userName || !displayName || !password || !role || !companyName || (role === 'Client' && !clientType)) {\r\n      const { AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance } = managerRoles;\r\n      const error = [AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance].filter((v) => v).length < 1;\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (role === 'Manager') {\r\n      const { AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance } = managerRoles;\r\n      const error = [AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance].filter((v) => v).length < 1;\r\n      if (error) {\r\n        this.setState({\r\n          success: false,\r\n          errorMsg: 'Please select minimum one role'\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (role === 'Client') {\r\n      const { ViewDocuments, ViewPerformance, ViewVoyage } = clientDisplay;\r\n      const error = [ViewDocuments, ViewPerformance, ViewVoyage].filter((v) => v).length < 1;\r\n      if (error) {\r\n        this.setState({\r\n          success: false,\r\n          errorMsg: 'Please select minimum one role'\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!clientType) {\r\n      this.state.clientType = role;\r\n    }\r\n\r\n    let data = await api.insertUserDetails({ ...this.state });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      if (data.data.status.errorMsg.indexOf('duplicate key error') >= 0) {\r\n        data.data.status.errorMsg = 'Username already exits.'\r\n      }\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errorMsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('userDetailsForm').reset();\r\n      this.setState({\r\n        ...this.userDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New user created = ' + userName\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const role = this.state.role;\r\n    let tableData;\r\n    if (role === 'Client') {\r\n      const { ViewDocuments, ViewPerformance, ViewVoyage } = this.state.clientDisplay;\r\n      const error = [ViewDocuments, ViewPerformance, ViewVoyage].filter((v) => v).length < 1;\r\n      tableData = <><tr>\r\n        <td>\r\n          <label>\r\n            Client Type *\r\n        </label>\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.clientType.filter(({ value }) => value === this.state.clientType)}\r\n            onChange={this.handleClientTypeChange}\r\n            options={this.clientType}\r\n            placeholder='Select Client Type'\r\n            name='clientType'\r\n          />\r\n        </td>\r\n      </tr>\r\n        <tr>\r\n          <td>\r\n            <label>\r\n              Select Client Display *\r\n          </label>\r\n          </td>\r\n          <td>\r\n            <FormControl required error={error} component='fieldset' style={{ display: 'flex' }}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={ViewPerformance} onChange={this.handleMultiSelectClient} name='ViewPerformance' />}\r\n                  label='View Performance'\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={ViewVoyage} onChange={this.handleMultiSelectClient} name='ViewVoyage' />}\r\n                  label='View Voyage Details'\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={ViewDocuments} onChange={this.handleMultiSelectClient} name='ViewDocuments' />}\r\n                  label='View Documents'\r\n                />\r\n              </FormGroup>\r\n              <FormHelperText>Please select minimum one role</FormHelperText>\r\n            </FormControl>\r\n          </td>\r\n        </tr>\r\n      </>\r\n\r\n\r\n    } else if (role === 'Manager') {\r\n      const { AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance } = this.state.managerRoles;\r\n      const error = [AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance].filter((v) => v).length < 1;\r\n      tableData = <tr>\r\n        <td>\r\n          <label>\r\n            Select Manager Roles *\r\n          </label>\r\n        </td>\r\n        <td>\r\n          <FormControl required error={error} component='fieldset' style={{ display: 'flex' }}>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox checked={AddUser} onChange={this.handleMultiSelectManager} name='AddUser' />}\r\n                label='Add New User'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewUsers} onChange={this.handleMultiSelectManager} name='ViewUsers' />}\r\n                label='View All Users'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditUser} onChange={this.handleMultiSelectManager} name='EditUser' />}\r\n                label='Edit User Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={AddVessel} onChange={this.handleMultiSelectManager} name='AddVessel' />}\r\n                label='Add New Vessel'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewVessels} onChange={this.handleMultiSelectManager} name='ViewVessels' />}\r\n                label='View All Vessels'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditVessels} onChange={this.handleMultiSelectManager} name='EditVessels' />}\r\n                label='Edit Vessel Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={FillVoyage} onChange={this.handleMultiSelectManager} name='FillVoyage' />}\r\n                label='Fill Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewVoyage} onChange={this.handleMultiSelectManager} name='ViewVoyage' />}\r\n                label='View All Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditVoyage} onChange={this.handleMultiSelectManager} name='EditVoyage' />}\r\n                label='Edit Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={FillPerformance} onChange={this.handleMultiSelectManager} name='FillPerformance' />}\r\n                label='Fill Performance Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewPerformance} onChange={this.handleMultiSelectManager} name='ViewPerformance' />}\r\n                label='View All Performance Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditPerformance} onChange={this.handleMultiSelectManager} name='EditPerformance' />}\r\n                label='Edit Performance Details'\r\n              />\r\n            </FormGroup>\r\n            <FormHelperText>Please select minimum one role</FormHelperText>\r\n          </FormControl>\r\n        </td>\r\n      </tr>\r\n    }\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New User</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='userDetailsForm' onSubmit={this.handleAddNewUserSubmit} style={{ margin: '1%' }} autoComplete='off'>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    User Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='email' name='userName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Company Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='companyName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Display Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='displayName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Password *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='password' name='password' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Role *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Select\r\n                      value={this.roles.filter(({ value }) => value === this.state.role)}\r\n                      onChange={this.handleRoleChange}\r\n                      options={this.roles}\r\n                      placeholder='Select Role'\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              {tableData}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewUser;","\r\nimport React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { TextField, Button, IconButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddCircleTwoToneIcon from '@material-ui/icons/AddCircleTwoTone';\r\n\r\nconst AddDynamicField = props => {\r\n    return (\r\n        <>\r\n            <Popup trigger={<IconButton aria-label='Add new field'><AddCircleTwoToneIcon /></IconButton>}>\r\n                <form id='newFieldForm' autoComplete='off' onSubmit={props.submitNewFieldDetails}>\r\n                    <TextField\r\n                        required\r\n                        inputProps={{ maxLength: 25 }}\r\n                        id='fieldLabel'\r\n                        label='Field Label'\r\n                        autoComplete='off'\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        inputProps={{ maxLength: 50 }}\r\n                        id='fieldValue'\r\n                        label='Field Value'\r\n                        autoComplete='off'\r\n                    />\r\n                    <Button\r\n                        type='submit'\r\n                        style={{ marginTop: '10%' }}\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'\r\n                        startIcon={<SaveIcon />}> Save</Button>\r\n                </form>\r\n            </Popup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddDynamicField","import React, { Component } from 'react';\r\nimport '../../../css/Admin.css';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button';\r\nimport api from '../../api';\r\nimport AddDynamicField from '../common/AddDynamicField';\r\n\r\nclass AddNewVessel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vesselDetails: {\r\n        otherFields: {}\r\n      },\r\n      success: true,\r\n      errorMsg: '',\r\n      newFields: []\r\n    };\r\n    this.handleVesselDetailsChange = this.handleVesselDetailsChange.bind(this);\r\n    this.handleAddNewVesselSubmit = this.handleAddNewVesselSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.submitNewFieldDetails = this.submitNewFieldDetails.bind(this);\r\n    this.handleNewFieldDetailsChange = this.handleNewFieldDetailsChange.bind(this);\r\n  }\r\n\r\n  handleVesselDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const { vesselDetails } = this.state;\r\n    Object.assign(vesselDetails, { [name]: value });\r\n    this.setState({ success: true, errorMsg: '', vesselDetails });\r\n  }\r\n\r\n  handleBackButton = () => this.props.history.goBack();\r\n\r\n  async handleAddNewVesselSubmit(event) {\r\n    event.preventDefault();\r\n    const { vesselDetails } = this.state;\r\n    const data = await api.insertVesselDetails({ vesselDetails });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status['_message']\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        vesselDetails: {},\r\n        success: false,\r\n        errorMsg: 'Success!! New vessel created = ' + vesselDetails.vesselName,\r\n      });\r\n      document.getElementById('vesselDetailsForm').reset();\r\n      if (document.getElementById('newFieldForm')) {\r\n        document.getElementById('newFieldForm').reset();\r\n      }\r\n    }\r\n  }\r\n\r\n  submitNewFieldDetails = e => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    const inputs = e.target.querySelectorAll('input');\r\n    if (inputs && inputs.length) {\r\n      const { vesselDetails } = this.state;\r\n      const { otherFields } = vesselDetails;\r\n      Object.assign(otherFields, { [inputs[0].value]: inputs[1].value });\r\n      this.setState({ vesselDetails });\r\n      document.getElementById('newFieldForm').reset();\r\n      this.displayOtherFields();\r\n    }\r\n  };\r\n\r\n  handleNewFieldDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const { vesselDetails } = this.state;\r\n    const { otherFields } = vesselDetails;\r\n    Object.assign(otherFields, { [name]: value });\r\n    this.setState({ vesselDetails });\r\n  }\r\n\r\n  render() {\r\n    const { errorMsg, success, newFields } = this.state;\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' size='small' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}> Back </Button>\r\n        <h2>Add New Vessel</h2>\r\n        <AddDynamicField submitNewFieldDetails={this.submitNewFieldDetails} />\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!success)}>\r\n          {success ? '' : errorMsg}\r\n        </FormHelperText>\r\n\r\n        <form id='vesselDetailsForm' onSubmit={this.handleAddNewVesselSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='vesselName' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IMO *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='IMO' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    DWT (MT) *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DWT' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Flag\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='flag' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Type\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='vesselType' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Built Year\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='built' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Draft (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='draft' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    LOA (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='LOA' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Beam (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='beam' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    GRT (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='GRT' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    NRT (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='NRT' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    TPC (MT/CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='TPC' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Holds/Hatches\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='holdsHatches' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grain Capacity (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='grainCapacity' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bale Capacity (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='baleCapacity' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cranes (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cranes' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grabs (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='grabs' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              {newFields}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayOtherFields() {\r\n    const otherFields = this.state.vesselDetails.otherFields;\r\n    let data = [];\r\n    if (otherFields && Object.keys(otherFields).length) {\r\n      const keys = Object.keys(otherFields);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        data.push(<tr key={i}>\r\n          <td key={keys[i]}>\r\n            <label>\r\n              {keys[i]}\r\n            </label>\r\n          </td>\r\n          <td key={otherFields[keys[i]]}>\r\n            <input type='text' maxLength={50} required name={keys[i]} onChange={this.handleNewFieldDetailsChange} defaultValue={otherFields[keys[i]]} />\r\n          </td>\r\n        </tr>)\r\n      }\r\n    }\r\n    this.setState({ newFields: data });\r\n  }\r\n\r\n}\r\n\r\nexport default AddNewVessel;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Button } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport LeftMenu from '../../../components/Common/LeftMenu';\r\n\r\nclass ViewAllVessels extends Component {\r\n\r\n    localState = {\r\n        vesselList: [],\r\n        isEditPage: true,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (props && props.history && props.history.location.pathname === '/editVesselDetails') {\r\n            this.localState.isEditPage = true;\r\n        }\r\n        if (localStorage.getItem('managerRoles')) {\r\n            this.localState.isEditPage = JSON.parse(localStorage.getItem('managerRoles')).EditVessels;\r\n        }\r\n        this.state = { ...this.localState };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await api.getAllVesselsDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                vesselList: res.data.vesselList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'otherFields':\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div title={cellVal} style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList, isEditPage } = this.state;\r\n        let showAddVessel = false;\r\n        if ((localStorage.getItem('userRole').toLowerCase() === 'admin') || (localStorage.getItem('managerRoles') && JSON.parse(localStorage.getItem('managerRoles')).AddVessel)) {\r\n            showAddVessel = true;\r\n        }\r\n        const options = {\r\n            title: 'Vessel List',\r\n            keyColumn: '_id',\r\n            font: 'Arial',\r\n            dimensions: {\r\n                datatable: {\r\n                    width: '90%',\r\n                    height: '648px',\r\n                },\r\n                row: {\r\n                    height: '10px'\r\n                }\r\n            },\r\n            stripped: true,\r\n            features: {\r\n                canSearch: true,\r\n                canDownload: true,\r\n                canPrint: true,\r\n                canOrderColumns: true,\r\n                canRefreshRows: true,\r\n                rowsPerPage: {\r\n                    available: [5, 10, 25, 50, 100],\r\n                    selected: 10\r\n                },\r\n            },\r\n            data: {\r\n                columns: [\r\n                    {\r\n                        id: 'vesselName',\r\n                        label: 'Vessel Name',\r\n                        colSize: '80px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'IMO',\r\n                        label: 'IMO',\r\n                        colSize: '80px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'DWT',\r\n                        label: ' DWT (MT)',\r\n                        colSize: '80px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'flag',\r\n                        label: 'Flag',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'vesselType',\r\n                        label: 'Vessel Type',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'built',\r\n                        label: 'Built Year',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'draft',\r\n                        label: 'Draft',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'LOA',\r\n                        label: 'LOA (M)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input',\r\n                    }, {\r\n                        id: 'beam',\r\n                        label: 'Beam (M)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'GRT',\r\n                        label: 'GRT (MT)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'NRT',\r\n                        label: 'NRT (MT)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'TPC',\r\n                        label: 'TPC (MT/CBM)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'holdsHatches',\r\n                        label: 'Holds/Hatches',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'grainCapacity',\r\n                        label: 'Grain Capacity (CBM)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'baleCapacity',\r\n                        label: 'Bale Capacity (CBM)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    },\r\n                    {\r\n                        id: 'cranes',\r\n                        label: 'Cranes (MT)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    },\r\n                    {\r\n                        id: 'grabs',\r\n                        label: 'Grabs (CBM)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'otherFields',\r\n                        label: 'Other Details',\r\n                        colSize: '80px',\r\n                        editable: false,\r\n                    }\r\n                ],\r\n                rows: [],\r\n            }\r\n        }\r\n\r\n        if (isEditPage) {\r\n            options.features.canEdit = true;\r\n            options.features.canDelete = true;\r\n        }\r\n\r\n        if (vesselList && vesselList.length) {\r\n            options.data.rows = [\r\n                ...vesselList.map(({ vesselName, IMO, flag, built, DWT, draft, LOA, beam, GRT, NRT, TPC, grainCapacity, baleCapacity, cranes, grabs, holdsHatches, vesselType, _id, otherFields }) => ({ vesselName, IMO, flag, built, DWT, draft, LOA, beam, GRT, NRT, TPC, grainCapacity, baleCapacity, cranes, grabs, holdsHatches, vesselType, _id, otherFields }))\r\n            ]\r\n        }\r\n\r\n        this.refreshRows = () => window.location.reload();\r\n\r\n        this.actionsRow = async e => {\r\n            if (!e || !e.type) {\r\n                return;\r\n            }\r\n\r\n            switch (e.type) {\r\n                case 'save':\r\n                    await api.updateVesselDetails(e.payload);\r\n                    break;\r\n                case 'delete':\r\n                    let resp = await api.deleteVesselDetails(e.payload['_id']);\r\n                    if (resp.data.status) {\r\n                        vesselList = vesselList.filter(f => f['_id'] !== e.payload['_id']);\r\n                        options.data.rows = vesselList;\r\n                    } else {\r\n                        this.refreshRows();\r\n                    }\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Grid container direction='row' className='main-container'>\r\n                <LeftMenu />\r\n                <Grid item xs={12} md={9} lg={9}>\r\n                    <section className='right right-section'>\r\n                        <div className='right-container'>\r\n                            <section className='component-wrapper'>\r\n                                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                                {showAddVessel ? (<Link className=\"addLink\" to='/addNewVessel'>Add New Vessel</Link>) : (<></>)}\r\n                                <div id='table' className={'tooltipBoundary'} style={{ margin: '2% 0 6% 2%', display: 'flex' }}>\r\n                                    <Datatable options={options} stripped actions={this.actionsRow} refreshRows={this.refreshRows} CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                                </div >\r\n                            </section>\r\n                        </div>\r\n                    </section>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        if (!vesselList.some(f => f.otherFields)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = vesselList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.otherFields && Object.keys(vsl.otherFields).length) {\r\n            return content =\r\n                <Popup\r\n                    trigger={\r\n                        <Button\r\n                            variant='contained'\r\n                            size='small'\r\n                            color='primary'\r\n                        >\r\n                            Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'\r\n                >\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.otherFields} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ViewAllVessels;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../../../css/Admin.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Select from 'react-select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport api from '../../api';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport AddDynamicField from '../common/AddDynamicField';\r\n\r\nclass FillVoyageDetails extends Component {\r\n\r\n  localState = {\r\n    voyageDetails: {\r\n      chartererName: '',\r\n      vesselName: '',\r\n      vesselSize: '',\r\n      cpDate: new Date(),\r\n      loadPort: '',\r\n      cargo: '',\r\n      cargoIntake: '',\r\n      ownerName: '',\r\n      shipper: '',\r\n      loadPortAgent: '',\r\n      dischargePort: '',\r\n      receiver: '',\r\n      onHireSurveyor: '',\r\n      offHireSurveyor: '',\r\n      bunkerSupplier: '',\r\n      bunkerTrader: '',\r\n      pniInsurance: '',\r\n      weatherRoutingCompany: '',\r\n      fieldVisibility: {},\r\n      otherFields: {}\r\n    },\r\n    clientList: [],\r\n    vesselList: [],\r\n    newFields: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.localState };\r\n    this.handleAdminChange = this.handleAdminChange.bind(this);\r\n    this.handleVesselDetailSubmit = this.handleVesselDetailSubmit.bind(this);\r\n    this.handleChartererNameChange = this.handleChartererNameChange.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAllClientList();\r\n    this.getAllVesselsList();\r\n  }\r\n\r\n  handleChartererNameChange = e => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { chartererName: e.value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleVesselNameChange = e => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { vesselName: e.value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleAdminChange = e => {\r\n    e.preventDefault();\r\n    const { value, name } = e.target;\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { [name]: value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleDateFieldChange = value => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { cpDate: value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleCheckBoxChange = e => {\r\n    const { checked, name } = e.target;\r\n    const { voyageDetails } = this.state;\r\n    let { fieldVisibility } = voyageDetails;\r\n    if (!fieldVisibility[name]) {\r\n      Object.assign(fieldVisibility, { [name]: checked });\r\n    } else if (fieldVisibility[name] && !checked) {\r\n      delete fieldVisibility[name];\r\n    }\r\n    this.setState({\r\n      voyageDetails: {\r\n        ...this.state.voyageDetails,\r\n        fieldVisibility\r\n      }\r\n    });\r\n  }\r\n\r\n  handleBackButton = () => this.props.history.goBack();\r\n\r\n  getAllClientList = async () => {\r\n    const res = await api.getAllClientList();\r\n    if (res.data.status) {\r\n      const clientList = res.data.clientList.sort().map(v => ({\r\n        label: v, value: v\r\n      }));\r\n      this.setState({ clientList, error: false });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  getAllVesselsList = async () => {\r\n    const res = await api.getAllVesselsList();\r\n    if (res.data.status) {\r\n      const vesselList = res.data.vesselList.map(m => m.vesselName + '_' + m.DWT).sort().map(v => ({\r\n        label: v, value: v\r\n      }));\r\n      this.setState({ vesselList, error: false });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  submitNewFieldDetails = e => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    const inputs = e.target.querySelectorAll('input');\r\n    if (inputs && inputs.length) {\r\n      const voyageDetails = this.state.voyageDetails;\r\n      Object.assign(voyageDetails.otherFields, { [inputs[0].value.trim()]: inputs[1].value.trim() });\r\n      this.setState({ voyageDetails });\r\n      document.getElementById('newFieldForm').reset();\r\n      this.displayOtherFields();\r\n    }\r\n  };\r\n\r\n  async handleVesselDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { voyageDetails } = this.state;\r\n    const { chartererName, vesselName, cpDate } = voyageDetails;\r\n    if (!chartererName || !vesselName || !cpDate.toString()) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = await api.insertPerformanceData({ cpDate, vesselName, chartererName, isDetailsFilled: false });\r\n    data = await api.insertVoyageData({ voyageDetails });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errorMsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.localState.voyageDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! Voyage Details saved for = ' + chartererName\r\n      });\r\n      document.getElementById('voyageDetailsForm').reset();\r\n      if (document.getElementById('newFieldForm')) {\r\n        document.getElementById('newFieldForm').reset();\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { clientList, vesselList, newFields } = this.state;\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <h2>Fill Voyage Details</h2>\r\n        <AddDynamicField submitNewFieldDetails={this.submitNewFieldDetails} />\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='voyageDetailsForm' onSubmit={this.handleVesselDetailSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n                <th>Visible</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Charterer Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={clientList.filter(({ value }) => value === this.state.voyageDetails.chartererName)}\r\n                    onChange={this.handleChartererNameChange}\r\n                    options={clientList}\r\n                    placeholder='Select Charterer Name'\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={vesselList.filter(({ value }) => value === this.state.voyageDetails.vesselName)}\r\n                    onChange={this.handleVesselNameChange}\r\n                    options={vesselList}\r\n                    placeholder='Select Vessel Name'\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    CP Date *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <DatePicker selected={this.state.voyageDetails.cpDate} onChange={this.handleDateFieldChange} value={this.state.voyageDetails.cpDate} required autoComplete='off' maxDate={new Date()}\r\n                    placeholderText='Select a date before 1 day in the future' />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Size\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='vesselSize' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='vesselSize'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' required name='loadPort' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='loadPort'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' required name='dischargePort' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='dischargePort'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cargo' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='cargo'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Intake\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cargoIntake' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='cargoIntake'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Owner Name\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ownerName' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='ownerName'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Shipper\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='shipper' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='shipper'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='loadPortAgent' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='loadPortAgent'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='dischargePortAgent' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='dischargePortAgent'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Receiver\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='receiver' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='receiver'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    On Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='onHireSurveyor' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='onHireSurveyor'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Off Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='offHireSurveyor' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='offHireSurveyor'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Supplier\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerSupplier' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='bunkerSupplier'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Trader\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerTrader' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='bunkerTrader'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='pniInsurance' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='pniInsurance'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Weather Routing Company\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='weatherRoutingCompany' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='weatherRoutingCompany'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              {newFields}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayOtherFields() {\r\n    const otherFields = this.state.voyageDetails.otherFields;\r\n    let data = [];\r\n    if (otherFields && Object.keys(otherFields).length) {\r\n      const keys = Object.keys(otherFields);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        data.push(<tr key={i}>\r\n          <td key={keys[i]}>\r\n            <label>\r\n              {keys[i]}\r\n            </label>\r\n          </td>\r\n          <td key={otherFields[keys[i]]}>\r\n            <input type='text' maxLength={50} required name={keys[i]} onChange={this.handleNewFieldDetailsChange} defaultValue={otherFields[keys[i]]} />\r\n          </td>\r\n          <td>\r\n            <Checkbox name={keys[i]} color='primary' onChange={this.handleCheckBoxChange} />\r\n          </td>\r\n        </tr>)\r\n      }\r\n    }\r\n    this.setState({ newFields: data });\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default FillVoyageDetails;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Button } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport LeftMenu from '../../../components/Common/LeftMenu';\r\nclass ViewVoyageDetails extends Component {\r\n\r\n    localState = {\r\n        voyageList: [],\r\n        isEditPage: true,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (props && props.history && props.history.location.pathname === '/editVoyageDetails') {\r\n            this.localState.isEditPage = true;\r\n        }\r\n        if (localStorage.getItem('managerRoles')) {\r\n            this.localState.isEditPage = JSON.parse(localStorage.getItem('managerRoles')).EditVoyage;\r\n        }\r\n        this.state = { ...this.localState };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await api.getAllVoyageDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                voyageList: res.data.voyageList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    handleBackButton = () => this.props.history.goBack();\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'otherFields':\r\n                val = this.getPopupContent_OtherFields(cellVal, rowId);\r\n                break;\r\n            case 'fieldVisibility':\r\n                val = this.getPopupContent_FieldVisibility(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div title={cellVal} style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { voyageList, isEditPage } = this.state;\r\n        const { history } = this.props;\r\n        let showAddVoyage = false;\r\n        let showBackButton = false;\r\n        if ((localStorage.getItem('userRole').toLowerCase() === 'admin') || (localStorage.getItem('managerRoles') && JSON.parse(localStorage.getItem('managerRoles')).FillVoyage)) {\r\n            showAddVoyage = true;\r\n        }\r\n        if (history && history.location && history.location.state) {\r\n            voyageList = voyageList.filter(f => f.chartererName === history.location.state.userName);\r\n            showBackButton = true;\r\n        }\r\n        const options = {\r\n            title: 'Client List',\r\n            keyColumn: '_id',\r\n            font: 'Arial',\r\n            dimensions: {\r\n                datatable: {\r\n                    width: '90%',\r\n                    height: '648px',\r\n                },\r\n                row: {\r\n                    height: '10px'\r\n                }\r\n            },\r\n            stripped: true,\r\n            features: {\r\n                canSearch: true,\r\n                canDownload: true,\r\n                canPrint: true,\r\n                canOrderColumns: true,\r\n                canRefreshRows: true,\r\n                rowsPerPage: {\r\n                    available: [5, 10, 25, 50, 100],\r\n                    selected: 10\r\n                },\r\n            },\r\n            data: {\r\n                columns: [\r\n                    {\r\n                        id: 'chartererName',\r\n                        label: 'Charterer Name',\r\n                        colSize: '50px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'vesselName',\r\n                        label: 'Vessel Name',\r\n                        colSize: '50px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'cpDate',\r\n                        label: 'CP Date',\r\n                        colSize: '50px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'vesselSize',\r\n                        label: ' Vessel Size',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'loadPort',\r\n                        label: ' Load Port',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'dischargePort',\r\n                        label: 'Discharge Point',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'cargo',\r\n                        label: 'Cargo',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'cargoIntake',\r\n                        label: ' Cargo Intake',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'ownerName',\r\n                        label: 'Owner Name',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'shipper',\r\n                        label: 'Shipper',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'loadPortAgent',\r\n                        label: 'Load Port Agent',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'dischargePortAgent',\r\n                        label: 'Discharge Port Agent',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'receiver',\r\n                        label: 'Receiver',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'onHireSurveyor',\r\n                        label: 'On Hire Surveyor',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'offHireSurveyor',\r\n                        label: 'Off Hire Surveyor',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'bunkerSupplier',\r\n                        label: 'Bunker Supplier',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'bunkerTrader',\r\n                        label: 'Bunker Trader',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'pniInsurance',\r\n                        label: 'PNI Insurance',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'weatherRoutingCompany',\r\n                        label: ' Weather Routing Company',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'otherFields',\r\n                        label: 'Other Details',\r\n                        colSize: '80px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'fieldVisibility',\r\n                        label: 'Visible',\r\n                        colSize: '80px',\r\n                        editable: false\r\n                    }\r\n                ],\r\n                rows: [],\r\n            }\r\n        }\r\n\r\n        if (isEditPage) {\r\n            options.features.canEdit = true;\r\n            options.features.canDelete = true;\r\n        }\r\n\r\n        if (voyageList && voyageList.length) {\r\n            options.data.rows = [...voyageList.map(({\r\n                shipper, bunkerSupplier, bunkerTrader, cargo, cargoIntake, chartererName, ownerName, cpDate, dischargePort, loadPort, loadPortAgent, dischargePortAgent, offHireSurveyor, onHireSurveyor, pniInsurance, receiver, vesselName, vesselSize, weatherRoutingCompany, _id, otherFields, fieldVisibility\r\n            }) => ({\r\n                shipper, bunkerSupplier, bunkerTrader, cargo, cargoIntake, chartererName, ownerName, cpDate, dischargePort, loadPort, loadPortAgent, dischargePortAgent, offHireSurveyor, onHireSurveyor, pniInsurance, receiver, vesselName, vesselSize, weatherRoutingCompany, _id, otherFields, fieldVisibility\r\n            }))\r\n            ]\r\n        }\r\n\r\n        this.refreshRows = () => {\r\n            window.location.reload();\r\n        };\r\n\r\n        this.actionsRow = async e => {\r\n            if (!e || !e.type) {\r\n                return;\r\n            }\r\n\r\n            switch (e.type) {\r\n                case 'save':\r\n                    await api.updateVoyageDetails(e.payload);\r\n                    break;\r\n                case 'delete':\r\n                    let resp = await api.deleteVoyageDetails(e.payload['_id']);\r\n                    if (resp.data.status) {\r\n                        voyageList = voyageList.filter(f => f['_id'] !== e.payload['_id']);\r\n                        options.data.rows = voyageList;\r\n                    } else {\r\n                        this.refreshRows();\r\n                    }\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Grid container direction='row' className='main-container'>\r\n                <LeftMenu />\r\n                <Grid item xs={12} md={9} lg={9}>\r\n                    <section className='right right-section'>\r\n                        <div className='right-container'>\r\n                            <section className='component-wrapper'>\r\n                                {showBackButton ? <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ right: '2%', position: 'fixed' }}> Back </Button> : (<></>)}\r\n                                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                                {showAddVoyage ? (<Link className='addLink' to='/fillVoyageDetails'>Fill Voyage Details</Link>) : (<></>)}\r\n                                <div>\r\n\r\n                                    <div id='table' className={'tooltipBoundary'} style={{ margin: '2% 0 6% 2%', display: 'flex' }}>\r\n                                        <Datatable options={options} actions={this.actionsRow} refreshRows={this.refreshRows} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                                    </div >\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </section>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    getPopupContent_OtherFields = (cellVal, rowId) => {\r\n        const { voyageList } = this.state;\r\n        if (!voyageList.some(f => f.otherFields)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = voyageList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.otherFields && Object.keys(vsl.otherFields).length) {\r\n            return content =\r\n                <Popup trigger={\r\n                    <Button\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'>\r\n                        Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'>\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.otherFields} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n\r\n\r\n    getPopupContent_FieldVisibility = (cellVal, rowId) => {\r\n        const { voyageList } = this.state;\r\n        if (!voyageList.some(f => f.fieldVisibility)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = voyageList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.fieldVisibility && Object.keys(vsl.fieldVisibility).length) {\r\n            return content =\r\n                <Popup trigger={\r\n                    <Button\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'>\r\n                        Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'>\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.fieldVisibility} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ViewVoyageDetails;\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst ShowDropDownAdmin = props => {\r\n    const clients = props.state.allClients.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const vessels = props.state.allVslForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const dates = props.state.allCpDatesForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    return (\r\n        <div style={{ display: 'flex', marginTop: '2%' }}>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={clients.filter(({ value }) => value === props.state.selectedClient)}\r\n                    onChange={props.handleClientListChange}\r\n                    options={clients}\r\n                    placeholder='Select Client'\r\n                    isDisabled={!clients || !clients.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={vessels.filter(({ value }) => value === props.state.selectedVessel)}\r\n                    onChange={props.handleVesselListChange}\r\n                    options={vessels}\r\n                    placeholder='Select Vessel'\r\n                    isDisabled={!vessels || !vessels.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={dates.filter(({ value }) => value === props.state.selectedCpDate)}\r\n                    onChange={props.handleCpDateChange}\r\n                    options={dates}\r\n                    placeholder='Select CP Date'\r\n                    isDisabled={!dates || !dates.length}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowDropDownAdmin","import React, { Component } from 'react';\r\nexport default class ViewPerformanceModule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...props\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { original, actual, actual$, original$ } = this.state.obj;\r\n        return (\r\n            <>\r\n                <td>\r\n                    <input type='text' disabled value={original || 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={actual || 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={original$ || 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={actual$ || 0} />\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport api from '../../api';\r\nimport { Link } from 'react-router-dom';\r\nimport ShowDropDownAdmin from '../common/ShowDropDownAdmin';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport '../../../css/Admin.css';\r\nimport ViewPerformanceModule from './ViewPerformanceModule';\r\nimport { Grid } from '@material-ui/core';\r\nimport LeftMenu from '../../../components/Common/LeftMenu';\r\n\r\nclass ViewPerformanceDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            vesselList: [],\r\n            selectedClient: '',\r\n            selectedVessel: '',\r\n            selectedCpDate: '',\r\n            allClients: [],\r\n            allVslForSelectedClient: [],\r\n            allCpDatesForSelectedClient: [],\r\n            error: false,\r\n            performanceDetails: {\r\n                tcHire: 0,\r\n                addressCommission: 0,\r\n            },\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await api.getAllVesselsPerformance({ isDetailsFilled: true });\r\n        if (res.data.status) {\r\n            const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n            this.setState({\r\n                vesselList: res.data.vesselList,\r\n                allClients,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n        }\r\n    }\r\n\r\n    handleCpDateChange = async e => {\r\n        const { vesselList, selectedVessel, selectedClient, selectedCpDate } = this.state;\r\n        if (selectedCpDate && e.value === selectedCpDate) return;\r\n        const performanceDetails = vesselList.find(m => m.vesselName === selectedVessel && m.chartererName === selectedClient && m.cpDate === e.value);\r\n        const res = await api.getPortDetails({ userName: selectedClient, vesselName: selectedVessel, cpDate: e.value });\r\n        if (res.data.status) {\r\n            this.setState({\r\n                portDetails: res.data.portDetails,\r\n                performanceDetails,\r\n                selectedCpDate: e.value,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n        }\r\n        this.setState({\r\n            performanceDetails,\r\n            selectedCpDate: e.value,\r\n            error: false\r\n        });\r\n\r\n    };\r\n\r\n    handleVesselListChange = async e => {\r\n        const { selectedVessel, vesselList, selectedClient } = this.state;\r\n        if (selectedVessel && e.value === selectedVessel) return;\r\n        const allCpDates = vesselList.filter(f => f.vesselName === e.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n        if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n            this.setState({\r\n                allCpDatesForSelectedClient: [],\r\n                selectedVessel: e.value,\r\n                selectedCpDate: '',\r\n                error: true,\r\n                errorMsg: 'Failed to fetch data'\r\n            });\r\n            return;\r\n        }\r\n        this.setState({\r\n            allCpDatesForSelectedClient: allCpDates,\r\n            selectedVessel: e.value,\r\n            selectedCpDate: '',\r\n            error: false,\r\n            performanceDetails: {}\r\n        });\r\n    }\r\n\r\n    handleClientListChange = e => {\r\n        const { selectedClient, vesselList } = this.state;\r\n        if (selectedClient && e.value === selectedClient) return;\r\n        const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.value).map(m => m.vesselName))];\r\n        if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n            this.setState({\r\n                allVslForSelectedClient: [],\r\n                selectedClient: e.value,\r\n                selectedVessel: '',\r\n                selectedCpDate: '',\r\n                error: true,\r\n                errorMsg: 'Failed to fetch data'\r\n            });\r\n            return;\r\n        }\r\n        this.setState({\r\n            allVslForSelectedClient: allVessels,\r\n            selectedClient: e.value,\r\n            selectedVessel: '',\r\n            selectedCpDate: '',\r\n            error: false,\r\n            performanceDetails: {}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { selectedCpDate, error, performanceDetails, portDetails } = this.state;\r\n        const { addressCommission, bunkerIFOAct, bunkerIFOOrg, bunkerMDOAct, bunkerMDOOrg, dischargePortDAAct$, dischargePortDAOrg$,\r\n            dischargePortDelay, intermediatePortDelay, loadPortDAAct$, loadPortDAOrg$, loadPortDelay, tcHire, freightAct, freightOrg,\r\n            totalAct, totalOrg, voyageDays, CargoQuantityAct, CargoQuantityOrg, ILOHCandCVEAct$, ILOHCandCVEOrg$, PNIInsuranceAct$, PNIInsuranceOrg$,\r\n            bunkerSurveyCostBendsAct$, bunkerSurveyCostBendsOrg$, despatchPaidAct$, despatchPaidOrg$, otherExpenseOrg$, otherExpenseAct$, wXRoutingExpenseAct$, wXRoutingExpenseOrg$,\r\n            demmurrageReceivedOrg$, demmurrageReceivedAct$, HraWarRiskOrg$, HraWarRiskAct$, remarks, loadPort, dischargePort } = performanceDetails;\r\n        let showTable;\r\n        let showAddPerformance = false;\r\n        let showEditPerformance = false;\r\n        if ((localStorage.getItem('userRole').toLowerCase() === 'admin') || (localStorage.getItem('managerRoles') && JSON.parse(localStorage.getItem('managerRoles')).FillPerformance)) {\r\n            showAddPerformance = true;\r\n        }\r\n        if ((localStorage.getItem('userRole').toLowerCase() === 'admin') || (localStorage.getItem('managerRoles') && JSON.parse(localStorage.getItem('managerRoles')).EditPerformance)) {\r\n            showEditPerformance = true;\r\n        }\r\n        if (selectedCpDate) {\r\n            showTable = <div>\r\n                <form style={{ margin: '1%' }}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Load Port</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={portDetails ? portDetails.loadPort : ''} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Discharge Port</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={portDetails ? portDetails.dischargePort : ''} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>  TC Hire (Per day)</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={tcHire || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>   Address Commission</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={addressCommission || 0} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n                <br />\r\n                <form style={{ margin: '1%' }}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Field</th>\r\n                                <th>Original</th>\r\n                                <th>Actual</th>\r\n                                <th>Original ($)</th>\r\n                                <th>Actual ($)</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Voyage Days</label>\r\n                                </td>\r\n                                <ViewPerformanceModule obj={voyageDays} />\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Delays at Port</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Load Port Delay</label>\r\n                                </td>\r\n                                <ViewPerformanceModule obj={loadPortDelay} />\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Discharge Port Delay</label>\r\n                                </td>\r\n                                <ViewPerformanceModule obj={dischargePortDelay} />\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Intermediate Port Delays</label>\r\n                                </td>\r\n                                <ViewPerformanceModule obj={intermediatePortDelay} />\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Bunker Consumption (MT)</label>\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>IFO</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.consumption ? bunkerIFOOrg.consumption : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOAct && bunkerIFOAct.consumption ? bunkerIFOAct.consumption : 0} />\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> MDO</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.consumption ? bunkerMDOOrg.consumption : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOAct && bunkerMDOAct.consumption ? bunkerMDOAct.consumption : 0} />\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Bunker Price (USD)</label>\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>IFO</label></td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.price ? bunkerIFOOrg.price : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOAct && bunkerIFOAct.price ? bunkerIFOAct.price : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$ ? bunkerIFOOrg.bunkerIFOOrg$ : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$ ? bunkerIFOAct.bunkerIFOAct$ : 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>MDO</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.price ? bunkerMDOOrg.price : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOAct && bunkerMDOAct.price ? bunkerMDOAct.price : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$ ? bunkerMDOOrg.bunkerMDOOrg$ : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$ ? bunkerMDOAct.bunkerMDOAct$ : 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Load Port DA</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={loadPortDAOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={loadPortDAAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Discharge Port DA</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={dischargePortDAOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={dischargePortDAAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>ILOHC and CVE</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={ILOHCandCVEOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={ILOHCandCVEAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Bunker Survey Cost Bends</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerSurveyCostBendsOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerSurveyCostBendsAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>WX Routing Expense</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={wXRoutingExpenseOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={wXRoutingExpenseAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>PNI Insurance</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={PNIInsuranceOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={PNIInsuranceAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Despatch Paid</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={despatchPaidOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={despatchPaidAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Other Expense</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={otherExpenseOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={otherExpenseAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>HRA/WAR Risk</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={HraWarRiskOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={HraWarRiskAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Demmurrage Received</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={demmurrageReceivedOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={demmurrageReceivedAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Cargo Quantity (MT)</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={CargoQuantityOrg || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={CargoQuantityAct || 0} />\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Total</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={totalOrg || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={totalAct || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Freight (USD/MT)</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={freightOrg || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={freightAct || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Remark</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={remarks || ''} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n            </div >\r\n        }\r\n        return (\r\n            <Grid container direction='row' className='main-container'>\r\n                <LeftMenu />\r\n                <Grid item xs={12} md={9} lg={9}>\r\n                    <section className='right right-section'>\r\n                        <div className='right-container'>\r\n                            <section className='component-wrapper'>\r\n                                <h2>View Performance Details</h2>\r\n                                {showAddPerformance ? (<Link className='addLink' to='/fillPerformanceDetails'>Fill Performance Details</Link>) : (<></>)}\r\n                                {showEditPerformance ? (<Link className='addLink' to='/editPerformanceDetails'>Edit Performance Details</Link>) : (<></>)}\r\n                                <div className='about_us_2 about_us_2_animated'>\r\n                                    <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={error}>\r\n                                        {error ? this.state.errorMsg : ''}\r\n                                    </FormHelperText>\r\n                                    <ShowDropDownAdmin\r\n                                        handleClientListChange={this.handleClientListChange}\r\n                                        handleVesselListChange={this.handleVesselListChange}\r\n                                        handleCpDateChange={this.handleCpDateChange}\r\n                                        state={this.state}\r\n                                    />\r\n                                    <br />\r\n                                    {showTable}\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </section>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewPerformanceDetails;\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        localStorage.getItem('userRole').toLowerCase() === 'Admin'.toLowerCase() ||\r\n        localStorage.getItem('userRole').toLowerCase() === 'Manager'.toLowerCase() ||\r\n        localStorage.getItem('userRole').toLowerCase() === 'Client'.toLowerCase()\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/viewAllUsers',\r\n            state: { from: props.location }\r\n          }} />\r\n    )} />\r\n  )\r\n\r\n  export default PrivateRoute;","import React, { Component } from 'react';\r\nexport default class PerformanceModule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getOriginalValue = this.getOriginalValue.bind(this);\r\n        this.getActualValue = this.getActualValue.bind(this);\r\n        this.state = {\r\n            original: 0,\r\n            actual: 0,\r\n            original$: 0,\r\n            actual$: 0\r\n        }\r\n    }\r\n\r\n    updateAndNotify() {\r\n        const { original, actual } = this.state;\r\n        const updateOriginal$ = this.commonFunction(original);\r\n        const updateActual$ = this.commonFunction(actual);\r\n        const localObj = {\r\n            original: original ? original : (this.props.voyageDays ? this.props.voyageDays.original : 0),\r\n            original$: updateOriginal$ ? updateOriginal$ : (this.props.voyageDays ? this.props.voyageDays.original$ : 0),\r\n            actual: actual ? actual : (this.props.voyageDays ? this.props.voyageDays.actual : 0),\r\n            actual$: updateActual$ ? updateActual$ : (this.props.voyageDays ? this.props.voyageDays.actual$ : 0)\r\n        }\r\n        this.setState({ ...localObj });\r\n\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        return { notifyRequired: (prevProps.tcHire !== this.props.tcHire || prevProps.addressCommission !== this.props.addressCommission) };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (snapshot.notifyRequired) {\r\n            this.updateAndNotify();\r\n        }\r\n    }\r\n\r\n    commonFunction(e) {\r\n        let { tcHire, addressCommission } = this.props\r\n        const value = parseFloat(e);\r\n        tcHire = parseFloat(tcHire);\r\n        addressCommission = parseFloat(addressCommission);\r\n        if (value >= 0 && tcHire >= 0 && addressCommission >= 0) {\r\n            const muitpleItem = tcHire * value;\r\n            return (muitpleItem - (addressCommission * (muitpleItem / 100)));\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getOriginalValue(e) {\r\n        const value = e.target.value ? e.target.value : 0;\r\n        const updateOriginal$ = this.commonFunction(value);\r\n        const { actual, actual$ } = this.state;\r\n        const localObj = {\r\n            original: this.getValue(value),\r\n            original$: updateOriginal$ ? updateOriginal$ : 0,\r\n            actual,\r\n            actual$\r\n        }\r\n        this.setState({ ...localObj });\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getActualValue(e) {\r\n        const value = e.target.value ? e.target.value : 0;\r\n        const updateActual$ = this.commonFunction(value);\r\n        const { original, original$ } = this.state;\r\n        const localObj = {\r\n            original,\r\n            original$,\r\n            actual: this.getValue(value),\r\n            actual$: updateActual$\r\n        }\r\n\r\n        this.setState({ ...localObj });\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getValue(value) {\r\n        if (!value) return 0;\r\n        if (value[value.length - 1] === '.') return value;\r\n        let v = parseFloat(value);\r\n        return v ? v : 0;\r\n    }\r\n\r\n    render() {\r\n        const { actual$, original$ } = this.state;\r\n        return (\r\n            <>\r\n                <td>\r\n                    <input type='text' required={this.props.required} onChange={this.getOriginalValue} autoComplete='off' value={this.props.voyageDays ? this.props.voyageDays.original : 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' required={this.props.required} onChange={this.getActualValue} autoComplete='off' value={this.props.voyageDays ? this.props.voyageDays.actual : 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={original$ ? original$ : (this.props.voyageDays ? this.props.voyageDays.original$ : 0)} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={actual$ ? actual$ : (this.props.voyageDays ? this.props.voyageDays.actual$ : 0)} />\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShowDropDownAdmin from '../common/ShowDropDownAdmin';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport '../../../css/Admin.css';\r\nimport api from '../../api';\r\nimport PerformanceModule from './PerformanceModule';\r\n\r\nclass FillPerformanceDetails extends Component {\r\n  localState = {\r\n    isEditPage: false,\r\n    isEditContinue: true\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    if (props && props.history && props.history.location.pathname === '/editPerformanceDetails') {\r\n      this.localState.isEditPage = true;\r\n    }\r\n    this.handleVesselListChange = this.handleVesselListChange.bind(this);\r\n    this.handleClientListChange = this.handleClientListChange.bind(this);\r\n    this.handleCpDateChange = this.handleCpDateChange.bind(this);\r\n    this.handlePerformanceDetailSubmit = this.handlePerformanceDetailSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.tcHireChange = this.tcHireChange.bind(this);\r\n    this.addressCommissionChange = this.addressCommissionChange.bind(this);\r\n    this.onVoyageDaysChange = this.onVoyageDaysChange.bind(this);\r\n    this.onLoadPortDelayChange = this.onLoadPortDelayChange.bind(this);\r\n    this.onDischargePortDelayChange = this.onDischargePortDelayChange.bind(this);\r\n    this.onIntermediatePortDelayChange = this.onIntermediatePortDelayChange.bind(this);\r\n    this.handleIFOchange = this.handleIFOChange.bind(this);\r\n    this.handleMDOChange = this.handleMDOChange.bind(this);\r\n    this.getTotalOrg = this.getTotalOrg.bind(this);\r\n    this.getTotalAct = this.getTotalAct.bind(this);\r\n\r\n    this.state = {\r\n      vesselList: [],\r\n      selectedClient: '',\r\n      selectedVessel: '',\r\n      selectedCpDate: '',\r\n      allClients: [],\r\n      allVslForSelectedClient: [],\r\n      allCpDatesForSelectedClient: [],\r\n      error: false,\r\n      performanceDetails: {\r\n        tcHire: 0,\r\n        addressCommission: 0,\r\n      },\r\n    }\r\n  }\r\n\r\n  tcHireChange(e) {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    const { performanceDetails } = this.state;\r\n    Object.assign(performanceDetails, { tcHire: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  addressCommissionChange(e) {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    const { performanceDetails } = this.state;\r\n    Object.assign(performanceDetails, { addressCommission: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handlePerformanceDetailsChange = e => {\r\n    e.preventDefault();\r\n    let { name, value } = e.target;\r\n    const { performanceDetails } = this.state;\r\n    value = value ? value : 0;\r\n    if (name === 'remarks') {\r\n      Object.assign(performanceDetails, { [name]: value });\r\n      this.setState({ performanceDetails });\r\n      return;\r\n    }\r\n\r\n    Object.assign(performanceDetails, { [name]: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = {};\r\n    if (this.localState.isEditPage) {\r\n      res = await api.getAllVesselsPerformance({ isDetailsFilled: true });\r\n    }\r\n    else {\r\n      res = await api.getAllVesselsPerformance({ isDetailsFilled: false });\r\n    }\r\n    if (res.data.status) {\r\n      const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n      this.setState({\r\n        vesselList: res.data.vesselList,\r\n        allClients,\r\n        error: false,\r\n      });\r\n    } else {\r\n      this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n    }\r\n  }\r\n\r\n  handleCpDateChange = async e => {\r\n    const { vesselList, selectedVessel, selectedClient, selectedCpDate } = this.state;\r\n    if (selectedCpDate && e.value === selectedCpDate) return;\r\n    let vesselDetails = vesselList.find(m => m.vesselName === selectedVessel && m.cpDate === e.value);\r\n    this.resetForm();\r\n    const res = await api.getPortDetails({ userName: selectedClient, vesselName: selectedVessel, cpDate: e.value });\r\n    if (res && res.data && res.data.status) {\r\n      this.setState({\r\n        portDetails: res.data.portDetails,\r\n        vesselDetails,\r\n        selectedCpDate: e.value,\r\n        error: false,\r\n        performanceDetails: {}\r\n      });\r\n    } else {\r\n      this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n    }\r\n\r\n    if (this.localState.isEditPage && selectedClient && selectedVessel && e.value) {\r\n      this.setState({performanceDetails:vesselDetails});\r\n      // const response = await api.getPerformanceDetails({ cpDate: e.value, vesselName: selectedVessel, chartererName: selectedClient });\r\n      // if (response && response.data && response.data.status) {\r\n      //   this.localState.isEditContinue = false;\r\n      //   this.setState({\r\n      //     performanceDetails: response.data.performanceDetails\r\n      //   })\r\n      // }\r\n    }\r\n  };\r\n\r\n  handleVesselListChange = async e => {\r\n    const { selectedVessel, vesselList, selectedClient } = this.state;\r\n    if (selectedVessel && e.value === selectedVessel) return;\r\n    const allCpDates = vesselList.filter(f => f.vesselName === e.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n    if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n      this.setState({\r\n        allCpDatesForSelectedClient: [],\r\n        selectedVessel: e.value,\r\n        selectedCpDate: '',\r\n        error: true,\r\n        errorMsg: 'Failed to fetch data'\r\n      });\r\n      return;\r\n    }\r\n    this.resetForm();\r\n    this.setState({\r\n      allCpDatesForSelectedClient: allCpDates,\r\n      selectedVessel: e.value,\r\n      selectedCpDate: '',\r\n      error: false,\r\n      performanceDetails: {}\r\n    });\r\n  }\r\n\r\n  handleClientListChange = e => {\r\n    const { selectedClient, vesselList } = this.state;\r\n    if (selectedClient && e.value === selectedClient) return;\r\n    const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.value).map(m => m.vesselName))];\r\n    if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n      this.setState({\r\n        allVslForSelectedClient: [],\r\n        selectedClient: e.value,\r\n        selectedVessel: '',\r\n        selectedCpDate: '',\r\n        error: true,\r\n        errorMsg: 'Failed to fetch data'\r\n      });\r\n      return;\r\n    }\r\n    this.resetForm();\r\n    this.setState({\r\n      allVslForSelectedClient: allVessels,\r\n      selectedClient: e.value,\r\n      selectedVessel: '',\r\n      selectedCpDate: '',\r\n      error: false,\r\n      performanceDetails: {}\r\n    });\r\n  }\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handlePerformanceDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { selectedClient, selectedVessel, selectedCpDate, vesselList } = this.state;\r\n    const vessel = vesselList.find(f => f.chartererName === selectedClient && f.vesselName === selectedVessel && f.cpDate === selectedCpDate)\r\n    const vId = vessel ? vessel['_id'] : '';\r\n    let data = await api.fillPerformanceDetails({ ...this.state.performanceDetails, vId });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      this.setState({\r\n        error: false,\r\n        errorMsg: data.data.status.errorMsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.resetForm();\r\n      this.setState({\r\n        performanceDetails: {\r\n          voyageDays: {},\r\n          loadPortDelay: {},\r\n          dischargePortDelay: {},\r\n          intermediatePortDelay: {}\r\n        },\r\n        error: true,\r\n        errorMsg: 'Success!! Performance Details saved for = ' + this.state.selectedClient\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  onVoyageDaysChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.voyageDays) {\r\n      performanceDetails.voyageDays = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.voyageDays, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onLoadPortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.loadPortDelay) {\r\n      performanceDetails.loadPortDelay = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.loadPortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onDischargePortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.dischargePortDelay) {\r\n      performanceDetails.dischargePortDelay = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.dischargePortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handleIFOChange(e) {\r\n    const { performanceDetails } = this.state;\r\n    let { name, value } = e.target;\r\n    value = value ? value : 0\r\n    const str = name.split('IFO');\r\n    if (str && str.length >= 2 && str[1] === 'Act') {\r\n      if (!performanceDetails.bunkerIFOAct) {\r\n        performanceDetails.bunkerIFOAct = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerIFOAct, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerIFOAct;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerIFOAct, { bunkerIFOAct$: (consumption * price) });\r\n      }\r\n    } else {\r\n      if (!performanceDetails.bunkerIFOOrg) {\r\n        performanceDetails.bunkerIFOOrg = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerIFOOrg, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerIFOOrg;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerIFOOrg, { bunkerIFOOrg$: (consumption * price) });\r\n      }\r\n    }\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handleMDOChange(e) {\r\n    const { performanceDetails } = this.state;\r\n    let { name, value } = e.target;\r\n    value = value ? value : 0\r\n    const str = name.split('MDO');\r\n    if (str && str.length >= 2 && str[1] === 'Act') {\r\n      if (!performanceDetails.bunkerMDOAct) {\r\n        performanceDetails.bunkerMDOAct = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerMDOAct, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerMDOAct;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerMDOAct, { bunkerMDOAct$: (consumption * price) });\r\n      }\r\n    } else {\r\n      if (!performanceDetails.bunkerMDOOrg) {\r\n        performanceDetails.bunkerMDOOrg = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerMDOOrg, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerMDOOrg;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerMDOOrg, { bunkerMDOOrg$: (consumption * price) });\r\n      }\r\n    }\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onIntermediatePortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.intermediatePortDelay) {\r\n      performanceDetails.intermediatePortDelay = {};\r\n    }\r\n    Object.assign(performanceDetails.intermediatePortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  getTotalOrg(performanceDetails) {\r\n    const { voyageDays, intermediatePortDelay, dischargePortDelay, loadPortDelay, bunkerIFOOrg, bunkerMDOOrg } = performanceDetails;\r\n    let total = 0;\r\n    const keys = Object.keys(performanceDetails).filter(m => m.substr(m.length - 4) === 'Org$');\r\n    if (keys && keys.length) {\r\n      keys.forEach(e => {\r\n        if (parseFloat(performanceDetails[e])) {\r\n          total += parseFloat(performanceDetails[e]);\r\n        }\r\n      });\r\n    }\r\n    if (voyageDays) {\r\n      total += parseFloat(voyageDays.original$);\r\n    }\r\n    if (intermediatePortDelay) {\r\n      total += parseFloat(intermediatePortDelay.original$);\r\n    }\r\n    if (dischargePortDelay) {\r\n      total += parseFloat(dischargePortDelay.original$);\r\n    }\r\n    if (loadPortDelay) {\r\n      total += parseFloat(loadPortDelay.original$);\r\n    }\r\n    if (bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$) {\r\n      total += parseFloat(bunkerIFOOrg.bunkerIFOOrg$);\r\n    }\r\n    if (bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$) {\r\n      total += parseFloat(bunkerMDOOrg.bunkerMDOOrg$);\r\n    }\r\n\r\n    return total;\r\n  }\r\n\r\n  getTotalAct(performanceDetails) {\r\n    const { voyageDays, intermediatePortDelay, dischargePortDelay, loadPortDelay, bunkerIFOAct, bunkerMDOAct } = performanceDetails;\r\n    let total = 0;\r\n    const keys = Object.keys(performanceDetails).filter(m => m.substr(m.length - 4) === 'Act$');\r\n    if (keys && keys.length) {\r\n      keys.forEach(e => {\r\n        if (parseFloat(performanceDetails[e]) >= 0) {\r\n          total += parseFloat(performanceDetails[e]);\r\n        }\r\n      });\r\n    }\r\n    if (voyageDays) {\r\n      total += parseFloat(voyageDays.actual$);\r\n    }\r\n    if (intermediatePortDelay) {\r\n      total += parseFloat(intermediatePortDelay.actual$);\r\n    }\r\n    if (dischargePortDelay) {\r\n      total += parseFloat(dischargePortDelay.actual$);\r\n    }\r\n    if (loadPortDelay) {\r\n      total += parseFloat(loadPortDelay.actual$);\r\n    }\r\n    if (bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$) {\r\n      total += parseFloat(bunkerIFOAct.bunkerIFOAct$);\r\n    }\r\n    if (bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$) {\r\n      total += parseFloat(bunkerMDOAct.bunkerMDOAct$);\r\n    }\r\n    return parseFloat(total);\r\n  }\r\n\r\n  resetForm() {\r\n    if (!document.getElementById('performanceDetailsForm')) {\r\n      return;\r\n    }\r\n    document.getElementById('performanceDetailsForm').reset();\r\n    document.getElementById('portDetailsForm').reset();\r\n  }\r\n\r\n  getValue(value) {\r\n    if (!value) return 0;\r\n    if (value[value.length - 1] === '.') return value;\r\n    let v = parseFloat(value);\r\n    return v ? v : 0;\r\n  }\r\n\r\n  render() {\r\n    const { selectedCpDate, error, portDetails, performanceDetails } = this.state;\r\n    const { tcHire, addressCommission, bunkerMDOAct, bunkerIFOOrg, bunkerIFOAct, bunkerMDOOrg, totalAct, totalOrg, freightOrg, freightAct, voyageDays, loadPortDelay,\r\n      dischargePortDelay, intermediatePortDelay, loadPortDAAct$, loadPortDAOrg$, dischargePortDAOrg$, dischargePortDAAct$, bunkerSurveyCostBendsOrg$, bunkerSurveyCostBendsAct$, ILOHCandCVEAct$,\r\n      ILOHCandCVEOrg$, wXRoutingExpenseOrg$, wXRoutingExpenseAct$, despatchPaidAct$, despatchPaidOrg$, PNIInsuranceAct$, PNIInsuranceOrg$, demmurrageReceivedAct$, demmurrageReceivedOrg$,\r\n      otherExpenseAct$, otherExpenseOrg$, HraWarRiskAct$, HraWarRiskOrg$, remarks, CargoQuantityAct, CargoQuantityOrg } = performanceDetails;\r\n    let showTable;\r\n    if (selectedCpDate) {\r\n      showTable = <div>\r\n        <form id='portDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled name='loadPort' value={portDetails.loadPort || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled name='dischargePort' value={portDetails.dischargePort || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    TC Hire (Per day) *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='tcHire' required onChange={this.tcHireChange} autoComplete='off' value={tcHire || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Address Commission *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='addressCommission' required onChange={this.addressCommissionChange} autoComplete='off' value={addressCommission || 0} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n        <br />\r\n        <form id='performanceDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Original</th>\r\n                <th>Actual</th>\r\n                <th>Original ($)</th>\r\n                <th>Actual ($)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Voyage Days*\r\n                  </label>\r\n                </td>\r\n                <PerformanceModule voyageDays={voyageDays} required={true} tcHire={tcHire} addressCommission={addressCommission} onOriginalActualChange={this.onVoyageDaysChange} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Delays at Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port Delay\r\n                </label>\r\n                </td>\r\n                <PerformanceModule voyageDays={loadPortDelay} required={false} tcHire={tcHire} addressCommission={addressCommission} onOriginalActualChange={this.onLoadPortDelayChange} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port Delay\r\n                </label>\r\n                </td>\r\n                <PerformanceModule voyageDays={dischargePortDelay} required={false} tcHire={tcHire} addressCommission={addressCommission} onOriginalActualChange={this.onDischargePortDelayChange} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Intermediate Port Delays\r\n                </label>\r\n                </td>\r\n                <PerformanceModule voyageDays={intermediatePortDelay} required={false} tcHire={tcHire} addressCommission={addressCommission} onOriginalActualChange={this.onIntermediatePortDelayChange} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Consumption (MT) *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='consumptionIFOOrg' required onChange={this.handleIFOchange} autoComplete='off' value={bunkerIFOOrg && bunkerIFOOrg.consumption ? bunkerIFOOrg.consumption : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='consumptionIFOAct' required onChange={this.handleIFOchange} autoComplete='off' value={bunkerIFOAct && bunkerIFOAct.consumption ? bunkerIFOAct.consumption : 0} />\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='consumptionMDOOrg' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOOrg ? bunkerMDOOrg.consumption : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='consumptionMDOAct' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOAct ? bunkerMDOAct.consumption : 0} />\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Price (USD) *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='priceIFOOrg' required onChange={this.handleIFOchange} autoComplete='off' value={bunkerIFOOrg && bunkerIFOOrg.price ? bunkerIFOOrg.price : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='priceIFOAct' required onChange={this.handleIFOchange} autoComplete='off' value={bunkerIFOAct && bunkerIFOAct.price ? bunkerIFOAct.price : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$ ? bunkerIFOOrg.bunkerIFOOrg$ : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled value={bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$ ? bunkerIFOAct.bunkerIFOAct$ : 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='priceMDOOrg' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOOrg ? bunkerMDOOrg.price : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='priceMDOAct' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOAct ? bunkerMDOAct.price : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$ ? bunkerMDOOrg.bunkerMDOOrg$ : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled value={bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$ ? bunkerMDOAct.bunkerMDOAct$ : 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='loadPortDAOrg$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={loadPortDAOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='loadPortDAAct$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={loadPortDAAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='dischargePortDAOrg$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={dischargePortDAOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='dischargePortDAAct$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={dischargePortDAAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    ILOHC and CVE\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ILOHCandCVEOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={ILOHCandCVEOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ILOHCandCVEAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={ILOHCandCVEAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Survey Cost Bends\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerSurveyCostBendsOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={bunkerSurveyCostBendsOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerSurveyCostBendsAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={bunkerSurveyCostBendsAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    WX Routing Expense\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='wXRoutingExpenseOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={wXRoutingExpenseOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='wXRoutingExpenseAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={wXRoutingExpenseAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='PNIInsuranceOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={PNIInsuranceOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='PNIInsuranceAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={PNIInsuranceAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Despatch Paid\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='despatchPaidOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={despatchPaidOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='despatchPaidAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={despatchPaidAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Other Expense\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='otherExpenseOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={otherExpenseOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='otherExpenseAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={otherExpenseAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    HRA/WAR Risk\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='HraWarRiskOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={HraWarRiskOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='HraWarRiskAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={HraWarRiskAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Demmurrage Received\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='demmurrageReceivedOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={demmurrageReceivedOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='demmurrageReceivedAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={demmurrageReceivedAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Quantity (MT)\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='CargoQuantityOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={CargoQuantityOrg || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='CargoQuantityAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={CargoQuantityAct || 0} />\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Total\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='totalOrg' disabled value={totalOrg || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='totalAct' disabled value={totalAct || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Freight (USD/MT)\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='freightOrg' disabled value={freightOrg || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='freightAct' disabled value={freightAct || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Remarks\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='remarks' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={remarks || ''} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div >\r\n    }\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        {\r\n          this.localState.isEditPage ? (<h2>Edit Performance Details</h2>) : (<h2>Fill Performance Details</h2>)\r\n        }\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={error}>\r\n          {error ? this.state.errorMsg : ''}\r\n        </FormHelperText>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <ShowDropDownAdmin\r\n          handleClientListChange={this.handleClientListChange}\r\n          handleVesselListChange={this.handleVesselListChange}\r\n          handleCpDateChange={this.handleCpDateChange}\r\n          state={this.state}\r\n        />\r\n        <br />\r\n        {showTable}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FillPerformanceDetails;","import React from 'react';\r\nimport './css/App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport About from './components/Others/About';\r\nimport Location from './components/Others/Location';\r\nimport LoginHome from './components/Login/LoginHome';\r\nimport Home from './components/Others/Home';\r\nimport Header from './components/Others/Header';\r\nimport Footer from './components/Others/Footer';\r\nimport PieCharts from './components/Others/PieCharts';\r\nimport CheckPerformance from './components/Client/CheckPerformance';\r\nimport FirstComponentStateFul from './components/FirstComponentStateFul'\r\nimport ForgotPassword from './components/Login/ForgotPassword';\r\nimport AddNewUser from './components/Admin/user/AddNewUser';\r\nimport ViewAllUsers from './components/Admin/user/ViewAllUsers';\r\nimport AddNewVessel from './components/Admin/vessel/AddNewVessel';\r\nimport ViewAllVessels from './components/Admin/vessel/ViewAllVessels';\r\nimport FillVoyageDetails from './components/Admin/voyage/FillVoyageDetails'\r\nimport ViewVoyageDetails from './components/Admin/voyage/ViewVoyageDetails'\r\nimport ViewPerformanceDetails from './components/Admin/performance/ViewPerformanceDetails';\r\nimport PrivateRoute from './components/Admin/common/PrivateRoute';\r\nimport FillPerformanceDetails from './components/Admin/performance/FillPerformanceDetails';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className='App main-wrapper'>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/about' component={About}></Route>\r\n          <Route path='/location' component={Location}></Route>\r\n          <Route path='/login' component={LoginHome}></Route>\r\n\r\n          <PrivateRoute path='/addNewUser' component={AddNewUser}></PrivateRoute>\r\n          <PrivateRoute path='/viewAllUsers' component={ViewAllUsers}></PrivateRoute>\r\n          <PrivateRoute path='/editUserDetails' component={ViewAllUsers}></PrivateRoute>\r\n\r\n\r\n          <PrivateRoute path='/addNewVessel' component={AddNewVessel}></PrivateRoute>\r\n          <PrivateRoute path='/viewAllVessels' component={ViewAllVessels}></PrivateRoute>\r\n          <PrivateRoute path='/editVesselDetails' component={ViewAllVessels}></PrivateRoute>\r\n\r\n\r\n          <PrivateRoute path='/fillVoyageDetails' component={FillVoyageDetails}></PrivateRoute>\r\n          <PrivateRoute path='/viewVoyageDetails' component={ViewVoyageDetails}></PrivateRoute>\r\n          <PrivateRoute path='/editVoyageDetails' component={ViewVoyageDetails}></PrivateRoute>\r\n\r\n          <PrivateRoute path='/fillPerformanceDetails' component={FillPerformanceDetails}></PrivateRoute>\r\n          <PrivateRoute path='/viewPerformanceDetails' component={ViewPerformanceDetails}></PrivateRoute>\r\n          <PrivateRoute path='/editPerformanceDetails' component={FillPerformanceDetails}></PrivateRoute>\r\n         \r\n          <PrivateRoute path='/checkPerformance' component={CheckPerformance}></PrivateRoute>\r\n          <Route path='/pieChart' component={PieCharts}></Route>\r\n          <Route path='/forgotPassword' component={ForgotPassword}></Route>\r\n          <Route path='/' component={Home}></Route>\r\n        </Switch>\r\n      </div>\r\n      <Footer/>\r\n      {/* <FirstComponentStateFul/> */}\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/index\";\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n   <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}