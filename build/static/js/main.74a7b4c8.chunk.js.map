{"version":3,"sources":["assets/images/dummy.webp","Auth.js","Callback.js","store/actions/constants.js","components/login/index.js","store/actions/index.js","components/sub-component/overlay/index.js","utils/miscUtils.js","components/navBar/index.js","components/sub-component/left-menu/constants.js","components/sub-component/left-menu/index.js","components/sub-component/ScrollableTabsButtonAuto/index.js","utils/constants.js","utils/confirmationAlert.js","utils/alert.js","api/index.js","components/user/Form_AddNewUser.js","components/user/userTable.js","components/user/Form_ViewAllUsers.js","components/user/index.js","components/vessel/Form_AddNewVessel.js","components/vessel/userTable.js","components/vessel/Form_ViewAllVessels.js","components/vessel/index.js","components/voyage/userTable.js","components/voyage/Form_ViewVoyageDetails.js","components/common/AddDynamicField.js","components/voyage/Form_FillVoyageDetails.js","components/voyage/index.js","components/performance/PerformanceModule.js","components/performance/Form_FillPerformanceDetails.js","components/performance/index.js","components/app/App.js","serviceWorker.js","store/reducer.js","store/saga.js","store/index.js","index.js"],"names":["module","exports","auth0Client","this","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","authorize","console","log","Promise","resolve","reject","parseHash","err","authResult","idTokenPayload","expiresAt","exp","Callback","props","history","replace","Component","withRouter","actionTypes","LOGIN","LOGIN_ASYNC","FAILURE","USERDETAIL","USERDETAIL_ASYNC","SET_ACTIVE_TAB","SET_OVERLAY","Login","forgotPasswordHandler","setState","forgotPassword","onInputHandler","e","value","target","validEmail","test","state","formData","error","name","email","emailError","defaultError","pattern","password","passwordError","rememberMeChecked","checkValidityLoginForm","required","valid","checkValidityforgotPasswordForm","onSubmitHandler","preventDefault","formDataToBeSend","FormData","append","saveUsername","callInitials","loggedIn","wrongCredentials","formError","className","src","dummy","alt","role","onSubmit","method","encType","htmlFor","type","tabIndex","onChange","checked","onClick","href","React","setLoginDetails","connect","ownProps","dispatch","data","Overlay","closeOverlay","stopPropagation","classList","contains","setOverlay","callback","extraClass","closeBtn","ui","setActiveTab","miscUtils","schoolDetails","studentList","schoolId","options","Array","isArray","j","length","push","MenuItem","studentName","key","studentId","data-id","validationtype","validity","id","endsWith","slice","vld","getFormValidity","isValid","Object","assign","isInvalid","keys","v","i","p","all","map","catch","NavBar","toggleDropdown","window","event","dropdownActive","location","detail","userId","activeOverlay","showOverlay","leftMenuMapping","user","link","title","icon","vessel","voyage","performance","LeftMenu","clickHandler","toggleMenu","activeMenu","menuItem","isMenuActive","item","index","isActive","data-link","to","TabPanel","children","other","hidden","aria-labelledby","Box","a11yProps","useStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","getTabs","tabsLabel","Tab","label","ScrollableTabsButtonAuto","classes","useState","setValue","handleChange","newValue","tabs","tabPanelChild","TabIndicatorProps","isDirty","newTabVal","undefined","Paper","square","Tabs","indicatorColor","textColor","variant","scrollButtons","aria-label","AppBar","position","color","child","getTabPanels","constants","roles","clientType","clientDisplayList","managerRolesList","voyageFieldList","ConfirmationAlert","Dialog","open","confAlertDetails","openAlert","onClose","handleCancelAlert","aria-describedby","DialogTitle","titleMsg","DialogContent","DialogContentText","descrMsg","DialogActions","Button","handleSuccessAlert","autoFocus","buttonTitle","Alert","alertDetails","api","checkUsername","axios","post","apiUrl","headers","updatePassword","login","insertUserDetails","insertVesselDetails","insertPerformanceData","insertVoyageData","getAllVesselsPerformance","get","isDetailsFilled","getAllVoyage","companyName","getAllUserDetails","getAllClientList","getAllVesselsList","getAllVesselsDetails","getAllVoyageDetails","fillPerformanceDetails","deleteVesselDetails","delete","updateVesselDetails","deleteVoyageDetails","updateVoyageDetails","getPortDetails","userName","vesselName","cpDate","getPerformanceDetails","chartererName","getCompletePerformanceDetailsForView","AddNewUser","a","userDetails","resp","status","errors","errorMsg","errmsg","indexOf","isformValid","handleBlocking","handleSubmit","getAttribute","isFieldValid","updateForm","displayName","managerRoles","clientDisplay","showRoledata","getManagerRoleData","getClientRoleData","autoComplete","noValidate","style","marginTop","Grid","container","xs","md","lg","TextField","inputProps","maxLength","helperText","getErrorMessage","InputLabel","Select","labelId","autoWidth","getOptions","size","startIcon","disabled","names","multiple","input","Input","renderValue","selected","join","Checkbox","ListItemText","primary","sort","UserTable","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","field","lookup","34","63","surname","birthYear","birthCity","icons","editable","onRowUpdate","newData","oldData","setTimeout","prevState","onRowDelete","splice","ViewAllUsers","componentDidMount","res","clientList","Users","handleIconDetail","activeTabIndex","localClickedtTab","getTabData","AddNewVessel","vesselDetails","isTyped","onRowClickedData","isEditPage","IMO","DWT","flag","vesselType","built","draft","LOA","beam","GRT","NRT","TPC","holdsHatches","grainCapacity","baleCapacity","cranes","grabs","setColumns","setData","onRowClick","reload","ViewAllVessels","vesselList","rowData","handleRowClicked","Vessel","ViewVoyageDetails","updatedResult","checkandRemoveObject","voyageList","udpatedItem","otherFields","forEach","typography","padding","spacing","SimplePopover","anchorEl","setAnchorEl","setValidity","setIsformValid","setValidationtype","Boolean","fieldLabel","IconButton","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","submitNewFieldDetails","margin","marginLeft","FillVoyageDetails","m","handleDateFieldChange","toString","Date","voyageDetails","inputs","querySelectorAll","document","getElementById","reset","dischargePort","loadPort","fieldVisibility","vesselSize","cargoIntake","cargo","ownerName","shipper","pniInsurance","weatherRoutingCompany","loadPortAgent","dischargePortAgent","receiver","onHireSurveyor","offHireSurveyor","bunkerSupplier","bunkerTrader","utils","DateFnsUtils","format","maxDate","autoOk","KeyboardButtonProps","Voyage","PerformanceModule","getOriginalValue","getActualValue","original","actual","original$","actual$","updateOriginal$","commonFunction","updateActual$","localObj","voyageDays","onOriginalActualChange","prevProps","notifyRequired","tcHire","addressCommission","snapshot","updateAndNotify","parseFloat","muitpleItem","toFixed","getValue","FillPerformanceDetails","handleCpDateChange","selectedVessel","selectedClient","resetForm","find","portDetails","selectedCpDate","performanceDetails","handleVesselListChange","allCpDates","filter","f","allCpDatesForSelectedClient","handleClientListChange","allVessels","Set","allVslForSelectedClient","handlePerformanceDetailSubmit","handlePerformanceDetailsChange","totalOrg","getTotalOrg","totalAct","getTotalAct","CargoQuantityOrg","freightOrg","CargoQuantityAct","freightAct","allClients","readOnly","isViewPage","tcHireChange","addressCommissionChange","onVoyageDaysChange","onLoadPortDelayChange","onDischargePortDelayChange","onIntermediatePortDelayChange","handleIFOChange","handleMDOChange","vId","loadPortDelay","dischargePortDelay","intermediatePortDelay","obj","str","split","bunkerIFOAct","consumption","price","bunkerIFOAct$","bunkerIFOOrg","bunkerIFOOrg$","bunkerMDOAct","bunkerMDOAct$","bunkerMDOOrg","bunkerMDOOrg$","total","substr","loadPortDAAct$","loadPortDAOrg$","dischargePortDAOrg$","dischargePortDAAct$","bunkerSurveyCostBendsOrg$","bunkerSurveyCostBendsAct$","ILOHCandCVEAct$","ILOHCandCVEOrg$","wXRoutingExpenseOrg$","wXRoutingExpenseAct$","despatchPaidAct$","despatchPaidOrg$","PNIInsuranceAct$","PNIInsuranceOrg$","demmurrageReceivedAct$","demmurrageReceivedOrg$","otherExpenseAct$","otherExpenseOrg$","HraWarRiskAct$","HraWarRiskOrg$","remarks","Performance","App","isholidayAvailable","direction","exact","path","component","setHolidays","SET_HOLIDAYS","hostname","match","exampleInitialState","teacherId","parentId","activeTab","holidays","public","local","reducer","action","uiObj","detailObj","uiObjTemp","uiObjTemp2","uiObjTemp3","uiObjTemp4","rootSaga","loginUser","menuItems","put","takeLatest","es6promise","polyfill","bindMiddleware","middleware","applyMiddleware","configureStore","initialState","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","sagaTask","run","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74a7b4c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dummy.ef8ef2c1.webp\";","import auth0 from 'auth0-js';\r\nclass Auth {\r\n    constructor() {\r\n        this.auth0 = new auth0.WebAuth({\r\n            // the following three lines MUST be updated\r\n            domain: 'https://dev-f01szrz0.auth0.com',\r\n            audience: 'https://dev-f01szrz0.auth0.com/userinfo',\r\n            clientID: 'CiI1qd4zu0Hn3ZQGJNtAFglzmYeRaGeO',\r\n            redirectUri: 'http://localhost:3000/home',\r\n            responseType: 'id_token',\r\n            scope: 'openid profile'\r\n          });\r\n          this.getProfile = this.getProfile.bind(this);\r\n        this.handleAuthentication = this.handleAuthentication.bind(this);\r\n        this.isAuthenticated = this.isAuthenticated.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n        this.signOut = this.signOut.bind(this);\r\n    }\r\n    getProfile() {\r\n        return this.profile;\r\n      }\r\n    \r\n      getIdToken() {\r\n        return this.idToken;\r\n      }\r\n    \r\n      isAuthenticated() {\r\n        // return new Date().getTime() < this.expiresAt;\r\n        return true;\r\n      }\r\n      signIn() {\r\n        this.auth0.authorize();\r\n        console.log('show login page without authorizing');\r\n      }\r\n      handleAuthentication() {\r\n        return new Promise((resolve, reject) => {\r\n          this.auth0.parseHash((err, authResult) => {\r\n            if (err) return reject(err);\r\n            if (!authResult || !authResult.idToken) {\r\n              return reject(err);\r\n            }\r\n            this.idToken = authResult.idToken;\r\n            this.profile = authResult.idTokenPayload;\r\n            // set the time that the id token will expire at\r\n            this.expiresAt = authResult.idTokenPayload.exp * 1000;\r\n            resolve();\r\n          });\r\n        })\r\n      }\r\n      signOut() {\r\n        // clear id token, profile, and expiration\r\n        this.idToken = null;\r\n        this.profile = null;\r\n        this.expiresAt = null;\r\n      }\r\n}\r\nconst auth0Client = new Auth();\r\n\r\nexport default auth0Client;","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport auth0Client from './Auth';\r\n\r\nclass Callback extends Component {\r\n  /*     async componentDidMount() {\r\n        await auth0Client.handleAuthentication();\r\n        this.props.history.replace('/');\r\n      }\r\n */\r\n    componentDidMount() {\r\n      this.props.history.replace('/');\r\n    }\r\n      render() {\r\n        return (\r\n          <p>Loading profile...</p>\r\n        );\r\n      }\r\n}\r\nexport default withRouter(Callback);","const actionTypes = {\r\n    LOGIN: 'LOGIN',\r\n    LOGIN_ASYNC: 'LOGIN_ASYNC',\r\n    FAILURE: 'FAILURE',\r\n    USERDETAIL: 'USERDETAIL',\r\n    USERDETAIL_ASYNC: 'USERDETAIL_ASYNC',\r\n    SET_ACTIVE_TAB: 'SET_ACTIVE_TAB',\r\n    SET_OVERLAY: 'SET_OVERLAY'\r\n};\r\n\r\nexport default actionTypes;","import React from 'react';\r\n// import auth0Client from '../../Auth';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from './../../store/actions/constants';\r\nimport dummy from './../../assets/images/dummy.webp';\r\n\r\nclass Login extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.defaultError = {\r\n            required: '*Field is required',\r\n            pattern: '*Please enter valid value',\r\n            wrongCredentials: 'Wrong credentials. Please try again...',\r\n        };\r\n        this.state = {\r\n            forgotPassword : false,\r\n            formData: {\r\n                email: '',\r\n                password: '',\r\n                rememberMeChecked: false\r\n            },\r\n            error: {\r\n                emailError: '',\r\n                passwordError: '',\r\n                formError: ''\r\n            }\r\n        };\r\n\r\n        this.forgotPasswordHandler = this.forgotPasswordHandler.bind(this);\r\n        this.onInputHandler = this.onInputHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    forgotPasswordHandler = () => {\r\n        this.setState({forgotPassword: true});\r\n    }\r\n\r\n    onInputHandler = (e) => {\r\n        const value = e.target.value;\r\n        const validEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\r\n        const { formData, error } = this.state;\r\n        if(e.target.name === 'email'){\r\n            formData.email = value;\r\n            if(validEmail) {\r\n                error.emailError = '';\r\n            } else {\r\n                error.emailError = this.defaultError.pattern;\r\n            }\r\n        }else if(e.target.name === 'password') {\r\n            formData.password = value;\r\n            if(error.passwordError){\r\n                error.passwordError= '';\r\n            }\r\n        }else if(e.target.name === 'rememberMe') {\r\n            formData.rememberMeChecked = !formData.rememberMeChecked;\r\n        }\r\n        \r\n        this.setState({formData, error});\r\n    }\r\n\r\n    checkValidityLoginForm = () => {\r\n        const { formData, error } = this.state;\r\n        const { email, password } = formData;\r\n        if(!email) {\r\n            error.emailError = this.defaultError.required;\r\n        }\r\n        if(!password) {\r\n            error.passwordError = this.defaultError.required;\r\n        }\r\n\r\n        const valid = (!formData.email || !formData.password || error.emailError) ? false : true;\r\n\r\n        this.setState({error});\r\n\r\n        return valid;\r\n    }\r\n\r\n    checkValidityforgotPasswordForm = () => {\r\n        const { formData, error } = this.state;\r\n        const { email } = formData;\r\n        if(!email) {\r\n            error.emailError = this.defaultError.required;\r\n        }\r\n\r\n        const valid = (!formData.email || error.emailError) ? false : true;\r\n        this.setState({error});\r\n        return valid;\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const { formData } = this.state;\r\n        const isLoginForm = e.target.name === 'loginForm';\r\n        if(isLoginForm) {\r\n            if(this.checkValidityLoginForm()) {\r\n                const { email, password, rememberMeChecked } = formData;\r\n                const formDataToBeSend = new FormData();\r\n                formDataToBeSend.append('email', email);\r\n                formDataToBeSend.append('password', password);\r\n                formDataToBeSend.append('rememberMe', rememberMeChecked);\r\n                const { saveUsername } = this.props;\r\n                saveUsername(formDataToBeSend);\r\n            }\r\n        }else {\r\n            if(this.checkValidityforgotPasswordForm()) {\r\n                const { email} = formData;\r\n                const formDataToBeSend = new FormData();\r\n                formDataToBeSend.append('email', email);\r\n\r\n                /* const config = {     \r\n                    headers: { 'content-type': 'multipart/form-data' }\r\n                }\r\n                \r\n                axios.post(url, formDataToBeSend, config)\r\n                .then(response => {\r\n                    console.log(response);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                }); */\r\n                formData.email = '';\r\n                this.setState({forgotPassword: false, formData});\r\n            }\r\n        }\r\n    }\r\n\r\n    callInitials = () => {\r\n        const { loggedIn } = this.props;\r\n        if(loggedIn) {\r\n            this.props.history.replace('/home');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // this.callInitials();\r\n        const { formData, error, forgotPassword } = this.state;\r\n        const { email, password, rememberMeChecked } = formData;\r\n        const { emailError, passwordError } = error;\r\n        const { loggedIn } = this.props;\r\n        return (\r\n            <div className='wrapper login'>\r\n                <div className='container'>\r\n                    <div className='login-wrapper'>\r\n                        <div className='video-section desktop-only'>\r\n                            <div className='video'>\r\n                                <img src={dummy} alt='dummy image' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-section'>\r\n                            {!forgotPassword ? <div>\r\n                                <form name='loginForm' role='form' onSubmit={this.onSubmitHandler} method='post' encType='multipart/form-data'>\r\n                                    <fieldset>\r\n                                        <legend>Account Login</legend>\r\n                                        <div className='form-group'>\r\n                                            <label htmlFor='email'>Email Address</label>\r\n                                            <input type='text' name='email' value={email} tabIndex='1' onChange={this.onInputHandler}/>\r\n                                            {emailError && <p className='error'>{emailError}</p>}\r\n                                            <p className='info'>We'll never share your email with anyone else.</p>\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <label htmlFor='password'>Password</label>\r\n                                            <input type='password' name='password' value={password} tabIndex='2' onChange={this.onInputHandler}/>\r\n                                            {passwordError && <p className='error'>{passwordError}</p>}\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <div className='remember-block'>\r\n                                                <input type='checkbox' name='rememberMe'  tabIndex='3' checked={rememberMeChecked} onChange={this.onInputHandler}/><label htmlFor='rememberMe'>Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <button type='submit' className='submit-btn' tabIndex='4'>Submit</button>\r\n                                        {loggedIn === false && <p className='error'>{this.defaultError.wrongCredentials}</p>}\r\n                                    </fieldset>\r\n                                </form>\r\n                                <div className='account-actions'>\r\n                                    <div className='forget-password' onClick={this.forgotPasswordHandler} tabIndex='5'>\r\n                                        <span>Forgot Password</span>\r\n                                    </div>\r\n                                    <div className='sign-up'>\r\n                                        <a href='/sign-up' tabIndex='6'>Create a new Account</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className='forgot-password-wrapper'>\r\n                                <form name='forgotPassword' role='form' onSubmit={this.onSubmitHandler} method='post' encType='multipart/form-data'>\r\n                                    <fieldset>\r\n                                        <legend>Forgot Password</legend>\r\n                                        <div className='form-group'>\r\n                                            <label htmlFor='email'>Email Address</label>\r\n                                            <input type='text' name='email' value={email} tabIndex='1' onChange={this.onInputHandler}/>\r\n                                            {emailError && <p className='error'>{emailError}</p>}\r\n                                            <p className='info'>We'll never share your email with anyone else.</p>\r\n                                        </div>\r\n                                        <button type='submit' className='submit-btn' tabIndex='2'>Submit</button>\r\n                                    </fieldset>\r\n                                </form>\r\n                            </div>}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { loggedIn } = state;\r\n    return {\r\n        loggedIn\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveUsername : (data) => {dispatch({type: actionTypes.LOGIN,\r\n            data})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import actionTypes from './constants';\r\n  \r\nexport const setLoginDetails = (data) => {\r\n  return {\r\n    type: actionTypes.LOGIN_ASYNC,\r\n    data\r\n  };\r\n}\r\n\r\nexport const failure = (error) => {\r\n  return {\r\n    type: actionTypes.FAILURE,\r\n    error\r\n  }\r\n}\r\n\r\nexport const setUserDetails = (data) => {\r\n  return {\r\n    type: actionTypes.USERDETAIL_ASYNC,\r\n    data\r\n  }\r\n}\r\n\r\nexport const setActiveTab= (data) => {\r\n  return {\r\n    type: actionTypes.SET_ACTIVE_TAB,\r\n    data\r\n  }\r\n}\r\n\r\nexport const setHolidays = (data) => {\r\n  return {\r\n    type: actionTypes.SET_HOLIDAYS,\r\n    data\r\n  }\r\n}\r\n\r\nexport const setOverlay = (data) => {\r\n  return {\r\n    type: actionTypes.SET_OVERLAY,\r\n    data\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../../store/actions/constants';\r\nimport './style.scss';\r\n\r\nclass Overlay extends React.Component {\r\n\r\n    closeOverlay = (e) => {\r\n        e.stopPropagation();\r\n        const targetEle = e.target;\r\n        if (targetEle.classList.contains('overlay')) {\r\n            const { setOverlay, callback } = this.props;\r\n            setOverlay('');\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { extraClass, closeBtn } = this.props;\r\n        return (\r\n            <div className={`overlay ${extraClass}`} onClick={this.closeOverlay}>\r\n                {closeBtn && <span className='close-btn' onClick={this.closeOverlay}></span>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { ui } = state;\r\n    return {\r\n        ui\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveTab: (data) => { dispatch({ type: actionTypes.SET_ACTIVE_TAB, data }) },\r\n        setOverlay: (data) => { dispatch({ type: actionTypes.SET_OVERLAY, data }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Overlay);","import React from 'react';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nclass MiscUtils {\r\n    schoolDetails = {};\r\n    classList = [];\r\n    studentList = [];\r\n    schoolId = '';\r\n    getOptions(options) {\r\n        let value = [];\r\n        if (Array.isArray(options)) {\r\n            for (let j = 0; j < options.length; j++) {\r\n                if (typeof options[j] === 'object' && options[j] !== null) {\r\n                    value.push(<MenuItem value={options[j].studentName} key={options[j].studentId} data-id={options[j].studentId}>{options[j].studentName}</MenuItem>)\r\n                }\r\n                else {\r\n                    value.push(<MenuItem value={options[j]} key={options[j]}>{options[j]}</MenuItem>)\r\n                }\r\n\r\n            }\r\n        } else {\r\n            for (let j = 1; j <= options; j++) {\r\n                value.push(<MenuItem value={j} key={j}>{j}</MenuItem>)\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    isFieldValid(validationtype, value, validity, id) {\r\n        if (validationtype === 'password') {\r\n            validationtype = validationtype + '*';\r\n        }\r\n        if (validationtype.endsWith('*')) {\r\n            validationtype = (!value || !value.length) ? 'required' : validationtype.slice(0, -1);\r\n        }\r\n        let regex = '';\r\n        let vld = true;\r\n\r\n        if (value || validationtype === 'required') {\r\n            switch (validationtype) {\r\n                case 'onlyAlphabets':\r\n                    regex = /^[a-zA-Z ]*$/;\r\n                    vld = regex.test(value)\r\n                    break;\r\n                case 'required':\r\n                    vld = value && value.length ? true : false;\r\n                    break\r\n                case 'aplhaNumeric':\r\n                    regex = /^[a-zA-Z0-9 ]*$/;\r\n                    vld = regex.test(value);\r\n                    break\r\n                case 'numeric':\r\n                    regex = /^[0-9 ]*$/;\r\n                    vld = regex.test(value);\r\n                    break;\r\n                case 'decimal':\r\n                    regex = /^[0-9]+(\\.[0-9]{1,2})?$/;\r\n                    vld = regex.test(value);\r\n                    break;\r\n                case 'mobile':\r\n                    regex = /^[0-9 ]*$/;\r\n                    if (!regex.test(value)) {\r\n                        vld = false;\r\n                        validationtype = 'numeric';\r\n                    } else if (value.length < 10) {\r\n                        vld = false;\r\n                        validationtype = 'mobileLength';\r\n                    }\r\n                    break;\r\n                // case 'password':\r\n                //     regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/;\r\n                //     if (!regex.test(value)) {\r\n                //         vld = false;\r\n                //         validationtype = 'password';\r\n                //     } else if (value.length < 8) {\r\n                //         vld = false;\r\n                //         validationtype = 'passwordLength';\r\n                //     }\r\n                //     break;\r\n                case 'email':\r\n                    regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n                    vld = regex.test(value);\r\n                    break;\r\n                case 'allCharacters':\r\n                default:\r\n                    vld = true;\r\n                    break\r\n            }\r\n        }\r\n        return this.getFormValidity(id, vld, validity, validationtype);\r\n    }\r\n\r\n    getFormValidity(id, isValid, validity, validationtype) {\r\n        Object.assign(validity, {\r\n            [id]: {\r\n                isInvalid: !isValid,\r\n                validationtype,\r\n            }\r\n        });\r\n\r\n        const keys = Object.keys(validity);\r\n        let v = false;\r\n        if (keys.length) {\r\n            for (let i = 0; i < keys.length; i++) {\r\n                let key = keys[i];\r\n                if (validity[key].isInvalid) {\r\n                    v = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return { validity, v };\r\n    }\r\n\r\n    getErrorMessage(validationtype) {\r\n        switch (validationtype) {\r\n            case 'onlyAlphabets':\r\n                return 'Special characters or numerical values are not allowed';\r\n            case 'required':\r\n                return 'Field is required';\r\n            case 'aplhaNumeric':\r\n                return 'Special characters are not allowed'\r\n            case 'numeric':\r\n                return 'Only numerics values are allowed';\r\n            case 'decimal':\r\n                return 'Only numerics values are allowed upto 2 decimals';\r\n            case 'mobileLength':\r\n                return 'Phone number must be 10 digits.'\r\n            case 'password':\r\n                return 'Must have at least one uppercase, one lowercase, one number and one special character'\r\n            case 'passwordLength':\r\n                return 'Password must be of 8 digits.'\r\n            case 'email':\r\n                return 'Not a valid email'\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    promiseAllHandler(p) {\r\n        return Promise.all(p.map(p => p.catch(e => e)));\r\n    }\r\n}\r\n\r\n\r\nconst miscUtils = new MiscUtils();\r\nexport default miscUtils;","import React from 'react';\r\n// import {Link, withRouter} from 'react-router-dom';\r\nimport auth0Client from './../../Auth';\r\nimport { connect } from 'react-redux';\r\nimport { setLoginDetails } from './../../store/actions';\r\nimport Overlay from './../sub-component/overlay';\r\nimport actionTypes from '../../store/actions/constants';\r\nimport './style.scss';\r\nimport miscUtils from '../../utils/miscUtils';\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n        dropdownActive: false,\r\n    }\r\n  }\r\n\r\n  toggleDropdown = (e) => {\r\n        e = e || window.event;\r\n        e.stopPropagation();\r\n        const { dropdownActive } = this.state;\r\n        const { setOverlay } = this.props;\r\n\r\n        console.log('toggleDropdown: ');\r\n        if(!dropdownActive) {\r\n            setOverlay('menu-nav-dropdown');\r\n        } else {\r\n            setOverlay('');\r\n        }\r\n        this.setState({dropdownActive: !dropdownActive});\r\n  }\r\n\r\n  signOut = () => {\r\n    console.log('signout login');\r\n    const { saveUsername } = this.props;\r\n    auth0Client.signOut();\r\n    saveUsername('signout');\r\n    // this.props.history.push('/login');\r\n    window.location.href='/'\r\n  };\r\n\r\n    render(){\r\n        const { detail, ui } = this.props;\r\n        const { userId } = detail;\r\n        let { activeOverlay } = ui;\r\n        miscUtils.schoolDetails = detail.schoolDetails;\r\n        miscUtils.schoolId = detail.schoolId;\r\n        miscUtils.role = detail.role;\r\n        miscUtils.studentId = detail.studentId ? detail.studentId: '';\r\n        const { dropdownActive } = this.state;\r\n        const showOverlay = activeOverlay === 'menu-nav-dropdown';\r\n      return (\r\n          <header>\r\n                <nav className={`nav-wrapper ${dropdownActive && 'active-dropdown'}`}>\r\n                    {/* {\r\n                        !auth0Client.isAuthenticated() &&\r\n                        <Link to='login' className=\"btn btn-dark\" onClick={auth0Client.signIn}>Sign In</Link>\r\n                    } */}\r\n                    {\r\n                        auth0Client.isAuthenticated() &&\r\n                        <div className='nav-bar'>\r\n                        {/* <label className=\"mr-2 text-white\">{`${auth0Client.getProfile() && auth0Client.getProfile().name}`}</label>\r\n                        <button className=\"btn btn-dark\" onClick={this.signOut}>Sign Out</button> */}\r\n                        <span className='logo-wrapper'>logo</span>\r\n                        <span className='title'>Bulkcom Shipping</span>\r\n                        <span className='profile-wrapper' onClick={this.toggleDropdown}>\r\n                            <span className='profile-name'>profile</span>\r\n                            <ul className={`profile-dropdown ${dropdownActive ? 'show' : 'hide'}`}>\r\n                                <li><label className=\"mr-2 text-white\">{`${userId ? userId : 'name'}`}</label></li>\r\n                                <li><button className=\"btn btn-primary\" onClick={this.signOut}>Sign Out</button></li>\r\n                            </ul>\r\n                        </span>\r\n                        \r\n                        </div>\r\n                    }\r\n                </nav>\r\n                {showOverlay && <Overlay extraClass='menu-overlay' callback={this.toggleDropdown}/>}\r\n          </header>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveUsername : (userId) => {dispatch(setLoginDetails(userId))},\r\n        setOverlay : (data) => {dispatch({type: actionTypes.SET_OVERLAY, data})}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(NavBar);","export const leftMenuMapping = {\r\n    user: {\r\n        link: 'user',\r\n        title: 'User',\r\n        icon: ''\r\n    },\r\n    vessel: {\r\n        link: 'vessel',\r\n        title: 'Vessel',\r\n        icon: ''\r\n    },\r\n    voyage: {\r\n        link: 'voyage',\r\n        title: 'Voyage',\r\n        icon: ''\r\n    },\r\n    performance: {\r\n        link: 'performance',\r\n        title: 'Performance',\r\n        icon: ''\r\n    }\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { leftMenuMapping } from './constants';\r\nimport { connect } from 'react-redux';\r\nimport Overlay from './../overlay';\r\nimport actionTypes from '../../../store/actions/constants';\r\n\r\nimport './style.scss';\r\n\r\nclass LeftMenu extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            activeMenu: false\r\n        }\r\n    }\r\n    clickHandler = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    toggleMenu = (e) => {\r\n        e = e || window.event;\r\n        e.stopPropagation();\r\n        console.log('toggleMenu: ');\r\n        const { activeMenu } = this.state;\r\n        const { setOverlay } = this.props;\r\n        if (!activeMenu) {\r\n            setOverlay('menu-overlay');\r\n        } else {\r\n            setOverlay('');\r\n        }\r\n        this.setState({ activeMenu: !activeMenu });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { ui } = this.props;\r\n        let { menuItem, activeOverlay } = ui;\r\n        const isMenuActive = this.state.activeMenu;\r\n        const showOverlay = activeOverlay === 'menu-overlay';\r\n        menuItem = ['user', 'vessel', 'voyage', 'performance'];\r\n        return (\r\n            <>\r\n                <div className={`left-menu-wrapper ${isMenuActive ? 'active-menu' : ''}`}>\r\n                    <div className='menu-bar'>\r\n                        <div className='menu-icon' onClick={this.toggleMenu}>\r\n                            <span className='bar b1'></span>\r\n                            <span className='bar b2'></span>\r\n                            <span className='bar b3'></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='content-wrapper'>\r\n                        <div className='title'>\r\n                            <h1 className='heading_1'>Bulkcom Shipping</h1></div>\r\n                        <div className='menu-items-wrappers'>\r\n                            <ul className='menu-items' onClick={this.clickHandler}>\r\n                                {menuItem && menuItem.length && menuItem.map((item, index) => {\r\n                                    let isActive = false;\r\n                                    isActive = (index === 0) ? true : false;\r\n                                    return <li className={`list-item ${isActive && 'active'}`} key={`item__${index}`} data-link={leftMenuMapping[item].link}>\r\n                                        <Link to={leftMenuMapping[item].link}>{leftMenuMapping[item].title}</Link>\r\n                                    </li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {activeOverlay && <Overlay extraClass='menu-overlay' callback={this.toggleMenu} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { ui } = state;\r\n    return {\r\n        ui\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveTab: (data) => { dispatch({ type: actionTypes.SET_ACTIVE_TAB, data }) },\r\n        setOverlay: (data) => { dispatch({ type: actionTypes.SET_OVERLAY, data }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftMenu);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport './style.scss';\r\n\r\nfunction TabPanel(props) {\r\n    const {\r\n        children,\r\n        value,\r\n        index,\r\n        ...other\r\n    } = props;\r\n\r\n    return (\r\n        <div role='tabpanel'\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tab-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (<Box >{children}</Box>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n}\r\n\r\nfunction getTabs(tabsLabel, value) {\r\n    const tabs = tabsLabel && tabsLabel.map((item, index) => {\r\n        if (item.icon) {\r\n            return (<Tab icon={item.icon} label={item.label} {...a11yProps(0)} key={`key-tab-${index}`} />);\r\n        }\r\n        return (<Tab label={item.label} {...a11yProps(0)} key={`key-tab-${index}`} />);\r\n    });\r\n    return tabs;\r\n}\r\n\r\nfunction getTabPanels(tabPanelChild, value) {\r\n    const tabspanels = tabPanelChild && tabPanelChild.map((item, index) => {\r\n        return (<TabPanel value={value} index={index} key={`key-tabpanel-${index}`}>\r\n            {item.child}\r\n        </TabPanel>);\r\n    });\r\n\r\n    return tabspanels;\r\n}\r\n\r\nfunction ScrollableTabsButtonAuto(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        const { onChange } = props;\r\n\r\n        if(onChange(event, newValue)) {\r\n            setValue(newValue);\r\n        }\r\n    }\r\n    const { tabsLabel, tabPanelChild, TabIndicatorProps, paper } = props && props.tabs;\r\n    const { isDirty, newTabVal } = props;\r\n    if(isDirty !== undefined) {\r\n        if(!isDirty && value!== newTabVal) {\r\n            setValue(newTabVal);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {\r\n                paper ? <Paper square>\r\n                    <Tabs value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor='primary'\r\n                        textColor='primary'\r\n                        variant='scrollable'\r\n                        scrollButtons='auto'\r\n                        TabIndicatorProps={TabIndicatorProps}\r\n                        aria-label='scrollable auto tab'\r\n                    >\r\n                        {getTabs(tabsLabel, value)}\r\n                    </Tabs>\r\n                </Paper>\r\n                    :\r\n                    <AppBar position='static' color='default'>\r\n                        <Tabs value={value}\r\n                            onChange={handleChange}\r\n                            indicatorColor='primary'\r\n                            textColor='primary'\r\n                            variant='scrollable'\r\n                            scrollButtons='auto'\r\n                            TabIndicatorProps={TabIndicatorProps}\r\n                            aria-label='scrollable auto tab'\r\n                        >\r\n                            {getTabs(tabsLabel, value)}\r\n                        </Tabs>\r\n                    </AppBar>\r\n            }\r\n            {getTabPanels(tabPanelChild, value)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScrollableTabsButtonAuto;","const constants = {\r\n    roles: ['Client', 'Manager'],\r\n    clientType: ['Charterer', 'Owner'],\r\n    clientDisplayList: ['View Performance', 'View Voyage Details', 'View Documents'],\r\n    managerRolesList: ['Add New User', 'View All Users', 'Edit User Details', 'Add New Vessel', 'View All Vessels', 'Edit Vessel Details', 'Fill Voyage Details', 'View All Voyage Details', 'Edit Voyage Details', 'Fill Performance Details', 'View All Performance Details', 'Edit Performance Details'],\r\n    voyageFieldList: ['Vessel Size', 'Load Port', 'Discharge Port', 'Cargo', 'Cargo Intake', 'Owner Name', 'Shipper', 'Load Port Agent', 'Discharge Port Agent', 'Receiver', 'On Hire Surveyor', 'Off Hire Surveyor', 'Bunker Supplier', 'Bunker Trader', 'PNI Insurance', ' Weather Routing Company'],\r\n}\r\n\r\nexport default constants;\r\n\r\n\r\n\r\n\r\n// 1. Help in make only some fields editable in table\r\n// 2. help in make editable icon visible on check \r\n\r\n\r\n\r\n\r\n\r\n//pending\r\n// 1. login\r\n// 2. forgot password\r\n// 3. edit user\r\n// 4. role based tabs (all Components)\r\n// 5. dynamic fields(vessel)\r\n// 6. view other fields in Table(vessel and voyage)\r\n// 7. edit and delete action( vessel and voyage)\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ConfirmationAlert(props) {\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.confAlertDetails.openAlert}\r\n        onClose={props.handleCancelAlert}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.confAlertDetails.titleMsg}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.confAlertDetails.descrMsg}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleCancelAlert} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.handleSuccessAlert} color=\"primary\" autoFocus>\r\n            {props.confAlertDetails.buttonTitle}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Alert(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.alertDetails.openAlert}\r\n        onClose={props.handleCancelAlert}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.alertDetails.titleMsg}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {props.alertDetails.descrMsg}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleCancelAlert} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import axios from 'axios';\r\n\r\nclass API {\r\n    constructor() {\r\n        this.apiUrl = 'http://localhost:3003';\r\n    }\r\n\r\n    /*\r\n    * loginUser: method to validate user\r\n    * argument: data : login information { userId, password, rememberMe }\r\n    */\r\n    loginUser(data) {\r\n        return axios.post(this.apiUrl + '/userDetails/login', data);\r\n    }\r\n\r\n    /*\r\n    * fetchMarks: method to fetch student's marks\r\n    * argument: data : { userId, schoolId, studentId }\r\n    */\r\n    checkUsername = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/checkUsername', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    updatePassword = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/updatePassword', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    login = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/login', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertUserDetails = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/insertUserDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/insertVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertPerformanceData = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/insertPerformanceData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVoyageData = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/insertVoyageData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllVesselsPerformance = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getAllVessels/' + data.isDetailsFilled);\r\n    }\r\n\r\n    getAllVoyage = data => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyage/' + data.companyName, {\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n    }\r\n\r\n    getAllUserDetails = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllUserDetails');\r\n    }\r\n\r\n    getAllClientList = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllClientList');\r\n    }\r\n\r\n    getAllVesselsList = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselsList');\r\n    }\r\n\r\n    getAllVesselsDetails = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselDetails');\r\n    }\r\n\r\n    getAllVoyageDetails = () => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyageDetails');\r\n    }\r\n\r\n    fillPerformanceDetails = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/fillPerformanceDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVesselDetails = data => {\r\n        return axios.delete(this.apiUrl + '/vesselDetails/' + data);\r\n    }\r\n\r\n    updateVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/updateVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVoyageDetails = data => {\r\n        return axios.delete(this.apiUrl + '/voyageDetails/' + data);\r\n    }\r\n\r\n    updateVoyageDetails = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/updateVoyageDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getPortDetails = data => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getPortDetails/' + data.userName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n\r\n    getPerformanceDetails = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getPerformanceDetails/' + data.chartererName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n\r\n    getCompletePerformanceDetailsForView = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getCompletePerformanceDetailsForView/' + data.userName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n};\r\n\r\nconst api = new API();\r\nexport default api;","import React, { Component } from 'react';\r\nimport { Paper, Grid, Button, InputLabel, Select, Checkbox, ListItemText, MenuItem, Input, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport constants from '../../utils/constants';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport api from '../../api';\r\n\r\nclass AddNewUser extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDirty: false,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      userDetails: {},\r\n      validity: {},\r\n      isformValid: true\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    confAlertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: '',\r\n      buttonTitle: '',\r\n    },\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  handleSuccessAlert = async e => {\r\n    e.preventDefault();\r\n    const { isDirty, userDetails } = this.state;\r\n    if (isDirty) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n        validity: {}\r\n      });\r\n    }\r\n\r\n    let resp = await api.insertUserDetails({ ...userDetails });\r\n    if (resp.data.status.errors || resp.data.status.errorMsg || resp.data.status.errmsg || !resp.data.status) {\r\n      if (resp && resp.data && resp.data.status && resp.data.status.errmsg && resp.data.status.errmsg.indexOf('duplicate key error') >= 0) {\r\n        this.setState({\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Error !!',\r\n            descrMsg: 'Username already exits.'\r\n          }\r\n        });\r\n        return;\r\n      }\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to add new user...'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n        userDetails: {},\r\n        validity: {},\r\n        isformValid: true,\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Success !!',\r\n          descrMsg: 'Added new user successfully..'\r\n        },\r\n      });\r\n    }\r\n    this.props.handleBlocking(false);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: true,\r\n        titleMsg: 'Add New User ?',\r\n        descrMsg: 'Do you want to submit?',\r\n        buttonTitle: 'Submit'\r\n      },\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { id, value, name } = e.target;\r\n    let { userDetails, isformValid, validity } = this.state;\r\n    if (typeof e.target.getAttribute === 'function') {\r\n      let validationtype = e.target.getAttribute('type');\r\n      if (validationtype) {\r\n        const resp = miscUtils.isFieldValid(validationtype, value, validity, id);\r\n        isformValid = !resp.v;\r\n        this.setState({\r\n          validity: resp.validity,\r\n          validationtype,\r\n          isformValid: !resp.v\r\n        });\r\n      }\r\n    }\r\n\r\n    if (id) {\r\n      Object.assign(userDetails, { [id]: value });\r\n    } else {\r\n      Object.assign(userDetails, { [name]: value });\r\n    }\r\n\r\n    this.updateForm(userDetails, isformValid);\r\n  };\r\n\r\n  updateForm(userDetails, isformValid) {\r\n    const { userName, companyName, displayName, password, role, managerRoles, clientDisplay, clientType } = userDetails\r\n    if (isformValid && userName && companyName && displayName && password && role) {\r\n      if (role === 'Client' && clientType && clientDisplay && clientDisplay.length) {\r\n        Object.assign(userDetails, { managerRoles: [] });\r\n        this.setState({ isDirty: true, userDetails });\r\n      } else if (role === 'Manager' && managerRoles && managerRoles.length) {\r\n        Object.assign(userDetails, { clientType: role, clientDisplay: [] });\r\n        this.setState({ isDirty: true, userDetails });\r\n      } else {\r\n        this.setState({ isDirty: false, userDetails });\r\n      }\r\n    } else {\r\n      this.setState({ isDirty: false, userDetails });\r\n    }\r\n\r\n    this.props.handleBlocking(true);\r\n  }\r\n\r\n  render() {\r\n    const { validity, isDirty, isformValid, confAlertDetails, userDetails, alertDetails } = this.state;\r\n    let { userName, companyName, displayName, password, role } = userDetails;\r\n    let showRoledata;\r\n    if (role === 'Manager') {\r\n      showRoledata = this.getManagerRoleData();\r\n    } else if (role === 'Client') {\r\n      showRoledata = this.getClientRoleData();\r\n    }\r\n\r\n    return (\r\n      <form autoComplete=\"off\" noValidate >\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <Paper style={{ marginTop: '2%' }}>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.userName && validity.userName.isInvalid}\r\n                id='userName'\r\n                label='User Name *'\r\n                type='email*'\r\n                onChange={this.handleChange}\r\n                value={userName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.userName && validity.userName.isInvalid ? miscUtils.getErrorMessage(validity.userName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.companyName && validity.companyName.isInvalid}\r\n                id='companyName'\r\n                label='Company Name *'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={companyName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.companyName && validity.companyName.isInvalid ? miscUtils.getErrorMessage(validity.companyName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.displayName && validity.displayName.isInvalid}\r\n                id='displayName'\r\n                label='Display Name *'\r\n                type='onlyAlphabets*'\r\n                onChange={this.handleChange}\r\n                value={displayName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.displayName && validity.displayName.isInvalid ? miscUtils.getErrorMessage(validity.displayName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.password && validity.password.isInvalid}\r\n                id='password'\r\n                label='Password *'\r\n                type='password'\r\n                onChange={this.handleChange}\r\n                value={password || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.password && validity.password.isInvalid ? miscUtils.getErrorMessage(validity.password.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Role *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                autoWidth\r\n                id='role'\r\n                name='role'\r\n                value={role || ''}\r\n                onChange={this.handleChange}>\r\n                {miscUtils.getOptions(constants.roles)}\r\n              </Select>\r\n            </Grid>\r\n            {showRoledata}\r\n          </Grid>\r\n          <Button\r\n            className={`${(isDirty && isformValid) ? 'white-color' : 'grey-color'} btn-save`}\r\n            variant='contained'\r\n            size='large'\r\n            startIcon={<SaveIcon />}\r\n            disabled={!(isDirty && isformValid)}\r\n            onClick={this.handleSubmit}> Submit  </Button>\r\n        </Paper>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  getManagerRoleData() {\r\n    let { managerRoles } = this.state.userDetails;\r\n    if (!managerRoles) {\r\n      managerRoles = [];\r\n    }\r\n    const names = constants.managerRolesList;\r\n    const data = <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n      <InputLabel id=\"demo-mutiple-checkbox-label\" className='inputLabels'>Select Manager Roles *</InputLabel>\r\n      <Select\r\n        className='field-select'\r\n        labelId=\"demo-mutiple-checkbox-label\"\r\n        id=\"demo-mutiple-checkbox\"\r\n        multiple\r\n        value={managerRoles}\r\n        name='managerRoles'\r\n        onChange={this.handleChange}\r\n        input={<Input id=\"select-multiple-chip\" />}\r\n        renderValue={(selected) => selected.join(', ')}>\r\n        {names.map((name) => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={managerRoles.indexOf(name) > -1} />\r\n            <ListItemText primary={name} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </Grid>\r\n    return data;\r\n  }\r\n\r\n  getClientRoleData() {\r\n    let { clientType, clientDisplay } = this.state.userDetails;\r\n    if (!clientDisplay) {\r\n      clientDisplay = [];\r\n    }\r\n    const names = constants.clientDisplayList.sort();\r\n    const data = <>\r\n      <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n        <InputLabel id='demo-simple-select-label' className='inputLabels'>Client Type *</InputLabel>\r\n        <Select\r\n          className='field-select'\r\n          labelId='demo-simple-select-label'\r\n          autoWidth\r\n          id='clientType'\r\n          name='clientType'\r\n          value={clientType || ''}\r\n          onChange={this.handleChange}>\r\n          {miscUtils.getOptions(constants.clientType)}\r\n        </Select>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\" className='inputLabels'>Select Client Display *</InputLabel>\r\n        <Select\r\n          className='field-select'\r\n          labelId=\"demo-mutiple-checkbox-label\"\r\n          id=\"demo-mutiple-checkbox\"\r\n          multiple\r\n          value={clientDisplay}\r\n          name='clientDisplay'\r\n          onChange={this.handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => selected.join(', ')}>\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={clientDisplay.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Grid>\r\n    </>\r\n    return data\r\n  }\r\n\r\n}\r\n\r\nexport default AddNewUser;\r\n","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nexport default function UserTable(props) {\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n\r\n  const [setState] = React.useState({\r\n    columns: [\r\n      { title: 'Name', field: 'name' },\r\n      { title: 'Surname', field: 'surname' },\r\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n      {\r\n        title: 'Birth Place',\r\n        field: 'birthCity',\r\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n      },\r\n    ],\r\n    data: [\r\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n      {\r\n        name: 'Zerya Betül',\r\n        surname: 'Baran',\r\n        birthYear: 2017,\r\n        birthCity: 34,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title={props.title}\r\n      columns={props.columns}\r\n      data={props.data}\r\n      icons={tableIcons}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState((prevState) => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: (oldData) =>\r\n          new Promise((resolve) => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState((prevState) => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport Alert from '../../utils/alert';\r\nimport UserTable from './userTable';\r\nimport api from '../../api';\r\n\r\nclass ViewAllUsers extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    }\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n  }\r\n\r\n  componentDidMount = async e => {\r\n    const res = await api.getAllUserDetails();\r\n    if (res.data.status) {\r\n      this.setState({ clientList: res.data.clientList });\r\n    }\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  render() {\r\n    const columns = [{ field: 'userName', title: 'User Name' },\r\n    { field: 'displayName', title: 'Display Name' },\r\n    { field: 'companyName', title: 'Company Name' },\r\n    { field: 'role', title: 'Role' },\r\n    { field: 'clientType', title: 'User Type' },\r\n    { field: 'viewVesselList', title: 'View' }];\r\n\r\n    const { clientList, alertDetails } = this.state;\r\n    return (\r\n      <form>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <UserTable title={'View All Users'} data={clientList} columns={columns} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewAllUsers;","import React, { Component } from 'react';\r\nimport ScrollableTabsButtonAuto from '../sub-component/ScrollableTabsButtonAuto';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport AddNewUser from './Form_AddNewUser';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport ViewAllUsers from './Form_ViewAllUsers';\r\n\r\nclass Users extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n      isDirty: false,\r\n      localClickedtTab: 0,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n\r\n    };\r\n\r\n    this.handleBlocking = this.handleBlocking.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  handleIconDetail = (event, value) => {\r\n    if (value !== this.state.activeTabIndex) {\r\n      const { isDirty } = this.state;\r\n      if (isDirty) {\r\n        this.setState({\r\n          confAlertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Discard Changes?',\r\n            descrMsg: '  You have unsaved changes. Do you want to discard?',\r\n            buttonTitle: ' Discard'\r\n          },\r\n          localClickedtTab: value\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    this.setState({ activeTabIndex: value, localClickedtTab: value });\r\n    return true;\r\n  };\r\n\r\n  handleCancelAlert = () => {\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      localClickedtTab: this.state.activeTabIndex\r\n    })\r\n  };\r\n\r\n  handleSuccessAlert = e => {\r\n    e.preventDefault();\r\n    const { localClickedtTab, activeTabIndex, isDirty } = this.state\r\n    if (localClickedtTab !== activeTabIndex && isDirty) {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n      this.setState({ activeTabIndex: localClickedtTab });\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleBlocking = e => this.setState({ isDirty: e });\r\n\r\n  getTabData = () => {\r\n    const tabs = {\r\n      tabsLabel: [{\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>VIEW ALL USERS</span>\r\n      }, {\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>ADD NEW USER</span>\r\n      },\r\n      ],\r\n      tabPanelChild:\r\n        [{\r\n          child: <ViewAllUsers />\r\n        },\r\n        {\r\n          child: <AddNewUser handleBlocking={this.handleBlocking} />\r\n        }]\r\n    }\r\n\r\n    return tabs;\r\n  }\r\n\r\n  /* tab data end */\r\n\r\n  render() {\r\n    const { confAlertDetails, alertDetails, isDirty, localClickedtTab } = this.state;\r\n    return (\r\n      <div className='my-profile'>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <ScrollableTabsButtonAuto paper={true} tabs={this.getTabData()} onChange={this.handleIconDetail} TabIndicatorProps={{ style: { background: '#e37933' } }} isDirty={isDirty} newTabVal={localClickedtTab} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Users);\r\n","import React, { Component } from 'react';\r\nimport { Paper, Grid, Button, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport api from '../../api';\r\n\r\nclass AddNewVessel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDirty: false,\r\n      isTyped: false,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      vesselDetails: props && props.onRowClickedData ? { ...props.onRowClickedData } : {},\r\n      isEditPage: props && props.onRowClickedData && Object.keys(props.onRowClickedData).length ? true : false,\r\n      validity: {},\r\n      isformValid: true\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props && this.props.onRowClickedData) {\r\n      this.updateForm(this.props.onRowClickedData, true);\r\n    }\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    confAlertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: '',\r\n      buttonTitle: '',\r\n    },\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  handleSuccessAlert = async e => {\r\n    e.preventDefault();\r\n    const { isDirty, vesselDetails } = this.state;\r\n    if (isDirty) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    const resp = await api.insertVesselDetails({ vesselDetails });\r\n    if (!resp.data.status) {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to add new user...'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isDirty: false,\r\n        isTyped: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n        vesselDetails: {},\r\n        validity: {},\r\n        isformValid: true,\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Success !!',\r\n          descrMsg: 'Added new vessel successfully..'\r\n        },\r\n      });\r\n    }\r\n    this.props.handleBlocking(false);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: true,\r\n        titleMsg: 'Add New Vessel ?',\r\n        descrMsg: 'Do you want to submit?',\r\n        buttonTitle: 'Submit'\r\n      },\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { id, value, name } = e.target;\r\n    let { vesselDetails, isformValid, validity,isTyped } = this.state;\r\n    if (typeof e.target.getAttribute === 'function') {\r\n      let validationtype = e.target.getAttribute('type');\r\n      if (validationtype) {\r\n        const resp = miscUtils.isFieldValid(validationtype, value, validity, id);\r\n        isformValid = !resp.v;\r\n        this.setState({\r\n          validity: resp.validity,\r\n          validationtype,\r\n          isformValid: !resp.v\r\n        });\r\n      }\r\n    }\r\n    isTyped = true;\r\n    if (id) {\r\n      Object.assign(vesselDetails, { [id]: value });\r\n    } else {\r\n      Object.assign(vesselDetails, { [name]: value });\r\n    }\r\n\r\n    this.updateForm(vesselDetails, isformValid, isTyped);\r\n  };\r\n\r\n  updateForm(vesselDetails, isformValid, isTyped) {\r\n    const { vesselName, IMO, DWT } = vesselDetails\r\n    if (isformValid && vesselName && IMO && DWT) {\r\n      this.setState({ isDirty: true, vesselDetails,isTyped });\r\n    } else {\r\n      this.setState({ isDirty: false, vesselDetails,isTyped });\r\n    }\r\n\r\n    if (isTyped) {\r\n      this.props.handleBlocking(true);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { validity, isDirty, isformValid, confAlertDetails, vesselDetails, alertDetails, isEditPage} = this.state;\r\n    let { vesselName, IMO, DWT, flag, vesselType, built, draft, LOA, beam, GRT, NRT, TPC, holdsHatches, grainCapacity, baleCapacity, cranes, grabs } = vesselDetails;\r\n    return (\r\n      <form autoComplete=\"off\" noValidate >\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <Paper style={{ marginTop: '2%' }}>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 15 }}\r\n                disabled={isEditPage}\r\n                error={validity && validity.vesselName && validity.vesselName.isInvalid}\r\n                id='vesselName'\r\n                label='Vessel Name *'\r\n                type='aplhaNumeric*'\r\n                onChange={this.handleChange}\r\n                value={vesselName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.vesselName && validity.vesselName.isInvalid ? miscUtils.getErrorMessage(validity.vesselName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 15 }}\r\n                disabled={isEditPage}\r\n                error={validity && validity.IMO && validity.IMO.isInvalid}\r\n                id='IMO'\r\n                label=' IMO *'\r\n                type='numeric*'\r\n                onChange={this.handleChange}\r\n                value={IMO || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.IMO && validity.IMO.isInvalid ? miscUtils.getErrorMessage(validity.IMO.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                disabled={isEditPage}\r\n                error={validity && validity.DWT && validity.DWT.isInvalid}\r\n                id='DWT'\r\n                label='DWT (MT) *'\r\n                type='decimal*'\r\n                onChange={this.handleChange}\r\n                value={DWT || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.DWT && validity.DWT.isInvalid ? miscUtils.getErrorMessage(validity.DWT.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 15 }}\r\n                error={validity && validity.flag && validity.flag.isInvalid}\r\n                id='flag'\r\n                label='Flag'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={flag || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.flag && validity.flag.isInvalid ? miscUtils.getErrorMessage(validity.flag.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.vesselType && validity.vesselType.isInvalid}\r\n                id='vesselType'\r\n                label='Vessel Type'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={vesselType || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.vesselType && validity.vesselType.isInvalid ? miscUtils.getErrorMessage(validity.vesselType.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 4 }}\r\n                error={validity && validity.built && validity.built.isInvalid}\r\n                id='built'\r\n                label='Built Year'\r\n                type='numeric'\r\n                onChange={this.handleChange}\r\n                value={built || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.built && validity.built.isInvalid ? miscUtils.getErrorMessage(validity.built.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.draft && validity.draft.isInvalid}\r\n                id='draft'\r\n                label=' Draft (M)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={draft || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.draft && validity.draft.isInvalid ? miscUtils.getErrorMessage(validity.draft.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.LOA && validity.LOA.isInvalid}\r\n                id='LOA'\r\n                label='LOA (M)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={LOA || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.LOA && validity.LOA.isInvalid ? miscUtils.getErrorMessage(validity.LOA.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.beam && validity.beam.isInvalid}\r\n                id='beam'\r\n                label='Beam (M)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={beam || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.beam && validity.beam.isInvalid ? miscUtils.getErrorMessage(validity.beam.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.GRT && validity.GRT.isInvalid}\r\n                id='GRT'\r\n                label='GRT (MT)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={GRT || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.GRT && validity.GRT.isInvalid ? miscUtils.getErrorMessage(validity.GRT.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.NRT && validity.NRT.isInvalid}\r\n                id='NRT'\r\n                label='NRT (MT)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={NRT || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.NRT && validity.NRT.isInvalid ? miscUtils.getErrorMessage(validity.NRT.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.TPC && validity.TPC.isInvalid}\r\n                id='TPC'\r\n                label='TPC (MT/CBM)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={TPC || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.TPC && validity.TPC.isInvalid ? miscUtils.getErrorMessage(validity.TPC.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.holdsHatches && validity.holdsHatches.isInvalid}\r\n                id='holdsHatches'\r\n                label='Holds/Hatches'\r\n                type='allCharacters'\r\n                onChange={this.handleChange}\r\n                value={holdsHatches || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.holdsHatches && validity.holdsHatches.isInvalid ? miscUtils.getErrorMessage(validity.holdsHatches.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 12 }}\r\n                error={validity && validity.grainCapacity && validity.grainCapacity.isInvalid}\r\n                id='grainCapacity'\r\n                label='Grain Capacity (CBM)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={grainCapacity || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.grainCapacity && validity.grainCapacity.isInvalid ? miscUtils.getErrorMessage(validity.grainCapacity.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 12 }}\r\n                error={validity && validity.baleCapacity && validity.baleCapacity.isInvalid}\r\n                id='baleCapacity'\r\n                label='Bale Capacity (CBM)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={baleCapacity || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.baleCapacity && validity.baleCapacity.isInvalid ? miscUtils.getErrorMessage(validity.baleCapacity.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.cranes && validity.cranes.isInvalid}\r\n                id='cranes'\r\n                label='Cranes (MT)'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={cranes || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.cranes && validity.cranes.isInvalid ? miscUtils.getErrorMessage(validity.cranes.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.grabs && validity.grabs.isInvalid}\r\n                id='grabs'\r\n                label='Grabs (CBM)'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={grabs || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.grabs && validity.grabs.isInvalid ? miscUtils.getErrorMessage(validity.grabs.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            className={`${(isDirty && isformValid) ? 'white-color' : 'grey-color'} btn-save`}\r\n            variant='contained'\r\n            size='large'\r\n            startIcon={<SaveIcon />}\r\n            disabled={!(isDirty && isformValid)}\r\n            onClick={this.handleSubmit}> Submit  </Button>\r\n        </Paper>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewVessel;\r\n","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport api from '../../api';\r\n\r\nexport default function UserTable(props) {\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  let [columns, setColumns] = React.useState([]);\r\n  let [data, setData] = React.useState([]);\r\n\r\n  if (props.columns && props.columns.length && !columns.length) {\r\n    setColumns(props.columns);\r\n  }\r\n\r\n  if (props.data && props.data.length && !data.length) {\r\n    setData(props.data)\r\n  }\r\n\r\n  return (\r\n    <MaterialTable\r\n      title={props.title}\r\n      columns={props.columns}\r\n      data={props.data}\r\n      icons={tableIcons}\r\n      onRowClick={props.onRowClick}\r\n      editable={{\r\n        onRowDelete: (oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setData(async prevState => {\r\n                const data = [...prevState];\r\n                let resp = await api.deleteVesselDetails(oldData['_id']);\r\n                if (resp.data.status) {\r\n                  window.location.reload();\r\n                  // data.splice(data.indexOf(oldData), 1);\r\n                }\r\n                return data;\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport Alert from '../../utils/alert';\r\nimport UserTable from './userTable';\r\nimport api from '../../api';\r\n\r\nclass ViewAllVessels extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    }\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n  }\r\n\r\n  componentDidMount = async e => {\r\n    const res = await api.getAllVesselsDetails();\r\n    if (res.data.status) {\r\n      this.setState({ vesselList: res.data.vesselList });\r\n    }\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  onRowClick = (event, rowData) => {\r\n    this.props.handleRowClicked(rowData);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      { field: 'vesselName', title: 'Vessel Name' },\r\n      { field: 'IMO', title: 'IMO' },\r\n      { field: 'DWT', title: ' DWT (MT)' },\r\n      { field: 'flag', title: 'Flag' },\r\n      { field: 'vesselType', title: 'Vessel Type' },\r\n      { field: 'built', title: 'Built Year' },\r\n      { field: 'draft', title: 'Draft' },\r\n      { field: 'LOA', title: 'LOA (M)' },\r\n      { field: 'beam', title: 'Beam (M)' },\r\n      { field: 'GRT', title: 'GRT (MT)' },\r\n      { field: 'NRT', title: 'NRT (MT)' },\r\n      { field: 'TPC', title: 'TPC (MT/CBM)' },\r\n      { field: 'holdsHatches', title: 'Holds/Hatches' },\r\n      { field: 'grainCapacity', title: 'Grain Capacity (CBM)' },\r\n      { field: 'baleCapacity', title: 'Bale Capacity (CBM)' },\r\n      { field: 'cranes', title: 'Cranes (MT)' },\r\n      { field: 'grabs', title: 'Grabs (CBM)' },\r\n      // { field: 'otherFields', title: 'Other Details' }\r\n    ];\r\n    const { vesselList, alertDetails } = this.state;\r\n    return (\r\n      <form>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <UserTable title={'View All Vessels'} data={vesselList} columns={columns} onRowClick={this.onRowClick} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewAllVessels;","import React, { Component } from 'react';\r\nimport ScrollableTabsButtonAuto from '../sub-component/ScrollableTabsButtonAuto';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport AddNewVessel from './Form_AddNewVessel';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport ViewAllVessels from './Form_ViewAllVessels';\r\n\r\nclass Vessel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n      isDirty: false,\r\n      localClickedtTab: 0,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n\r\n    };\r\n\r\n    this.handleBlocking = this.handleBlocking.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n    this.handleRowClicked = this.handleRowClicked.bind(this);\r\n    this.setState({ onRowClickedData: {} });\r\n  }\r\n\r\n  handleIconDetail = (event, value) => {\r\n    if (value !== this.state.activeTabIndex) {\r\n      const { isDirty } = this.state;\r\n      if (isDirty) {\r\n        this.setState({\r\n          confAlertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Discard Changes?',\r\n            descrMsg: '  You have unsaved changes. Do you want to discard?',\r\n            buttonTitle: ' Discard'\r\n          },\r\n          localClickedtTab: value\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    this.setState({ activeTabIndex: value, localClickedtTab: value });\r\n    return true;\r\n  };\r\n\r\n  handleCancelAlert = () => {\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      localClickedtTab: this.state.activeTabIndex\r\n    })\r\n  };\r\n\r\n  handleSuccessAlert = e => {\r\n    e.preventDefault();\r\n    const { localClickedtTab, activeTabIndex, isDirty } = this.state\r\n    if (localClickedtTab !== activeTabIndex && isDirty) {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n      this.setState({ activeTabIndex: localClickedtTab });\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleBlocking = e => this.setState({ isDirty: e });\r\n  handleRowClicked = e => this.setState({ activeTabIndex: 1, localClickedtTab: 1, onRowClickedData: e });\r\n\r\n  getTabData = () => {\r\n    const tabs = {\r\n      tabsLabel: [{\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>VIEW ALL VESSELS</span>\r\n      }, {\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>ADD NEW VESSEL</span>\r\n      },\r\n      ],\r\n      tabPanelChild:\r\n        [{\r\n          child: <ViewAllVessels handleRowClicked={this.handleRowClicked} />\r\n        },\r\n        {\r\n          child: <AddNewVessel handleBlocking={this.handleBlocking} onRowClickedData={this.state.onRowClickedData} />\r\n        }]\r\n    }\r\n\r\n    return tabs;\r\n  }\r\n\r\n  /* tab data end */\r\n\r\n  render() {\r\n    const { confAlertDetails, alertDetails, isDirty, localClickedtTab } = this.state;\r\n    return (\r\n      <div className='my-profile'>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <ScrollableTabsButtonAuto paper={true} tabs={this.getTabData()} onChange={this.handleIconDetail} TabIndicatorProps={{ style: { background: '#e37933' } }} isDirty={isDirty} newTabVal={localClickedtTab} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Vessel);\r\n","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport api from '../../api';\r\n\r\nexport default function UserTable(props) {\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  let [columns, setColumns] = React.useState([]);\r\n  let [data, setData] = React.useState([]);\r\n\r\n  if (props.columns && props.columns.length && !columns.length) {\r\n    setColumns(props.columns);\r\n  }\r\n\r\n  if (props.data && props.data.length && !data.length) {\r\n    setData(props.data)\r\n  }\r\n\r\n  return (\r\n    <MaterialTable\r\n      title={props.title}\r\n      columns={props.columns}\r\n      data={props.data}\r\n      icons={tableIcons}\r\n      onRowClick={props.onRowClick}\r\n      editable={{\r\n        onRowDelete: (oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setData(async prevState => {\r\n                const data = [...prevState];\r\n                let resp = await api.deleteVoyageDetails(oldData['_id']);\r\n                if (resp.data.status) {\r\n                  window.location.reload();\r\n                  // data.splice(data.indexOf(oldData), 1);\r\n                }\r\n                return data;\r\n              });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Alert from '../../utils/alert';\r\nimport UserTable from './userTable';\r\nimport api from '../../api';\r\n\r\nclass ViewVoyageDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    }\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n  }\r\n  checkandRemoveObject(data) {\r\n    let updatedArray = [];\r\n    updatedArray = data.map((item) => {\r\n      let udpatedItem = '';\r\n      if(item.otherFields) {\r\n        Object.keys(item.otherFields).forEach(function(index,value){\r\n          udpatedItem = udpatedItem + index+\":\"+item.otherFields[index]+'|'\r\n        });\r\n        item.otherFields = udpatedItem;\r\n      }\r\n    })\r\n    return data;\r\n  }\r\n\r\n  componentDidMount = async e => {\r\n    const res = await api.getAllVoyageDetails();\r\n    if (res.data.status) {\r\n      let updatedResult = this.checkandRemoveObject(res.data.voyageList);\r\n      this.setState({ voyageList: updatedResult });\r\n    }\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  onRowClick = (event, rowData) => {\r\n    this.props.handleRowClicked(rowData);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      { field: 'chartererName', title: 'Charterer Name' },\r\n      { field: 'vesselName', title: 'Vessel Name' },\r\n      { field: 'cpDate', title: 'CP Date' },\r\n      { field: 'vesselSize', title: ' Vessel Size' },\r\n      { field: 'loadPort', title: ' Load Port' },\r\n      { field: 'dischargePort', title: 'Discharge Point' },\r\n      { field: 'cargo', title: 'Cargo' },\r\n      { field: 'cargoIntake', title: ' Cargo Intake' },\r\n      { field: 'ownerName', title: 'Owner Name' },\r\n      { field: 'shipper', title: 'Shipper' },\r\n      { field: 'loadPortAgent', title: 'Load Port Agent' },\r\n      { field: 'dischargePortAgent', title: 'Discharge Port Agent' },\r\n      { field: 'receiver', title: 'Receiver' },\r\n      { field: 'onHireSurveyor', title: 'On Hire Surveyor' },\r\n      { field: 'offHireSurveyor', title: 'Off Hire Surveyor' },\r\n      { field: 'bunkerSupplier', title: 'Bunker Supplier' },\r\n      { field: 'bunkerTrader', title: 'Bunker Trader' },\r\n      { field: 'pniInsurance', title: 'PNI Insurance' },\r\n      { field: 'weatherRoutingCompany', title: ' Weather Routing Company' },\r\n      { field: 'otherFields', title: 'Other Details' },\r\n      { field: 'fieldVisibility', title: 'Visible' }\r\n    ];\r\n\r\n    const { voyageList, alertDetails } = this.state;\r\n    return (\r\n      <form>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <UserTable title={'View Voyage Details'} data={voyageList} columns={columns} onRowClick={this.onRowClick} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewVoyageDetails;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { Paper, Grid, Button, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './style.scss';\r\nimport miscUtils from '../../utils/miscUtils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SimplePopover(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [validity, setValidity] = React.useState({});\r\n    const [isformValid, setIsformValid] = React.useState(false);\r\n    const [otherFields, setOtherFields] = React.useState({});\r\n    const [validationtype, setValidationtype] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        const { id, value, name } = e.target;\r\n        let validity = validity;\r\n        let is;\r\n        // let { isformValid, validity, otherFields } = localState;\r\n        if (typeof e.target.getAttribute === 'function') {\r\n            let validationtype = e.target.getAttribute('type');\r\n            if (validationtype) {\r\n                const resp = miscUtils.isFieldValid(validationtype, value, validity, id);\r\n                isformValid = !resp.v;\r\n                setValidity(resp.validity);\r\n                setValidationtype(validationtype);\r\n                setIsformValid(!resp.v);\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            Object.assign(otherFields, { [id]: value });\r\n        } else {\r\n            Object.assign(otherFields, { [name]: value });\r\n        }\r\n\r\n        // localState.otherFields = otherFields;\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    // const { validity } = localState;\r\n    let { fieldLabel } = validity;\r\n    return (\r\n        <div>\r\n            <IconButton onClick={handleClick} aria-describedby={id} aria-label='Add' className='btn-edit'><AddIcon /></IconButton>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }} >\r\n                <form id='newFieldForm' autoComplete=\"off\" noValidate onSubmit={props.submitNewFieldDetails}>\r\n                    <Paper style={{ margin: '1%' }}>\r\n                        <Grid style={{ marginLeft: '25%' }} container>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    inputProps={{ maxLength: 25 }}\r\n                                    error={validity && validity.fieldLabel && validity.fieldLabel.isInvalid}\r\n                                    id='fieldLabel'\r\n                                    label='Field Label *'\r\n                                    type='aplhaNumeric*'\r\n                                    onChange={handleChange}\r\n                                    value={fieldLabel || ''}\r\n                                    autoComplete='off'\r\n                                    helperText={validity && validity.fieldLabel && validity.fieldLabel.isInvalid ? miscUtils.getErrorMessage(validity.fieldLabel.validationtype) : ''}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    inputProps={{ maxLength: 50 }}\r\n                                    id='fieldValue'\r\n                                    label='Field Value'\r\n                                    autoComplete='off'\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            style={{ marginLeft: '40%' }}\r\n                            className='white-color btn-save'\r\n                            type='submit'\r\n                            variant='contained'\r\n                            size='small'\r\n                            startIcon={<SaveIcon />}\r\n                        > Save  </Button>\r\n                    </Paper>\r\n                </form>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Paper, Grid, Button, InputLabel, Select, Checkbox, ListItemText, MenuItem, Input, TextField } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\r\nimport constants from '../../utils/constants';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport api from '../../api';\r\nimport AddDynamicField from '../common/AddDynamicField';\r\n\r\nclass FillVoyageDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDirty: false,\r\n      isTyped: false,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      voyageDetails: props && props.onRowClickedData ? { ...props.onRowClickedData } : {},\r\n      isEditPage: props && props.onRowClickedData && Object.keys(props.onRowClickedData).length ? true : false,\r\n      validity: {},\r\n      isformValid: true,\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    confAlertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: '',\r\n      buttonTitle: '',\r\n    },\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  componentWillMount() {\r\n    this.getAllClientList();\r\n    this.getAllVesselsList();\r\n    if (this.props && this.props.onRowClickedData) {\r\n      this.updateForm(this.props.onRowClickedData, true);\r\n    }\r\n  }\r\n\r\n  getAllClientList = async () => {\r\n    const res = await api.getAllClientList();\r\n    if (res.data.status) {\r\n      const clientList = res.data.clientList.sort();\r\n      this.setState({ clientList });\r\n    } else {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getAllVesselsList = async () => {\r\n    const res = await api.getAllVesselsList();\r\n    if (res.data.status) {\r\n      const vesselList = res.data.vesselList.map(m => m.vesselName + '_' + m.DWT).sort();\r\n      this.setState({ vesselList });\r\n    } else {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDateFieldChange = value => {\r\n    if (!value || value.toString() === 'Invalid Date' || value > new Date()) {\r\n      return;\r\n    }\r\n    const voyageDetails = this.state.voyageDetails;\r\n    Object.assign(voyageDetails, { cpDate: value });\r\n    this.updateForm(voyageDetails);\r\n  };\r\n\r\n  handleSuccessAlert = async e => {\r\n    e.preventDefault();\r\n    const { isDirty, voyageDetails } = this.state;\r\n    const { chartererName, vesselName, cpDate } = voyageDetails;\r\n    if (isDirty) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    let resp = await api.insertPerformanceData({ cpDate, vesselName, chartererName, isDetailsFilled: false });\r\n    resp = await api.insertVoyageData({ voyageDetails });\r\n    if (!resp.data.status) {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to add voyage details...'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isDirty: false,\r\n        isTyped: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n        voyageDetails: {},\r\n        validity: {},\r\n        isformValid: true,\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Success !!',\r\n          descrMsg: 'Added voyage details successfully..'\r\n        },\r\n      });\r\n    }\r\n    this.props.handleBlocking(false);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: true,\r\n        titleMsg: 'Add Voyage Details ?',\r\n        descrMsg: 'Do you want to submit?',\r\n        buttonTitle: 'Submit'\r\n      },\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { id, value, name } = e.target;\r\n    let { voyageDetails, isformValid, validity, isTyped } = this.state;\r\n    if (typeof e.target.getAttribute === 'function') {\r\n      let validationtype = e.target.getAttribute('type');\r\n      if (validationtype) {\r\n        const resp = miscUtils.isFieldValid(validationtype, value, validity, id);\r\n        isformValid = !resp.v;\r\n        this.setState({\r\n          validity: resp.validity,\r\n          validationtype,\r\n          isformValid: !resp.v\r\n        });\r\n      }\r\n    }\r\n    isTyped = true;\r\n    if (id) {\r\n      Object.assign(voyageDetails, { [id]: value });\r\n    } else {\r\n      Object.assign(voyageDetails, { [name]: value });\r\n    }\r\n\r\n    this.updateForm(voyageDetails, isformValid, isTyped);\r\n  };\r\n\r\n  submitNewFieldDetails = e => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    const inputs = e.target.querySelectorAll('input');\r\n    if (inputs && inputs.length) {\r\n      const { voyageDetails } = this.state;\r\n      let { otherFields } = voyageDetails;\r\n      if (!otherFields) {\r\n        otherFields = {};\r\n      }\r\n      Object.assign(otherFields, { [inputs[0].value]: inputs[1].value });\r\n      this.setState({ voyageDetails });\r\n      document.getElementById('newFieldForm').reset();\r\n      // this.displayOtherFields();\r\n    }\r\n  };\r\n\r\n  updateForm(voyageDetails, isformValid, isTyped) {\r\n    let { chartererName, vesselName, cpDate, dischargePort, loadPort, fieldVisibility } = voyageDetails;\r\n    if (!cpDate) {\r\n      cpDate = new Date();\r\n      Object.assign(voyageDetails, { cpDate });\r\n    }\r\n    if (isformValid && chartererName && vesselName && cpDate && dischargePort && loadPort && fieldVisibility && fieldVisibility.length) {\r\n      this.setState({ isDirty: true, voyageDetails, isTyped });\r\n    } else {\r\n      this.setState({ isDirty: false, voyageDetails, isTyped });\r\n    }\r\n\r\n    if (isTyped) {\r\n      this.props.handleBlocking(true);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { validity, isDirty, isformValid, confAlertDetails, voyageDetails, alertDetails, clientList, vesselList, isEditPage } = this.state;\r\n    let { chartererName, vesselName, cpDate, dischargePort, loadPort, vesselSize, cargoIntake, cargo, ownerName, shipper, pniInsurance, weatherRoutingCompany, loadPortAgent, dischargePortAgent, receiver, onHireSurveyor, offHireSurveyor, bunkerSupplier, bunkerTrader, fieldVisibility } = voyageDetails;\r\n    if (!fieldVisibility) {\r\n      fieldVisibility = [];\r\n    }\r\n    return (\r\n      <form autoComplete=\"off\" noValidate >\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <AddDynamicField submitNewFieldDetails={this.submitNewFieldDetails} />\r\n        <Paper style={{ marginTop: '2%' }}>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Charterer Name *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                disabled={isEditPage}\r\n                autoWidth\r\n                id='chartererName'\r\n                name='chartererName'\r\n                value={chartererName || ''}\r\n                onChange={this.handleChange}>\r\n                {clientList && clientList.length ? miscUtils.getOptions(clientList) : []}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Vessel Name *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                disabled={isEditPage}\r\n                autoWidth\r\n                id='vesselName'\r\n                name='vesselName'\r\n                value={vesselName || ''}\r\n                onChange={this.handleChange}>\r\n                {vesselList && vesselList.length ? miscUtils.getOptions(vesselList) : []}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  className='field-select'\r\n                  disabled={isEditPage}\r\n                  format='MM/dd/yyyy'\r\n                  margin='normal'\r\n                  id='cpDate'\r\n                  label='CP Date *'\r\n                  value={cpDate}\r\n                  onChange={this.handleDateFieldChange}\r\n                  maxDate={new Date()}\r\n                  autoOk\r\n                  variant='inline'\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.vesselSize && validity.vesselSize.isInvalid}\r\n                id='vesselSize'\r\n                label='Vessel Size'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={vesselSize || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.vesselSize && validity.vesselSize.isInvalid ? miscUtils.getErrorMessage(validity.vesselSize.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.loadPort && validity.loadPort.isInvalid}\r\n                id='loadPort'\r\n                label='Load Port *'\r\n                type='aplhaNumeric*'\r\n                onChange={this.handleChange}\r\n                value={loadPort || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.loadPort && validity.loadPort.isInvalid ? miscUtils.getErrorMessage(validity.loadPort.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.dischargePort && validity.dischargePort.isInvalid}\r\n                id='dischargePort'\r\n                label='Discharge Port *'\r\n                type='aplhaNumeric*'\r\n                onChange={this.handleChange}\r\n                value={dischargePort || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.dischargePort && validity.dischargePort.isInvalid ? miscUtils.getErrorMessage(validity.dischargePort.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.cargo && validity.cargo.isInvalid}\r\n                id='cargo'\r\n                label='Cargo'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={cargo || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.cargo && validity.cargo.isInvalid ? miscUtils.getErrorMessage(validity.cargo.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.cargoIntake && validity.cargoIntake.isInvalid}\r\n                id='cargoIntake'\r\n                label='Cargo Intake'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={cargoIntake || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.cargoIntake && validity.cargoIntake.isInvalid ? miscUtils.getErrorMessage(validity.cargoIntake.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.ownerName && validity.ownerName.isInvalid}\r\n                id='ownerName'\r\n                label='Owner Name'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={ownerName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.ownerName && validity.ownerName.isInvalid ? miscUtils.getErrorMessage(validity.ownerName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.shipper && validity.shipper.isInvalid}\r\n                id='shipper'\r\n                label='Shipper'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={shipper || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.shipper && validity.shipper.isInvalid ? miscUtils.getErrorMessage(validity.shipper.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.loadPortAgent && validity.loadPortAgent.isInvalid}\r\n                id='loadPortAgent'\r\n                label='Load Port Agent'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={loadPortAgent || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.loadPortAgent && validity.loadPortAgent.isInvalid ? miscUtils.getErrorMessage(validity.loadPortAgent.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.dischargePortAgent && validity.dischargePortAgent.isInvalid}\r\n                id='dischargePortAgent'\r\n                label='Discharge Port Agent'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={dischargePortAgent || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.dischargePortAgent && validity.dischargePortAgent.isInvalid ? miscUtils.getErrorMessage(validity.dischargePortAgent.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.receiver && validity.receiver.isInvalid}\r\n                id='receiver'\r\n                label='Receiver'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={receiver || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.receiver && validity.receiver.isInvalid ? miscUtils.getErrorMessage(validity.receiver.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.onHireSurveyor && validity.onHireSurveyor.isInvalid}\r\n                id='onHireSurveyor'\r\n                label='On Hire Surveyor'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={onHireSurveyor || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.onHireSurveyor && validity.onHireSurveyor.isInvalid ? miscUtils.getErrorMessage(validity.onHireSurveyor.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.offHireSurveyor && validity.offHireSurveyor.isInvalid}\r\n                id='offHireSurveyor'\r\n                label='Off Hire Surveyor'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={offHireSurveyor || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.offHireSurveyor && validity.offHireSurveyor.isInvalid ? miscUtils.getErrorMessage(validity.offHireSurveyor.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.bunkerSupplier && validity.bunkerSupplier.isInvalid}\r\n                id='bunkerSupplier'\r\n                label='Bunker Supplier'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={bunkerSupplier || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.bunkerSupplier && validity.bunkerSupplier.isInvalid ? miscUtils.getErrorMessage(validity.bunkerSupplier.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.bunkerTrader && validity.bunkerTrader.isInvalid}\r\n                id='bunkerTrader'\r\n                label='Bunker Trader'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={bunkerTrader || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.bunkerTrader && validity.bunkerTrader.isInvalid ? miscUtils.getErrorMessage(validity.bunkerTrader.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.pniInsurance && validity.pniInsurance.isInvalid}\r\n                id='pniInsurance'\r\n                label='PNI Insurance'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={pniInsurance || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.pniInsurance && validity.pniInsurance.isInvalid ? miscUtils.getErrorMessage(validity.pniInsurance.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.weatherRoutingCompany && validity.weatherRoutingCompany.isInvalid}\r\n                id='weatherRoutingCompany'\r\n                label='Weather Routing Co.'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={weatherRoutingCompany || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.weatherRoutingCompany && validity.weatherRoutingCompany.isInvalid ? miscUtils.getErrorMessage(validity.weatherRoutingCompany.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id=\"demo-mutiple-checkbox-label\" className='inputLabels'>Select Client Visible *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId=\"demo-mutiple-checkbox-label\"\r\n                id=\"demo-mutiple-checkbox\"\r\n                multiple\r\n                value={fieldVisibility}\r\n                name='fieldVisibility'\r\n                onChange={this.handleChange}\r\n                input={<Input id=\"select-multiple-chip\" />}\r\n                renderValue={(selected) => selected.join(', ')}>\r\n                {constants.voyageFieldList.map((name) => (\r\n                  <MenuItem key={name} value={name}>\r\n                    <Checkbox checked={fieldVisibility.indexOf(name) > -1} />\r\n                    <ListItemText primary={name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Button\r\n            className={`${(isDirty && isformValid) ? 'white-color' : 'grey-color'} btn-save`}\r\n            variant='contained'\r\n            size='large'\r\n            startIcon={<SaveIcon />}\r\n            disabled={!(isDirty && isformValid)}\r\n            onClick={this.handleSubmit}> Submit  </Button>\r\n        </Paper>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FillVoyageDetails;\r\n","import React, { Component } from 'react';\r\nimport ScrollableTabsButtonAuto from '../sub-component/ScrollableTabsButtonAuto';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport ViewVoyageDetails from './Form_ViewVoyageDetails';\r\nimport FillVoyageDetails from './Form_FillVoyageDetails';\r\n\r\nclass Voyage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n      isDirty: false,\r\n      localClickedtTab: 0,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    };\r\n\r\n    this.handleBlocking = this.handleBlocking.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n    this.handleRowClicked = this.handleRowClicked.bind(this);\r\n  }\r\n\r\n  handleIconDetail = (event, value) => {\r\n    this.setState({ onRowClickedData: {} });\r\n    if (value !== this.state.activeTabIndex) {\r\n      const { isDirty } = this.state;\r\n      if (isDirty) {\r\n        this.setState({\r\n          confAlertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Discard Changes?',\r\n            descrMsg: '  You have unsaved changes. Do you want to discard?',\r\n            buttonTitle: ' Discard'\r\n          },\r\n          localClickedtTab: value\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    this.setState({ activeTabIndex: value, localClickedtTab: value });\r\n    return true;\r\n  };\r\n\r\n  handleCancelAlert = () => {\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      localClickedtTab: this.state.activeTabIndex\r\n    })\r\n  };\r\n\r\n  handleSuccessAlert = e => {\r\n    e.preventDefault();\r\n    const { localClickedtTab, activeTabIndex, isDirty } = this.state\r\n    if (localClickedtTab !== activeTabIndex && isDirty) {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n      this.setState({ activeTabIndex: localClickedtTab });\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleBlocking = e => this.setState({ isDirty: e });\r\n  handleRowClicked = e => this.setState({ activeTabIndex: 1, localClickedtTab: 1, onRowClickedData: e });\r\n\r\n  getTabData = () => {\r\n    const tabs = {\r\n      tabsLabel: [{\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>VIEW VOYAGE DETAILS</span>\r\n      }, {\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>FILL VOYAGE DETAILS</span>\r\n      },\r\n      ],\r\n      tabPanelChild:\r\n        [{\r\n          child: <ViewVoyageDetails handleRowClicked={this.handleRowClicked} />\r\n        },\r\n        {\r\n          child: <FillVoyageDetails handleBlocking={this.handleBlocking} onRowClickedData={this.state.onRowClickedData} />\r\n        }]\r\n    }\r\n\r\n    return tabs;\r\n  }\r\n\r\n  /* tab data end */\r\n\r\n  render() {\r\n    const { confAlertDetails, alertDetails, isDirty, localClickedtTab } = this.state;\r\n    return (\r\n      <div className='my-profile'>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <ScrollableTabsButtonAuto paper={true} tabs={this.getTabData()} onChange={this.handleIconDetail} TabIndicatorProps={{ style: { background: '#e37933' } }} isDirty={isDirty} newTabVal={localClickedtTab} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Voyage);\r\n","import React, { Component } from 'react';\r\nexport default class PerformanceModule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getOriginalValue = this.getOriginalValue.bind(this);\r\n        this.getActualValue = this.getActualValue.bind(this);\r\n        this.state = {\r\n            original: 0,\r\n            actual: 0,\r\n            original$: 0,\r\n            actual$: 0\r\n        }\r\n    }\r\n\r\n    updateAndNotify() {\r\n        const { original, actual } = this.state;\r\n        const updateOriginal$ = this.commonFunction(original);\r\n        const updateActual$ = this.commonFunction(actual);\r\n        const localObj = {\r\n            original: original ? original : (this.props.voyageDays ? this.props.voyageDays.original : 0),\r\n            original$: updateOriginal$ ? updateOriginal$ : (this.props.voyageDays ? this.props.voyageDays.original$ : 0),\r\n            actual: actual ? actual : (this.props.voyageDays ? this.props.voyageDays.actual : 0),\r\n            actual$: updateActual$ ? updateActual$ : (this.props.voyageDays ? this.props.voyageDays.actual$ : 0)\r\n        }\r\n        this.setState({ ...localObj });\r\n\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        return { notifyRequired: (prevProps.tcHire !== this.props.tcHire || prevProps.addressCommission !== this.props.addressCommission) };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (snapshot.notifyRequired) {\r\n            this.updateAndNotify();\r\n        }\r\n    }\r\n\r\n    commonFunction(e) {\r\n        let { tcHire, addressCommission } = this.props\r\n        const value = parseFloat(e);\r\n        tcHire = parseFloat(tcHire);\r\n        addressCommission = parseFloat(addressCommission);\r\n        if (value >= 0 && tcHire >= 0 && addressCommission >= 0) {\r\n            const muitpleItem = tcHire * value;\r\n            return (muitpleItem - (addressCommission * (muitpleItem / 100))).toFixed(2);\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getOriginalValue(e) {\r\n        const value = e.target.value ? e.target.value : 0;\r\n        const updateOriginal$ = this.commonFunction(value);\r\n        const { actual, actual$ } = this.state;\r\n        const localObj = {\r\n            original: this.getValue(value),\r\n            original$: updateOriginal$ ? updateOriginal$ : 0,\r\n            actual,\r\n            actual$\r\n        }\r\n        this.setState({ ...localObj });\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getActualValue(e) {\r\n        const value = e.target.value ? e.target.value : 0;\r\n        const updateActual$ = this.commonFunction(value);\r\n        const { original, original$ } = this.state;\r\n        const localObj = {\r\n            original,\r\n            original$,\r\n            actual: this.getValue(value),\r\n            actual$: updateActual$\r\n        }\r\n\r\n        this.setState({ ...localObj });\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getValue(value) {\r\n        if (!value) return 0;\r\n        if (value[value.length - 1] === '.') return value;\r\n        let v = parseFloat(value);\r\n        return v ? v : 0;\r\n    }\r\n\r\n    render() {\r\n        const { actual$, original$ } = this.state;\r\n        return (\r\n            <>\r\n                <td className='table-performance-td-th'>\r\n                    <input className='table-performance-input' type='text' required={this.props.required} maxLength='10' disabled ={this.props.disabled} onChange={this.getOriginalValue} autoComplete='off' value={this.props.voyageDays ? this.props.voyageDays.original : 0} />\r\n                </td>\r\n                <td className='table-performance-td-th'>\r\n                    <input className='table-performance-input' type='text' required={this.props.required} maxLength='10' disabled ={this.props.disabled} onChange={this.getActualValue} autoComplete='off' value={this.props.voyageDays ? this.props.voyageDays.actual : 0} />\r\n                </td>\r\n                <td className='table-performance-td-th'>\r\n                    <input className='table-performance-input' type='text' disabled value={original$ ? original$ : (this.props.voyageDays ? this.props.voyageDays.original$ : 0)} />\r\n                </td>\r\n                <td className='table-performance-td-th'>\r\n                    <input className='table-performance-input' type='text' disabled value={actual$ ? actual$ : (this.props.voyageDays ? this.props.voyageDays.actual$ : 0)} />\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Paper, Grid, Button, InputLabel, Select } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport api from '../../api';\r\nimport PerformanceModule from './PerformanceModule';\r\n\r\nclass FillPerformanceDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vesselList: [],\r\n      selectedClient: '',\r\n      selectedVessel: '',\r\n      selectedCpDate: '',\r\n      allClients: [],\r\n      allVslForSelectedClient: [],\r\n      allCpDatesForSelectedClient: [],\r\n      performanceDetails: {\r\n        tcHire: 0,\r\n        addressCommission: 0,\r\n      },\r\n      isDirty: true,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      readOnly: false,\r\n      isEditPage: props && props.activeTabIndex && props.activeTabIndex === 'editPage' ? true : false,\r\n      isViewPage: props && props.activeTabIndex && props.activeTabIndex === 'viewPage' ? true : false\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n    this.handlePerformanceDetailSubmit = this.handlePerformanceDetailSubmit.bind(this);\r\n    this.tcHireChange = this.tcHireChange.bind(this);\r\n    this.addressCommissionChange = this.addressCommissionChange.bind(this);\r\n    this.onVoyageDaysChange = this.onVoyageDaysChange.bind(this);\r\n    this.onLoadPortDelayChange = this.onLoadPortDelayChange.bind(this);\r\n    this.onDischargePortDelayChange = this.onDischargePortDelayChange.bind(this);\r\n    this.onIntermediatePortDelayChange = this.onIntermediatePortDelayChange.bind(this);\r\n    this.handleIFOChange = this.handleIFOChange.bind(this);\r\n    this.handleMDOChange = this.handleMDOChange.bind(this);\r\n    this.getTotalOrg = this.getTotalOrg.bind(this);\r\n    this.getTotalAct = this.getTotalAct.bind(this);\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    confAlertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: '',\r\n      buttonTitle: '',\r\n    },\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  async componentDidMount() {\r\n    let res = {};\r\n    let { isEditPage, isViewPage, readOnly } = this.state;\r\n    if (isEditPage || isViewPage) {\r\n      res = await api.getAllVesselsPerformance({ isDetailsFilled: true });\r\n    }\r\n    else {\r\n      res = await api.getAllVesselsPerformance({ isDetailsFilled: false });\r\n    }\r\n    if (res.data.status) {\r\n      if (isEditPage) {\r\n        readOnly = false;\r\n      } else if (isViewPage) {\r\n        readOnly = true;\r\n        isEditPage = true\r\n      }\r\n\r\n      const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n      this.setState({\r\n        vesselList: res.data.vesselList,\r\n        allClients,\r\n        readOnly,\r\n        isEditPage\r\n      });\r\n    } else {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data or no voyage to fill details...'\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCpDateChange = async e => {\r\n    const { vesselList, selectedVessel, selectedClient, isEditPage } = this.state;\r\n    this.resetForm();\r\n    let vesselDetails = vesselList.find(m => m.vesselName === selectedVessel && m.cpDate === e.target.value);\r\n    const res = await api.getPortDetails({ userName: selectedClient, vesselName: selectedVessel, cpDate: e.target.value });\r\n    if (res && res.data && res.data.status) {\r\n      this.setState({\r\n        portDetails: res.data.portDetails,\r\n        vesselDetails,\r\n        selectedCpDate: e.target.value,\r\n        performanceDetails: {}\r\n      });\r\n    } else {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n    }\r\n\r\n    if (isEditPage && selectedClient && selectedVessel && e.target.value) {\r\n      this.setState({ performanceDetails: vesselDetails });\r\n    }\r\n  };\r\n\r\n  handleVesselListChange = async e => {\r\n    const { vesselList, selectedClient } = this.state;\r\n    this.resetForm();\r\n    const allCpDates = vesselList.filter(f => f.vesselName === e.target.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n    if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n      this.setState({\r\n        allCpDatesForSelectedClient: [],\r\n        selectedVessel: e.target.value,\r\n        selectedCpDate: '',\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      allCpDatesForSelectedClient: allCpDates,\r\n      selectedVessel: e.target.value,\r\n      selectedCpDate: '',\r\n      performanceDetails: {}\r\n    });\r\n  }\r\n\r\n  handleClientListChange = e => {\r\n    const { vesselList } = this.state;\r\n    this.resetForm();\r\n    const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.target.value).map(m => m.vesselName))];\r\n    if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n      this.setState({\r\n        allVslForSelectedClient: [],\r\n        selectedClient: e.target.value,\r\n        selectedVessel: '',\r\n        selectedCpDate: '',\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        allVslForSelectedClient: allVessels,\r\n        selectedClient: e.target.value,\r\n        selectedVessel: '',\r\n        selectedCpDate: '',\r\n        performanceDetails: {}\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSuccessAlert = async e => {\r\n    e.preventDefault();\r\n    const { isDirty } = this.state;\r\n    if (isDirty) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    this.handlePerformanceDetailSubmit(e);\r\n    this.props.handleBlocking(false);\r\n  }\r\n\r\n  async handlePerformanceDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { selectedClient, selectedVessel, selectedCpDate, vesselList } = this.state;\r\n    const vessel = vesselList.find(f => f.chartererName === selectedClient && f.vesselName === selectedVessel && f.cpDate === selectedCpDate)\r\n    const vId = vessel ? vessel['_id'] : '';\r\n    let data = await api.fillPerformanceDetails({ ...this.state.performanceDetails, vId });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to add performance details...'\r\n        }\r\n      });\r\n    } else {\r\n      this.resetForm();\r\n      this.setState({\r\n        selectedClient: '',\r\n        selectedVessel: '',\r\n        selectedCpDate: '',\r\n        performanceDetails: {\r\n          voyageDays: {},\r\n          loadPortDelay: {},\r\n          dischargePortDelay: {},\r\n          intermediatePortDelay: {}\r\n        },\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Success !!',\r\n          descrMsg: 'Added performance details successfully..'\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: true,\r\n        titleMsg: 'Fill Performance Details ?',\r\n        descrMsg: 'Do you want to submit?',\r\n        buttonTitle: 'Submit'\r\n      },\r\n    });\r\n  }\r\n\r\n  tcHireChange(e) {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    const { performanceDetails } = this.state;\r\n    Object.assign(performanceDetails, { tcHire: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  addressCommissionChange(e) {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    const { performanceDetails } = this.state;\r\n    Object.assign(performanceDetails, { addressCommission: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handlePerformanceDetailsChange = e => {\r\n    e.preventDefault();\r\n    let { name, value } = e.target;\r\n    const { performanceDetails } = this.state;\r\n    value = value ? value : 0;\r\n    if (name === 'remarks') {\r\n      Object.assign(performanceDetails, { [name]: value });\r\n      this.setState({ performanceDetails });\r\n      return;\r\n    }\r\n\r\n    Object.assign(performanceDetails, { [name]: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onVoyageDaysChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.voyageDays) {\r\n      performanceDetails.voyageDays = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.voyageDays, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onLoadPortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.loadPortDelay) {\r\n      performanceDetails.loadPortDelay = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.loadPortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onDischargePortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.dischargePortDelay) {\r\n      performanceDetails.dischargePortDelay = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.dischargePortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handleIFOChange(e) {\r\n    const { performanceDetails } = this.state;\r\n    let { name, value } = e.target;\r\n    value = value ? value : 0\r\n    const str = name.split('IFO');\r\n    if (str && str.length >= 2 && str[1] === 'Act') {\r\n      if (!performanceDetails.bunkerIFOAct) {\r\n        performanceDetails.bunkerIFOAct = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerIFOAct, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerIFOAct;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerIFOAct, { bunkerIFOAct$: (consumption * price).toFixed(2) });\r\n      }\r\n    } else {\r\n      if (!performanceDetails.bunkerIFOOrg) {\r\n        performanceDetails.bunkerIFOOrg = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerIFOOrg, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerIFOOrg;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerIFOOrg, { bunkerIFOOrg$: (consumption * price).toFixed(2) });\r\n      }\r\n    }\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handleMDOChange(e) {\r\n    const { performanceDetails } = this.state;\r\n    let { name, value } = e.target;\r\n    value = value ? value : 0\r\n    const str = name.split('MDO');\r\n    if (str && str.length >= 2 && str[1] === 'Act') {\r\n      if (!performanceDetails.bunkerMDOAct) {\r\n        performanceDetails.bunkerMDOAct = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerMDOAct, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerMDOAct;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerMDOAct, { bunkerMDOAct$: (consumption * price).toFixed(2) });\r\n      }\r\n    } else {\r\n      if (!performanceDetails.bunkerMDOOrg) {\r\n        performanceDetails.bunkerMDOOrg = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerMDOOrg, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerMDOOrg;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerMDOOrg, { bunkerMDOOrg$: (consumption * price).toFixed(2) });\r\n      }\r\n    }\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg)).toFixed(2);\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct)).toFixed(2);\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onIntermediatePortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.intermediatePortDelay) {\r\n      performanceDetails.intermediatePortDelay = {};\r\n    }\r\n    Object.assign(performanceDetails.intermediatePortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  getTotalOrg(performanceDetails) {\r\n    const { isViewPage } = this.state;\r\n    const { voyageDays, intermediatePortDelay, dischargePortDelay, loadPortDelay, bunkerIFOOrg, bunkerMDOOrg } = performanceDetails;\r\n    let total = 0;\r\n    const keys = Object.keys(performanceDetails).filter(m => m.substr(m.length - 4) === 'Org$');\r\n    if (keys && keys.length) {\r\n      keys.forEach(e => {\r\n        if (parseFloat(performanceDetails[e])) {\r\n          total += parseFloat(performanceDetails[e]);\r\n        }\r\n      });\r\n    }\r\n    if (voyageDays) {\r\n      total += parseFloat(voyageDays.original$);\r\n    }\r\n    if (intermediatePortDelay) {\r\n      total += parseFloat(intermediatePortDelay.original$);\r\n    }\r\n    if (dischargePortDelay) {\r\n      total += parseFloat(dischargePortDelay.original$);\r\n    }\r\n    if (loadPortDelay) {\r\n      total += parseFloat(loadPortDelay.original$);\r\n    }\r\n    if (bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$) {\r\n      total += parseFloat(bunkerIFOOrg.bunkerIFOOrg$);\r\n    }\r\n    if (bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$) {\r\n      total += parseFloat(bunkerMDOOrg.bunkerMDOOrg$);\r\n    }\r\n    if (!isViewPage) {\r\n      this.props.handleBlocking(true);\r\n    }\r\n    return parseFloat(total).toFixed(2);\r\n  }\r\n\r\n  getTotalAct(performanceDetails) {\r\n    const { voyageDays, intermediatePortDelay, dischargePortDelay, loadPortDelay, bunkerIFOAct, bunkerMDOAct } = performanceDetails;\r\n    let total = 0;\r\n    const keys = Object.keys(performanceDetails).filter(m => m.substr(m.length - 4) === 'Act$');\r\n    if (keys && keys.length) {\r\n      keys.forEach(e => {\r\n        if (parseFloat(performanceDetails[e]) >= 0) {\r\n          total += parseFloat(performanceDetails[e]);\r\n        }\r\n      });\r\n    }\r\n    if (voyageDays) {\r\n      total += parseFloat(voyageDays.actual$);\r\n    }\r\n    if (intermediatePortDelay) {\r\n      total += parseFloat(intermediatePortDelay.actual$);\r\n    }\r\n    if (dischargePortDelay) {\r\n      total += parseFloat(dischargePortDelay.actual$);\r\n    }\r\n    if (loadPortDelay) {\r\n      total += parseFloat(loadPortDelay.actual$);\r\n    }\r\n    if (bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$) {\r\n      total += parseFloat(bunkerIFOAct.bunkerIFOAct$);\r\n    }\r\n    if (bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$) {\r\n      total += parseFloat(bunkerMDOAct.bunkerMDOAct$);\r\n    }\r\n    return parseFloat(total).toFixed(2);\r\n  }\r\n\r\n  getValue(value) {\r\n    if (!value) return 0;\r\n    if (value[value.length - 1] === '.') return value;\r\n    let v = parseFloat(value);\r\n    return v ? v : 0;\r\n  }\r\n\r\n  resetForm() {\r\n    if (!document.getElementById('performanceDetailsForm')) {\r\n      return;\r\n    }\r\n    document.getElementById('performanceDetailsForm').reset();\r\n    document.getElementById('portDetailsForm').reset();\r\n  }\r\n\r\n  render() {\r\n    const { isDirty, readOnly, isViewPage, confAlertDetails, alertDetails, selectedClient, selectedVessel, selectedCpDate, allClients, allVslForSelectedClient, allCpDatesForSelectedClient, portDetails, performanceDetails } = this.state;\r\n    const { tcHire, addressCommission, bunkerMDOAct, bunkerIFOOrg, bunkerIFOAct, bunkerMDOOrg, totalAct, totalOrg, freightOrg, freightAct, voyageDays, loadPortDelay,\r\n      dischargePortDelay, intermediatePortDelay, loadPortDAAct$, loadPortDAOrg$, dischargePortDAOrg$, dischargePortDAAct$, bunkerSurveyCostBendsOrg$, bunkerSurveyCostBendsAct$, ILOHCandCVEAct$,\r\n      ILOHCandCVEOrg$, wXRoutingExpenseOrg$, wXRoutingExpenseAct$, despatchPaidAct$, despatchPaidOrg$, PNIInsuranceAct$, PNIInsuranceOrg$, demmurrageReceivedAct$, demmurrageReceivedOrg$,\r\n      otherExpenseAct$, otherExpenseOrg$, HraWarRiskAct$, HraWarRiskOrg$, remarks, CargoQuantityAct, CargoQuantityOrg } = performanceDetails;\r\n    return (\r\n      <>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <Paper style={{ marginTop: '2%' }}>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Select Client *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                autoWidth\r\n                disabled={!allClients || !allClients.length}\r\n                id='selectedClient'\r\n                name='selectedClient'\r\n                value={selectedClient || ''}\r\n                onChange={this.handleClientListChange}>\r\n                {allClients && allClients.length ? miscUtils.getOptions(allClients) : []}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Select Vessel *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                autoWidth\r\n                disabled={!selectedClient}\r\n                id='selectedVessel'\r\n                name='selectedVessel'\r\n                value={selectedVessel || ''}\r\n                onChange={this.handleVesselListChange}>\r\n                {allVslForSelectedClient && allVslForSelectedClient.length ? miscUtils.getOptions(allVslForSelectedClient) : []}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Select CP Date *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                autoWidth\r\n                disabled={!selectedVessel}\r\n                id='selectedCpDate'\r\n                name='selectedCpDate'\r\n                value={selectedCpDate || ''}\r\n                onChange={this.handleCpDateChange}>\r\n                {allCpDatesForSelectedClient && allCpDatesForSelectedClient.length ? miscUtils.getOptions(allCpDatesForSelectedClient) : []}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          {selectedCpDate ?\r\n            <>\r\n              <form id='portDetailsForm' onSubmit={this.handlePerformanceDetailSubmit}>\r\n                <table className='table-performance'>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Load Port</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled name='loadPort' value={portDetails.loadPort || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Discharge Port</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled name='dischargePort' value={portDetails.dischargePort || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>TC Hire (Per day) *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} className='table-performance-input' maxLength='10' type='text' name='tcHire' required onChange={this.tcHireChange} autoComplete='off' value={tcHire || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Address Commission *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} className='table-performance-input' maxLength='10' type='text' name='addressCommission' required onChange={this.addressCommissionChange} autoComplete='off' value={addressCommission || 0} />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n              <br />\r\n              <form id='performanceDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: '1%' }}>\r\n                <table className='table-performance'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className='table-performance-td-th'>Field</th>\r\n                      <th className='table-performance-td-th'>Original</th>\r\n                      <th className='table-performance-td-th'>Actual</th>\r\n                      <th className='table-performance-td-th'>Original ($)</th>\r\n                      <th className='table-performance-td-th'>Actual ($)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Voyage Days*</label>\r\n                      </td>\r\n                      <PerformanceModule voyageDays={voyageDays} required={true} tcHire={tcHire} disabled={readOnly} addressCommission={addressCommission} onOriginalActualChange={this.onVoyageDaysChange} />\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Delays at Port</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Load Port Delay</label>\r\n                      </td>\r\n                      <PerformanceModule voyageDays={loadPortDelay} required={false} tcHire={tcHire} disabled={readOnly} addressCommission={addressCommission} onOriginalActualChange={this.onLoadPortDelayChange} />\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Discharge Port Delay</label>\r\n                      </td>\r\n                      <PerformanceModule voyageDays={dischargePortDelay} required={false} tcHire={tcHire} disabled={readOnly} addressCommission={addressCommission} onOriginalActualChange={this.onDischargePortDelayChange} />\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Intermediate Port Delays</label>\r\n                      </td>\r\n                      <PerformanceModule voyageDays={intermediatePortDelay} required={false} tcHire={tcHire} disabled={readOnly} addressCommission={addressCommission} onOriginalActualChange={this.onIntermediatePortDelayChange} />\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Bunker Consumption (MT) *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'></td>\r\n                      <td className='table-performance-td-th'></td>\r\n                      <td className='table-performance-td-th'></td>\r\n                      <td className='table-performance-td-th'></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>IFO</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='consumptionIFOOrg' required onChange={this.handleIFOChange} autoComplete='off' value={bunkerIFOOrg && bunkerIFOOrg.consumption ? bunkerIFOOrg.consumption : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='consumptionIFOAct' required onChange={this.handleIFOChange} autoComplete='off' value={bunkerIFOAct && bunkerIFOAct.consumption ? bunkerIFOAct.consumption : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>MDO</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='consumptionMDOOrg' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOOrg ? bunkerMDOOrg.consumption : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='consumptionMDOAct' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOAct ? bunkerMDOAct.consumption : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Bunker Price (USD) *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'></td>\r\n                      <td className='table-performance-td-th'></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>IFO</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='priceIFOOrg' required onChange={this.handleIFOChange} autoComplete='off' value={bunkerIFOOrg && bunkerIFOOrg.price ? bunkerIFOOrg.price : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='priceIFOAct' required onChange={this.handleIFOChange} autoComplete='off' value={bunkerIFOAct && bunkerIFOAct.price ? bunkerIFOAct.price : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$ ? bunkerIFOOrg.bunkerIFOOrg$ : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled value={bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$ ? bunkerIFOAct.bunkerIFOAct$ : 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>MDO</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='priceMDOOrg' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOOrg ? bunkerMDOOrg.price : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='priceMDOAct' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOAct ? bunkerMDOAct.price : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$ ? bunkerMDOOrg.bunkerMDOOrg$ : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled value={bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$ ? bunkerMDOAct.bunkerMDOAct$ : 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Load Port DA *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='loadPortDAOrg$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={loadPortDAOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='loadPortDAAct$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={loadPortDAAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Discharge Port DA *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='dischargePortDAOrg$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={dischargePortDAOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='dischargePortDAAct$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={dischargePortDAAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>ILOHC and CVE</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='ILOHCandCVEOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={ILOHCandCVEOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='ILOHCandCVEAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={ILOHCandCVEAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Bunker Survey Cost Bends</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='bunkerSurveyCostBendsOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={bunkerSurveyCostBendsOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='bunkerSurveyCostBendsAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={bunkerSurveyCostBendsAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>WX Routing Expense</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='wXRoutingExpenseOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={wXRoutingExpenseOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='wXRoutingExpenseAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={wXRoutingExpenseAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>PNI Insurance</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='PNIInsuranceOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={PNIInsuranceOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='PNIInsuranceAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={PNIInsuranceAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Despatch Paid</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='despatchPaidOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={despatchPaidOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='despatchPaidAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={despatchPaidAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Other Expense</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='otherExpenseOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={otherExpenseOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='otherExpenseAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={otherExpenseAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>HRA/WAR Risk</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='HraWarRiskOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={HraWarRiskOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='HraWarRiskAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={HraWarRiskAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Demmurrage Received</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='demmurrageReceivedOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={demmurrageReceivedOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='demmurrageReceivedAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={demmurrageReceivedAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Cargo Quantity (MT)</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='CargoQuantityOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={CargoQuantityOrg || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='CargoQuantityAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={CargoQuantityAct || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Total</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' name='totalOrg' disabled value={totalOrg || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' name='totalAct' disabled value={totalAct || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Freight (USD/MT)</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' name='freightOrg' disabled value={freightOrg || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' name='freightAct' disabled value={freightAct || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Remarks</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='25' className='table-performance-input' type='text' name='remarks' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={remarks || ''} />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                {isViewPage ? <></> : <Button\r\n                  className={`${(isDirty) ? 'white-color' : 'grey-color'} btn-save`}\r\n                  variant='contained'\r\n                  size='large'\r\n                  startIcon={<SaveIcon />}\r\n                  disabled={!(isDirty)}\r\n                  onClick={this.handleSubmit}> Submit  </Button>}\r\n              </form>\r\n            </> : <></>}\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FillPerformanceDetails;\r\n","import React, { Component } from 'react';\r\nimport ScrollableTabsButtonAuto from '../sub-component/ScrollableTabsButtonAuto';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport FillPerformanceDetails from './Form_FillPerformanceDetails';\r\n\r\nclass Performance extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n      isDirty: false,\r\n      localClickedtTab: 0,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    };\r\n\r\n    this.handleBlocking = this.handleBlocking.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  handleIconDetail = (event, value) => {\r\n    if (value !== this.state.activeTabIndex) {\r\n      const { isDirty } = this.state;\r\n      if (isDirty) {\r\n        this.setState({\r\n          confAlertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Discard Changes?',\r\n            descrMsg: '  You have unsaved changes. Do you want to discard?',\r\n            buttonTitle: ' Discard'\r\n          },\r\n          localClickedtTab: value\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    this.setState({ activeTabIndex: value, localClickedtTab: value });\r\n    return true;\r\n  };\r\n\r\n  handleCancelAlert = () => {\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      localClickedtTab: this.state.activeTabIndex\r\n    })\r\n  };\r\n\r\n  handleSuccessAlert = e => {\r\n    e.preventDefault();\r\n    const { localClickedtTab, activeTabIndex, isDirty } = this.state\r\n    if (localClickedtTab !== activeTabIndex && isDirty) {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n      this.setState({ activeTabIndex: localClickedtTab });\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleBlocking = e => this.setState({ isDirty: e });\r\n\r\n  getTabData = () => {\r\n    const tabs = {\r\n      tabsLabel: [{\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>VIEW PERFORMANCE DETAILS</span>\r\n      }, {\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>FILL PERFORMANCE DETAILS</span>\r\n      }, {\r\n        icon: <AccountCircleIcon className='labelColor' />,\r\n        label: <span className='labelColor'>EDIT PERFORMANCE DETAILS</span>\r\n      },\r\n      ],\r\n      tabPanelChild:\r\n        [{\r\n          child: <FillPerformanceDetails handleBlocking={this.handleBlocking} activeTabIndex='viewPage'/>\r\n        }, {\r\n          child: <FillPerformanceDetails handleBlocking={this.handleBlocking} />\r\n        }, {\r\n          child: <FillPerformanceDetails handleBlocking={this.handleBlocking} activeTabIndex='editPage'/>\r\n        }]\r\n    }\r\n\r\n    return tabs;\r\n  }\r\n\r\n  /* tab data end */\r\n\r\n  render() {\r\n    const { confAlertDetails, alertDetails, isDirty, localClickedtTab } = this.state;\r\n    return (\r\n      <div className='my-profile'>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <ScrollableTabsButtonAuto paper={true} tabs={this.getTabData()} onChange={this.handleIconDetail} TabIndicatorProps={{ style: { background: '#e37933' } }} isDirty={isDirty} newTabVal={localClickedtTab} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Performance);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Callback from '../../Callback';\r\nimport Login from '../login';\r\nimport NavBar from '../navBar';\r\nimport LeftMenu from '../sub-component/left-menu';\r\nimport actionTypes from './../../store/actions/constants';\r\nimport Users from '../user';\r\nimport { connect } from 'react-redux';\r\nimport './../../style/reset.css';\r\nimport './../../style/common.scss';\r\nimport './App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Grid} from '@material-ui/core';\r\nimport vessel from '../vessel';\r\nimport voyage from '../voyage';\r\nimport performance from '../performance';\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.isholidayAvailable = false;\r\n    this.state = {\r\n      loggedIn: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { loggedIn, detail } = this.props;\r\n    loggedIn = true; // remove\r\n    // const {detail} = this.props // remove\r\n    const { ui } = this.props;\r\n    const { activeOverlay } = ui;\r\n    return (\r\n      <div className={`main ${activeOverlay ? 'active-overlay' : ''}`}>\r\n        {loggedIn ? <Grid container direction='row' className='main-container'>\r\n          {/* 'left left-section' */}\r\n          <Grid item md={3} lg={3} className='left left-section'>\r\n            <LeftMenu />\r\n          </Grid>\r\n          <Grid item xs={12} md={9} lg={9}>\r\n            <section className='right right-section'>\r\n                <NavBar history={this.props.history}/>\r\n                <div className='right-container'>\r\n                  <section className='component-wrapper'>\r\n                      <Switch>\r\n                          <Route exact path='/' component={Users}/>\r\n                          <Route exact path='/callback' component={Callback}/>\r\n                          <Route exact path='/user' component={Users}/>\r\n                           <Route exact path='/vessel' component={vessel}/>\r\n                           <Route exact path='/voyage' component={voyage}/>\r\n                           <Route exact path='/performance' component={performance}/>\r\n                      </Switch>\r\n                  </section>\r\n                </div>\r\n            </section>\r\n          </Grid>\r\n        </Grid>\r\n        :\r\n        <Route exact path='/' component={Login}/>\r\n        }\r\n    </div>\r\n  );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { detail, loggedIn, ui } = state;\r\n  return {\r\n      detail,\r\n      loggedIn,\r\n      ui\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      setHolidays : (data) => {dispatch({type: actionTypes.SET_HOLIDAYS, data})}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import actionTypes from './actions/constants'\r\n\r\nexport const exampleInitialState = {\r\n  detail: {\r\n    userId: '',\r\n    role: '',\r\n    schoolId:0,\r\n    teacherId:0,\r\n    parentId:0\r\n  },\r\n  loggedIn: null,\r\n  ui: {\r\n    menuItem: [],\r\n    userDetails: {},\r\n    activeTab: '',\r\n    activeOverlay: '',\r\n    holidays: {\r\n      public: [],\r\n      local: []\r\n    }\r\n  }\r\n}\r\n\r\n/* function reducer (state = exampleInitialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_ASYNC:\r\n        let loggedIn = false;\r\n        const newStateObj = {...state};\r\n        let uiObj = {...newStateObj.ui};\r\n        let userId = '';\r\n        if(action.data) {\r\n          const { data } = action;\r\n          loggedIn = action.data === 'signout' ? null : true;\r\n          uiObj.menuItem = data.menuItems;\r\n          userId = data.userId;\r\n        }\r\n        newStateObj.ui = {...uiObj};\r\n        return {\r\n          ...state,\r\n          ...{ userId, loggedIn, ...uiObj }\r\n        };\r\n    case actionTypes.USERDETAIL_ASYNC:\r\n        const uiObjTemp = state.ui;\r\n        if(action.data) {\r\n          uiObjTemp.userDetails = action.data;\r\n        }\r\n        return {\r\n          ...state,\r\n          ...uiObjTemp\r\n        };\r\n    default:\r\n      return {...state};\r\n  }\r\n} */\r\n\r\nfunction reducer (state = exampleInitialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_ASYNC:\r\n        let loggedIn = false;\r\n        const uiObj = Object.assign({}, state.ui);\r\n        uiObj.menuItem = action.data.menuItem;\r\n        let detailObj = {\r\n          userId: action.data.userId || '',\r\n          role: action.data.role || '',\r\n          studentId: action.data.studentId || 0,\r\n          schoolId: action.data.schoolId || 0,\r\n          teacherId: action.data.teacherId || 0,\r\n          parentId: action.data.parentId || 0,\r\n          schoolDetails :action.data.schoolDetails || {}\r\n        };\r\n        if(action.data) {\r\n          loggedIn = action.data === 'signout' ? null : true;\r\n        }\r\n        return Object.assign({}, state, {\r\n          detail: {...detailObj},\r\n          loggedIn,\r\n          ui:uiObj\r\n        });\r\n    case actionTypes.USERDETAIL_ASYNC:\r\n        const uiObjTemp = Object.assign({}, state.ui);\r\n        if(action.data) {\r\n          uiObjTemp.userDetails = action.data;\r\n        }\r\n        return Object.assign({}, state, {\r\n          ui: uiObjTemp\r\n        });\r\n    case actionTypes.SET_ACTIVE_TAB:\r\n      const uiObjTemp2 = Object.assign({}, state.ui);\r\n      if(action.data) {\r\n        uiObjTemp2.activeTab = action.data;\r\n      }\r\n      return Object.assign({}, state, {\r\n        ui: uiObjTemp2\r\n      });\r\n    case actionTypes.SET_HOLIDAYS:\r\n        const uiObjTemp3 = Object.assign({}, state.ui);\r\n        if(action.data) {\r\n          uiObjTemp3.holidays.public = action.data;\r\n        }\r\n        return Object.assign({}, state, {\r\n          ui: uiObjTemp3\r\n        });\r\n    case actionTypes.SET_OVERLAY: \r\n        const uiObjTemp4 = Object.assign({}, state.ui);\r\n        uiObjTemp4.activeOverlay = action.data;\r\n        return Object.assign({}, state, {\r\n          ui: uiObjTemp4\r\n        }); \r\n    default:\r\n      return {...state};\r\n  }\r\n}\r\n\r\nexport default reducer;","\r\nimport { all,put,takeLatest } from 'redux-saga/effects'\r\nimport es6promise from 'es6-promise'\r\nimport api from './../api';\r\n// import 'isomorphic-unfetch'\r\n\r\nimport actionTypes from './actions/constants';\r\nimport {setLoginDetails, setUserDetails } from './actions'\r\n\r\nes6promise.polyfill()\r\n\r\nfunction *login ({data}) {\r\n  try {\r\n    const resp = yield api.loginUser(data);\r\n    if(resp) {\r\n      const data = {};\r\n      if(resp && resp.data && resp.data && resp.data.status === 'success') {\r\n        const { userId, menuItems, schoolId, role } = resp.data;\r\n        const schoolDetails = resp.data.schoolDetails;\r\n        data.userId = userId;\r\n        data.schoolId = schoolId;\r\n        data.role = role;\r\n        data.schoolDetails = schoolDetails\r\n        data.menuItem = menuItems;\r\n        if(resp.data.studentId) {\r\n          data.studentId = resp.data.studentId;\r\n        }\r\n        if(resp.data.teacherId) {\r\n          data.teacherId = resp.data.teacherId;\r\n        }\r\n        if(resp.data.parentId) {\r\n          data.parentId = resp.data.parentId;\r\n        }\r\n        yield put(setLoginDetails(data));\r\n      }else {\r\n        // console.log('error login');\r\n        yield put(setLoginDetails(''));\r\n        // throw error\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log('api error login');\r\n    yield put(setLoginDetails(''));\r\n    // throw error\r\n  }\r\n}\r\n\r\n\r\nfunction *userDetails (configObj) {\r\n  try {\r\n    const resp = yield api.userDetail(configObj);\r\n    if(resp) {\r\n      const data = {};\r\n      data.marks = resp.data.marks || [];\r\n      data.attendance = resp.data.attendance || [];\r\n      yield put(setUserDetails(data));\r\n    }\r\n  }catch(e){\r\n    console.log('saga error occured');\r\n    yield put(setUserDetails({}));\r\n  }\r\n}\r\n\r\nfunction * rootSaga () {\r\n  yield all([\r\n    takeLatest(actionTypes.LOGIN, login),\r\n    // takeLatest(actionTypes.USERDETAIL, userDetails),\r\n  ])\r\n}\r\n\r\nexport default rootSaga","import { applyMiddleware, createStore } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootReducer, { exampleInitialState } from './reducer'\r\nimport rootSaga from './saga'\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension')\r\n    return composeWithDevTools(applyMiddleware(...middleware))\r\n  }\r\n  return applyMiddleware(...middleware)\r\n}\r\n\r\nfunction configureStore (initialState = exampleInitialState) {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    bindMiddleware([sagaMiddleware])\r\n  )\r\n\r\n  store.sagaTask = sagaMiddleware.run(rootSaga)\r\n\r\n  return store\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore  from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}