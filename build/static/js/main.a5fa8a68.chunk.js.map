{"version":3,"sources":["assets/images/dummy.webp","Auth.js","Callback.js","store/actions/constants.js","components/login/index.js","store/actions/index.js","components/sub-component/overlay/index.js","utils/miscUtils.js","components/navBar/index.js","components/sub-component/left-menu/constants.js","components/sub-component/left-menu/index.js","components/sub-component/ScrollableTabsButtonAuto/index.js","utils/constants.js","utils/confirmationAlert.js","utils/alert.js","api/index.js","components/user/Form_AddNewUser.js","components/user/userTable.js","components/user/Form_ViewAllUsers.js","components/user/index.js","components/vessel/Form_AddNewVessel.js","components/vessel/userTable.js","components/vessel/Form_ViewAllVessels.js","components/vessel/index.js","components/voyage/userTable.js","components/voyage/Form_ViewVoyageDetails.js","components/common/AddDynamicField.js","components/voyage/Form_FillVoyageDetails.js","components/voyage/index.js","components/performance/PerformanceModule.js","components/performance/Form_FillPerformanceDetails.js","components/performance/index.js","components/client/userTable.js","components/client/PieCharts.js","components/client/index.js","components/app/App.js","serviceWorker.js","store/reducer.js","store/saga.js","store/index.js","index.js"],"names":["module","exports","auth0Client","this","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","getProfile","bind","handleAuthentication","isAuthenticated","signIn","signOut","profile","idToken","authorize","console","log","Promise","resolve","reject","parseHash","err","authResult","idTokenPayload","expiresAt","exp","Callback","props","history","replace","Component","withRouter","actionTypes","LOGIN","LOGIN_ASYNC","FAILURE","USERDETAIL","USERDETAIL_ASYNC","SET_ACTIVE_TAB","SET_OVERLAY","Login","forgotPasswordHandler","setState","forgotPassword","onInputHandler","e","value","target","validEmail","test","state","formData","error","name","email","emailError","defaultError","pattern","password","passwordError","rememberMeChecked","checkValidityLoginForm","required","valid","checkValidityforgotPasswordForm","onSubmitHandler","preventDefault","formDataToBeSend","FormData","append","saveUsername","callInitials","loggedIn","wrongCredentials","formError","className","src","dummy","alt","role","onSubmit","method","encType","htmlFor","type","tabIndex","onChange","checked","onClick","React","connect","ownProps","dispatch","data","setLoginDetails","Overlay","closeOverlay","stopPropagation","classList","contains","setOverlay","callback","extraClass","closeBtn","ui","setActiveTab","miscUtils","schoolDetails","studentList","schoolId","options","Array","isArray","j","length","push","MenuItem","studentName","key","studentId","data-id","validationtype","validity","id","endsWith","slice","vld","getFormValidity","isValid","Object","assign","isInvalid","keys","v","i","p","all","map","catch","NavBar","toggleDropdown","window","event","dropdownActive","location","href","detail","displayName","activeOverlay","showOverlay","IconButton","aria-label","capitalize","s","charAt","toUpperCase","userId","leftMenuMapping","user","link","title","icon","vessel","voyage","performance","LeftMenu","clickHandler","toggleMenu","activeMenu","isMenuActive","menuItem","mr","managerRoles","some","indexOf","item","index","isActive","data-link","to","TabPanel","children","other","hidden","aria-labelledby","Box","a11yProps","useStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","getTabs","tabsLabel","Tab","label","ScrollableTabsButtonAuto","classes","useState","setValue","handleChange","newValue","tabs","tabPanelChild","TabIndicatorProps","isDirty","newTabVal","undefined","Paper","square","Tabs","indicatorColor","textColor","variant","scrollButtons","AppBar","position","color","child","getTabPanels","constants","roles","clientType","clientDisplayList","managerRolesList","voyageFieldList","ConfirmationAlert","Dialog","open","confAlertDetails","openAlert","onClose","handleCancelAlert","aria-describedby","DialogTitle","titleMsg","DialogContent","DialogContentText","descrMsg","DialogActions","Button","handleSuccessAlert","autoFocus","buttonTitle","Alert","alertDetails","api","checkUsername","axios","post","apiUrl","headers","updatePassword","login","insertUserDetails","insertVesselDetails","insertPerformanceData","insertVoyageData","getAllVesselsPerformance","get","isDetailsFilled","getAllVoyage","companyName","getAllUserDetails","getAllClientList","getAllVesselsList","getAllVesselsDetails","getAllVoyageDetails","fillPerformanceDetails","deleteVesselDetails","delete","updateVesselDetails","deleteVoyageDetails","deleteUserDetails","updateUserDetails","updateVoyageDetails","getPortDetails","userName","vesselName","cpDate","getPerformanceDetails","chartererName","getCompletePerformanceDetailsForView","AddNewUser","a","userDetails","isEditPage","resp","status","handleBlocking","isTyped","isformValid","errors","errorMsg","errmsg","handleSubmit","getAttribute","isFieldValid","updateForm","onRowClickedData","clientDisplay","showRoledata","getManagerRoleData","getClientRoleData","autoComplete","noValidate","style","marginTop","Grid","container","xs","md","lg","TextField","inputProps","maxLength","disabled","helperText","getErrorMessage","InputLabel","Select","labelId","autoWidth","getOptions","size","startIcon","names","multiple","input","Input","renderValue","selected","join","Checkbox","ListItemText","primary","sort","propsInside","tableIcons","Add","forwardRef","ref","Check","Clear","singleClientId","Delete","DetailPanel","Edit","originalArray","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","columns","setColumns","setData","icons","editable","showDelete","onRowUpdate","newData","oldData","onRowClick","onRowDelete","setTimeout","prevState","reload","ViewAllUsers","componentDidMount","res","onceArray","from","clientList","originalObjectArray","JSON","parse","stringify","originalColumns","rowData","handleRowClicked","field","Users","handleIconDetail","localValue","m","activeTabIndex","localClickedtTab","isPresent","getTabData","assignedRoles","filter","reverse","AddNewVessel","vesselDetails","IMO","DWT","flag","vesselType","built","draft","LOA","beam","GRT","NRT","TPC","holdsHatches","grainCapacity","baleCapacity","cranes","grabs","ViewAllVessels","vesselList","Vessel","ViewVoyageDetails","clientData","arrayItem","updatedResult","checkandRemoveObject","voyageList","udpatedItem","otherFields","forEach","trim","substring","localColumns","fieldVisibility","find","f","typography","padding","spacing","SimplePopover","anchorEl","setAnchorEl","setValidity","setIsformValid","setValidationtype","Boolean","fieldLabel","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","submitNewFieldDetails","margin","marginLeft","FillVoyageDetails","handleDateFieldChange","toString","Date","voyageDetails","inputs","querySelectorAll","document","getElementById","reset","dischargePort","loadPort","vesselSize","cargoIntake","cargo","ownerName","shipper","pniInsurance","weatherRoutingCompany","loadPortAgent","dischargePortAgent","receiver","onHireSurveyor","offHireSurveyor","bunkerSupplier","bunkerTrader","utils","DateFnsUtils","format","maxDate","autoOk","KeyboardButtonProps","Voyage","PerformanceModule","getOriginalValue","getActualValue","original","actual","original$","actual$","voyageDays","updateOriginal$","commonFunction","updateActual$","localObj","onOriginalActualChange","prevProps","notifyRequired","tcHire","addressCommission","snapshot","updateAndNotify","parseFloat","muitpleItem","toFixed","getValue","FillPerformanceDetails","handleCpDateChange","selectedVessel","selectedClient","resetForm","portDetails","selectedCpDate","performanceDetails","handleVesselListChange","allCpDates","allCpDatesForSelectedClient","handleClientListChange","allVessels","Set","allVslForSelectedClient","handlePerformanceDetailSubmit","handlePerformanceDetailsChange","totalOrg","getTotalOrg","totalAct","getTotalAct","CargoQuantityOrg","freightOrg","CargoQuantityAct","freightAct","clientPerformance","allClients","readOnly","isViewPage","isClientPage","tcHireChange","addressCommissionChange","onVoyageDaysChange","onLoadPortDelayChange","onDischargePortDelayChange","onIntermediatePortDelayChange","handleIFOChange","handleMDOChange","vId","loadPortDelay","dischargePortDelay","intermediatePortDelay","obj","str","split","bunkerIFOAct","consumption","price","bunkerIFOAct$","bunkerIFOOrg","bunkerIFOOrg$","bunkerMDOAct","bunkerMDOAct$","bunkerMDOOrg","bunkerMDOOrg$","total","substr","loadPortDAAct$","loadPortDAOrg$","dischargePortDAOrg$","dischargePortDAAct$","bunkerSurveyCostBendsOrg$","bunkerSurveyCostBendsAct$","ILOHCandCVEAct$","ILOHCandCVEOrg$","wXRoutingExpenseOrg$","wXRoutingExpenseAct$","despatchPaidAct$","despatchPaidOrg$","PNIInsuranceAct$","PNIInsuranceOrg$","demmurrageReceivedAct$","demmurrageReceivedOrg$","otherExpenseAct$","otherExpenseOrg$","HraWarRiskAct$","HraWarRiskOrg$","remarks","Performance","PieCharts","chart","labels","responsive","breakpoint","legend","series","values","Client","documents","then","toSendVesselList","viewDocuments","textAlign","_id","handleViewDocuments","vesselPerformance","handleVesselPerformance","handleVoyageDetails","handlePerformanceClick","c","pathname","Shipper","onwerName","tableData","check","includes","splice","ourCount","previousYearDate","pastYear","getFullYear","setFullYear","getTime","parseInt","App","initialComponent","isFound","direction","exact","path","component","hostname","match","exampleInitialState","activeTab","reducer","action","detailObj","uiObjTemp","uiObjTemp2","uiObjTemp4","rootSaga","loginUser","put","takeLatest","es6promise","polyfill","bindMiddleware","middleware","applyMiddleware","configureStore","initialState","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","sagaTask","run","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5fa8a68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dummy.ef8ef2c1.webp\";","import auth0 from 'auth0-js';\r\nclass Auth {\r\n    constructor() {\r\n        this.auth0 = new auth0.WebAuth({\r\n            // the following three lines MUST be updated\r\n            domain: 'https://dev-f01szrz0.auth0.com',\r\n            audience: 'https://dev-f01szrz0.auth0.com/userinfo',\r\n            clientID: 'CiI1qd4zu0Hn3ZQGJNtAFglzmYeRaGeO',\r\n            redirectUri: 'http://localhost:3000/home',\r\n            responseType: 'id_token',\r\n            scope: 'openid profile'\r\n          });\r\n          this.getProfile = this.getProfile.bind(this);\r\n        this.handleAuthentication = this.handleAuthentication.bind(this);\r\n        this.isAuthenticated = this.isAuthenticated.bind(this);\r\n        this.signIn = this.signIn.bind(this);\r\n        this.signOut = this.signOut.bind(this);\r\n    }\r\n    getProfile() {\r\n        return this.profile;\r\n      }\r\n    \r\n      getIdToken() {\r\n        return this.idToken;\r\n      }\r\n    \r\n      isAuthenticated() {\r\n        // return new Date().getTime() < this.expiresAt;\r\n        return true;\r\n      }\r\n      signIn() {\r\n        this.auth0.authorize();\r\n        console.log('show login page without authorizing');\r\n      }\r\n      handleAuthentication() {\r\n        return new Promise((resolve, reject) => {\r\n          this.auth0.parseHash((err, authResult) => {\r\n            if (err) return reject(err);\r\n            if (!authResult || !authResult.idToken) {\r\n              return reject(err);\r\n            }\r\n            this.idToken = authResult.idToken;\r\n            this.profile = authResult.idTokenPayload;\r\n            // set the time that the id token will expire at\r\n            this.expiresAt = authResult.idTokenPayload.exp * 1000;\r\n            resolve();\r\n          });\r\n        })\r\n      }\r\n      signOut() {\r\n        // clear id token, profile, and expiration\r\n        this.idToken = null;\r\n        this.profile = null;\r\n        this.expiresAt = null;\r\n      }\r\n}\r\nconst auth0Client = new Auth();\r\n\r\nexport default auth0Client;","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport auth0Client from './Auth';\r\n\r\nclass Callback extends Component {\r\n  /*     async componentDidMount() {\r\n        await auth0Client.handleAuthentication();\r\n        this.props.history.replace('/');\r\n      }\r\n */\r\n    componentDidMount() {\r\n      this.props.history.replace('/');\r\n    }\r\n      render() {\r\n        return (\r\n          <p>Loading profile...</p>\r\n        );\r\n      }\r\n}\r\nexport default withRouter(Callback);","const actionTypes = {\r\n    LOGIN: 'LOGIN',\r\n    LOGIN_ASYNC: 'LOGIN_ASYNC',\r\n    FAILURE: 'FAILURE',\r\n    USERDETAIL: 'USERDETAIL',\r\n    USERDETAIL_ASYNC: 'USERDETAIL_ASYNC',\r\n    SET_ACTIVE_TAB: 'SET_ACTIVE_TAB',\r\n    SET_OVERLAY: 'SET_OVERLAY'\r\n};\r\n\r\nexport default actionTypes;","import React from 'react';\r\nimport './style.scss';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from './../../store/actions/constants';\r\nimport dummy from './../../assets/images/dummy.webp';\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.defaultError = {\r\n            required: '*Field is required',\r\n            pattern: '*Please enter valid value',\r\n            wrongCredentials: 'Wrong credentials. Please try again...',\r\n        };\r\n        this.state = {\r\n            forgotPassword: false,\r\n            formData: {\r\n                email: '',\r\n                password: '',\r\n                rememberMeChecked: false\r\n            },\r\n            error: {\r\n                emailError: '',\r\n                passwordError: '',\r\n                formError: ''\r\n            }\r\n        };\r\n\r\n        this.forgotPasswordHandler = this.forgotPasswordHandler.bind(this);\r\n        this.onInputHandler = this.onInputHandler.bind(this);\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this);\r\n    }\r\n\r\n    forgotPasswordHandler = () => {\r\n        this.setState({ forgotPassword: true });\r\n    }\r\n\r\n    onInputHandler = (e) => {\r\n        const value = e.target.value;\r\n        const validEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value);\r\n        const { formData, error } = this.state;\r\n        if (e.target.name === 'email') {\r\n            formData.email = value;\r\n            if (validEmail) {\r\n                error.emailError = '';\r\n            } else {\r\n                error.emailError = this.defaultError.pattern;\r\n            }\r\n        } else if (e.target.name === 'password') {\r\n            formData.password = value;\r\n            if (error.passwordError) {\r\n                error.passwordError = '';\r\n            }\r\n        } else if (e.target.name === 'rememberMe') {\r\n            formData.rememberMeChecked = !formData.rememberMeChecked;\r\n        }\r\n\r\n        this.setState({ formData, error });\r\n    }\r\n\r\n    checkValidityLoginForm = () => {\r\n        const { formData, error } = this.state;\r\n        const { email, password } = formData;\r\n        if (!email) {\r\n            error.emailError = this.defaultError.required;\r\n        }\r\n        if (!password) {\r\n            error.passwordError = this.defaultError.required;\r\n        }\r\n\r\n        const valid = (!formData.email || !formData.password || error.emailError) ? false : true;\r\n\r\n        this.setState({ error });\r\n\r\n        return valid;\r\n    }\r\n\r\n    checkValidityforgotPasswordForm = () => {\r\n        const { formData, error } = this.state;\r\n        const { email } = formData;\r\n        if (!email) {\r\n            error.emailError = this.defaultError.required;\r\n        }\r\n\r\n        const valid = (!formData.email || error.emailError) ? false : true;\r\n        this.setState({ error });\r\n        return valid;\r\n    }\r\n\r\n    onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        const { formData } = this.state;\r\n        const isLoginForm = e.target.name === 'loginForm';\r\n        if (isLoginForm) {\r\n            if (this.checkValidityLoginForm()) {\r\n                const { email, password, rememberMeChecked } = formData;\r\n                const formDataToBeSend = new FormData();\r\n                formDataToBeSend.append('email', email);\r\n                formDataToBeSend.append('password', password);\r\n                formDataToBeSend.append('rememberMe', rememberMeChecked);\r\n                const { saveUsername } = this.props;\r\n                saveUsername(formDataToBeSend);\r\n            }\r\n        } else {\r\n            if (this.checkValidityforgotPasswordForm()) {\r\n                const { email } = formData;\r\n                const formDataToBeSend = new FormData();\r\n                formDataToBeSend.append('email', email);\r\n                formData.email = '';\r\n                this.setState({ forgotPassword: false, formData });\r\n            }\r\n        }\r\n    }\r\n\r\n    callInitials = () => {\r\n        const { loggedIn } = this.props;\r\n        if (loggedIn) {\r\n            this.props.history.replace('/home');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { formData, error, forgotPassword } = this.state;\r\n        const { email, password, rememberMeChecked } = formData;\r\n        const { emailError, passwordError } = error;\r\n        const { loggedIn } = this.props;\r\n        return (\r\n            <div className='wrapper login'>\r\n                <div className='container'>\r\n                    <div className='login-wrapper'>\r\n                        <div className='video-section desktop-only'>\r\n                            <div className='video'>\r\n                                <img src={dummy} alt='dummy image' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-section'>\r\n                            {!forgotPassword ? <div>\r\n                                <form name='loginForm' role='form' onSubmit={this.onSubmitHandler} method='post' encType='multipart/form-data'>\r\n                                    <fieldset>\r\n                                        <legend>Account Login</legend>\r\n                                        <div className='form-group'>\r\n                                            <label htmlFor='email'>Email Address</label>\r\n                                            <input type='text' name='email' value={email} tabIndex='1' onChange={this.onInputHandler} />\r\n                                            {emailError && <p className='error'>{emailError}</p>}\r\n                                            <p className='info'>We'll never share your email with anyone else.</p>\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <label htmlFor='password'>Password</label>\r\n                                            <input type='password' name='password' value={password} tabIndex='2' onChange={this.onInputHandler} />\r\n                                            {passwordError && <p className='error'>{passwordError}</p>}\r\n                                        </div>\r\n                                        <div className='form-group'>\r\n                                            <div className='remember-block'>\r\n                                                <input type='checkbox' name='rememberMe' tabIndex='3' checked={rememberMeChecked} onChange={this.onInputHandler} /><label htmlFor='rememberMe'>Remember Me</label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <button type='submit' className='submit-btn' tabIndex='4'>Submit</button>\r\n                                        {loggedIn === false && <p className='error'>{this.defaultError.wrongCredentials}</p>}\r\n                                    </fieldset>\r\n                                </form>\r\n                                <div className='account-actions'>\r\n                                    <div className='forget-password' onClick={this.forgotPasswordHandler} tabIndex='5'>\r\n                                        <span>Forgot Password</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                :\r\n                                <div className='forgot-password-wrapper'>\r\n                                    <form name='forgotPassword' role='form' onSubmit={this.onSubmitHandler} method='post' encType='multipart/form-data'>\r\n                                        <fieldset>\r\n                                            <legend>Forgot Password</legend>\r\n                                            <div className='form-group'>\r\n                                                <label htmlFor='email'>Email Address</label>\r\n                                                <input type='text' name='email' value={email} tabIndex='1' onChange={this.onInputHandler} />\r\n                                                {emailError && <p className='error'>{emailError}</p>}\r\n                                                <p className='info'>We'll never share your email with anyone else.</p>\r\n                                            </div>\r\n                                            <button type='submit' className='submit-btn' tabIndex='2'>Submit</button>\r\n                                        </fieldset>\r\n                                    </form>\r\n                                </div>}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { loggedIn } = state;\r\n    return {\r\n        loggedIn\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveUsername: (data) => {\r\n            dispatch({\r\n                type: actionTypes.LOGIN,\r\n                data\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import actionTypes from './constants';\r\n  \r\nexport const setLoginDetails = (data) => {\r\n  return {\r\n    type: actionTypes.LOGIN_ASYNC,\r\n    data\r\n  };\r\n}\r\n\r\nexport const failure = (error) => {\r\n  return {\r\n    type: actionTypes.FAILURE,\r\n    error\r\n  }\r\n}\r\n\r\nexport const setUserDetails = (data) => {\r\n  return {\r\n    type: actionTypes.USERDETAIL_ASYNC,\r\n    data\r\n  }\r\n}\r\n\r\nexport const setActiveTab= (data) => {\r\n  return {\r\n    type: actionTypes.SET_ACTIVE_TAB,\r\n    data\r\n  }\r\n}\r\n\r\nexport const setOverlay = (data) => {\r\n  return {\r\n    type: actionTypes.SET_OVERLAY,\r\n    data\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport actionTypes from '../../../store/actions/constants';\r\nimport './style.scss';\r\n\r\nclass Overlay extends React.Component {\r\n\r\n    closeOverlay = (e) => {\r\n        e.stopPropagation();\r\n        const targetEle = e.target;\r\n        if (targetEle.classList.contains('overlay')) {\r\n            const { setOverlay, callback } = this.props;\r\n            setOverlay('');\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { extraClass, closeBtn } = this.props;\r\n        return (\r\n            <div className={`overlay ${extraClass}`} onClick={this.closeOverlay}>\r\n                {closeBtn && <span className='close-btn' onClick={this.closeOverlay}></span>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { ui } = state;\r\n    return {\r\n        ui\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveTab: (data) => { dispatch({ type: actionTypes.SET_ACTIVE_TAB, data }) },\r\n        setOverlay: (data) => { dispatch({ type: actionTypes.SET_OVERLAY, data }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Overlay);","import React from 'react';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nclass MiscUtils {\r\n    schoolDetails = {};\r\n    classList = [];\r\n    studentList = [];\r\n    schoolId = '';\r\n    getOptions(options) {\r\n        let value = [];\r\n        if (Array.isArray(options)) {\r\n            for (let j = 0; j < options.length; j++) {\r\n                if (typeof options[j] === 'object' && options[j] !== null) {\r\n                    value.push(<MenuItem value={options[j].studentName} key={options[j].studentId} data-id={options[j].studentId}>{options[j].studentName}</MenuItem>)\r\n                }\r\n                else {\r\n                    value.push(<MenuItem value={options[j]} key={options[j]}>{options[j]}</MenuItem>)\r\n                }\r\n\r\n            }\r\n        } else {\r\n            for (let j = 1; j <= options; j++) {\r\n                value.push(<MenuItem value={j} key={j}>{j}</MenuItem>)\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n\r\n    isFieldValid(validationtype, value, validity, id) {\r\n        if (validationtype === 'password') {\r\n            validationtype = validationtype + '*';\r\n        }\r\n        if (validationtype.endsWith('*')) {\r\n            validationtype = (!value || !value.length) ? 'required' : validationtype.slice(0, -1);\r\n        }\r\n        let regex = '';\r\n        let vld = true;\r\n\r\n        if (value || validationtype === 'required') {\r\n            switch (validationtype) {\r\n                case 'onlyAlphabets':\r\n                    regex = /^[a-zA-Z ]*$/;\r\n                    vld = regex.test(value)\r\n                    break;\r\n                case 'required':\r\n                    vld = value && value.length ? true : false;\r\n                    break\r\n                case 'aplhaNumeric':\r\n                    regex = /^[a-zA-Z0-9 ]*$/;\r\n                    vld = regex.test(value);\r\n                    break\r\n                case 'numeric':\r\n                    regex = /^[0-9 ]*$/;\r\n                    vld = regex.test(value);\r\n                    break;\r\n                case 'decimal':\r\n                    regex = /^[0-9]+(\\.[0-9]{1,2})?$/;\r\n                    vld = regex.test(value);\r\n                    break;\r\n                case 'mobile':\r\n                    regex = /^[0-9 ]*$/;\r\n                    if (!regex.test(value)) {\r\n                        vld = false;\r\n                        validationtype = 'numeric';\r\n                    } else if (value.length < 10) {\r\n                        vld = false;\r\n                        validationtype = 'mobileLength';\r\n                    }\r\n                    break;\r\n                // case 'password':\r\n                //     regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/;\r\n                //     if (!regex.test(value)) {\r\n                //         vld = false;\r\n                //         validationtype = 'password';\r\n                //     } else if (value.length < 8) {\r\n                //         vld = false;\r\n                //         validationtype = 'passwordLength';\r\n                //     }\r\n                //     break;\r\n                case 'email':\r\n                    regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n                    vld = regex.test(value);\r\n                    break;\r\n                case 'allCharacters':\r\n                default:\r\n                    vld = true;\r\n                    break\r\n            }\r\n        }\r\n        return this.getFormValidity(id, vld, validity, validationtype);\r\n    }\r\n\r\n    getFormValidity(id, isValid, validity, validationtype) {\r\n        Object.assign(validity, {\r\n            [id]: {\r\n                isInvalid: !isValid,\r\n                validationtype,\r\n            }\r\n        });\r\n\r\n        const keys = Object.keys(validity);\r\n        let v = false;\r\n        if (keys.length) {\r\n            for (let i = 0; i < keys.length; i++) {\r\n                let key = keys[i];\r\n                if (validity[key].isInvalid) {\r\n                    v = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return { validity, v };\r\n    }\r\n\r\n    getErrorMessage(validationtype) {\r\n        switch (validationtype) {\r\n            case 'onlyAlphabets':\r\n                return 'Special characters or numerical values are not allowed';\r\n            case 'required':\r\n                return 'Field is required';\r\n            case 'aplhaNumeric':\r\n                return 'Special characters are not allowed'\r\n            case 'numeric':\r\n                return 'Only numerics values are allowed';\r\n            case 'decimal':\r\n                return 'Only numerics values are allowed upto 2 decimals';\r\n            case 'mobileLength':\r\n                return 'Phone number must be 10 digits.'\r\n            case 'password':\r\n                return 'Must have at least one uppercase, one lowercase, one number and one special character'\r\n            case 'passwordLength':\r\n                return 'Password must be of 8 digits.'\r\n            case 'email':\r\n                return 'Not a valid email'\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    promiseAllHandler(p) {\r\n        return Promise.all(p.map(p => p.catch(e => e)));\r\n    }\r\n}\r\n\r\n\r\nconst miscUtils = new MiscUtils();\r\nexport default miscUtils;","import React from 'react';\r\n// import {Link, withRouter} from 'react-router-dom';\r\nimport auth0Client from './../../Auth';\r\nimport { connect } from 'react-redux';\r\nimport { setLoginDetails } from './../../store/actions';\r\nimport Overlay from './../sub-component/overlay';\r\nimport actionTypes from '../../store/actions/constants';\r\nimport './style.scss';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nclass NavBar extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            dropdownActive: false,\r\n        }\r\n    }\r\n\r\n    toggleDropdown = (e) => {\r\n        e = e || window.event;\r\n        e.stopPropagation();\r\n        const { dropdownActive } = this.state;\r\n        const { setOverlay } = this.props;\r\n\r\n        console.log('toggleDropdown: ');\r\n        if (!dropdownActive) {\r\n            setOverlay('menu-nav-dropdown');\r\n        } else {\r\n            setOverlay('');\r\n        }\r\n        this.setState({ dropdownActive: !dropdownActive });\r\n    }\r\n\r\n    signOut = () => {\r\n        console.log('signout login');\r\n        const { saveUsername } = this.props;\r\n        auth0Client.signOut();\r\n        saveUsername('signout');\r\n        window.location.href = '/'\r\n    };\r\n\r\n    render() {\r\n        const { detail, ui } = this.props;\r\n        const { displayName } = detail;\r\n        let { activeOverlay } = ui;\r\n        miscUtils.schoolDetails = detail.schoolDetails;\r\n        miscUtils.schoolId = detail.schoolId;\r\n        miscUtils.role = detail.role;\r\n        miscUtils.studentId = detail.studentId ? detail.studentId : '';\r\n        const { dropdownActive } = this.state;\r\n        const showOverlay = activeOverlay === 'menu-nav-dropdown';\r\n        return (\r\n            <header>\r\n                <nav className={`nav-wrapper ${dropdownActive && 'active-dropdown'}`}>\r\n                    {\r\n                        auth0Client.isAuthenticated() &&\r\n                        <div className='nav-bar'>\r\n                            {/* <span className='logo-wrapper'>logo</span> */}\r\n                            <span className='title'>Bulkcom Shipping</span>\r\n                            <span className='profile-wrapper' onClick={this.toggleDropdown}>\r\n                                <IconButton aria-label='Add' className='btn-edit'><ExitToAppIcon /></IconButton>\r\n                                <ul className={`profile-dropdown ${dropdownActive ? 'show' : 'hide'}`}>\r\n                                    <li><label className=\"mr-2 text-black\">{`${displayName ? capitalize(displayName) : 'name'}`}</label></li>\r\n                                    <li><button className=\"btn btn-primary\" onClick={this.signOut}>Sign Out</button></li>\r\n                                </ul>\r\n                            </span>\r\n\r\n                        </div>\r\n                    }\r\n                </nav>\r\n                {showOverlay && <Overlay extraClass='menu-overlay' callback={this.toggleDropdown} />}\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nconst capitalize = s => {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveUsername: (userId) => { dispatch(setLoginDetails(userId)) },\r\n        setOverlay: (data) => { dispatch({ type: actionTypes.SET_OVERLAY, data }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","export const leftMenuMapping = {\r\n    user: {\r\n        link: 'user',\r\n        title: 'User',\r\n        icon: ''\r\n    },\r\n    vessel: {\r\n        link: 'vessel',\r\n        title: 'Vessel',\r\n        icon: ''\r\n    },\r\n    voyage: {\r\n        link: 'voyage',\r\n        title: 'Voyage',\r\n        icon: ''\r\n    },\r\n    performance: {\r\n        link: 'performance',\r\n        title: 'Performance',\r\n        icon: ''\r\n    }\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { leftMenuMapping } from './constants';\r\nimport { connect } from 'react-redux';\r\nimport Overlay from './../overlay';\r\nimport actionTypes from '../../../store/actions/constants';\r\n\r\nimport './style.scss';\r\n\r\nclass LeftMenu extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            activeMenu: false\r\n        }\r\n    }\r\n    clickHandler = (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    toggleMenu = (e) => {\r\n        e = e || window.event;\r\n        e.stopPropagation();\r\n        console.log('toggleMenu: ');\r\n        const { activeMenu } = this.state;\r\n        const { setOverlay } = this.props;\r\n        if (!activeMenu) {\r\n            setOverlay('menu-overlay');\r\n        } else {\r\n            setOverlay('');\r\n        }\r\n        this.setState({ activeMenu: !activeMenu });\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { ui, detail } = this.props;\r\n        let { activeOverlay } = ui;\r\n        const isMenuActive = this.state.activeMenu;\r\n        const showOverlay = activeOverlay === 'menu-overlay';\r\n        let menuItem = [];\r\n        if (detail.role === 'Admin') {\r\n            menuItem = ['user', 'vessel', 'voyage', 'performance'];\r\n        } else if (detail.role === \"Manager\") {\r\n            const mr = this.props.detail.managerRoles;\r\n            if (mr.some(s => s.indexOf('User') >= 0)) {\r\n                menuItem.push('user')\r\n            }\r\n            if (mr.some(s => s.indexOf('Vessel') >= 0)) {\r\n                menuItem.push('vessel')\r\n            }\r\n            if (mr.some(s => s.indexOf('Voyage') >= 0)) {\r\n                menuItem.push('voyage')\r\n            }\r\n            if (mr.some(s => s.indexOf('Performance') >= 0)) {\r\n                menuItem.push('performance')\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <div className={`left-menu-wrapper ${isMenuActive ? 'active-menu' : ''}`}>\r\n                    <div className='menu-bar'>\r\n                        <div className='menu-icon' onClick={this.toggleMenu}>\r\n                            <span className='bar b1'></span>\r\n                            <span className='bar b2'></span>\r\n                            <span className='bar b3'></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='content-wrapper'>\r\n                        <div className='title'>\r\n                            <h1 className='heading_1'>Bulkcom Shipping</h1></div>\r\n                        <div className='menu-items-wrappers'>\r\n                            <ul className='menu-items' onClick={this.clickHandler}>\r\n                                {menuItem && menuItem.length && menuItem.map((item, index) => {\r\n                                    let isActive = false;\r\n                                    isActive = (index === 0) ? true : false;\r\n                                    return <li className={`list-item ${isActive && 'active'}`} key={`item__${index}`} data-link={leftMenuMapping[item].link}>\r\n                                        <Link to={leftMenuMapping[item].link}>{leftMenuMapping[item].title}</Link>\r\n                                    </li>\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {activeOverlay && <Overlay extraClass='menu-overlay' callback={this.toggleMenu} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const { ui, detail } = state;\r\n    return {\r\n        ui, detail\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveTab: (data) => { dispatch({ type: actionTypes.SET_ACTIVE_TAB, data }) },\r\n        setOverlay: (data) => { dispatch({ type: actionTypes.SET_OVERLAY, data }) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LeftMenu);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { Paper, Tabs, Tab } from '@material-ui/core';\r\nimport './style.scss';\r\n\r\nfunction TabPanel(props) {\r\n    const {\r\n        children,\r\n        value,\r\n        index,\r\n        ...other\r\n    } = props;\r\n\r\n    return (\r\n        <div role='tabpanel'\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tab-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (<Box >{children}</Box>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n}\r\n\r\nfunction getTabs(tabsLabel, value) {\r\n    const tabs = tabsLabel && tabsLabel.map((item, index) => {\r\n        if (item.icon) {\r\n            return (<Tab icon={item.icon} label={item.label} {...a11yProps(0)} key={`key-tab-${index}`} />);\r\n        }\r\n        return (<Tab label={item.label} {...a11yProps(0)} key={`key-tab-${index}`} />);\r\n    });\r\n    return tabs;\r\n}\r\n\r\nfunction getTabPanels(tabPanelChild, value) {\r\n    const tabspanels = tabPanelChild && tabPanelChild.map((item, index) => {\r\n        return (<TabPanel value={value} index={index} key={`key-tabpanel-${index}`}>\r\n            {item.child}\r\n        </TabPanel>);\r\n    });\r\n\r\n    return tabspanels;\r\n}\r\n\r\nfunction ScrollableTabsButtonAuto(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        const { onChange } = props;\r\n\r\n        if(onChange(event, newValue)) {\r\n            setValue(newValue);\r\n        }\r\n    }\r\n    const { tabsLabel, tabPanelChild, TabIndicatorProps, paper } = props && props.tabs;\r\n    const { isDirty, newTabVal } = props;\r\n    if(isDirty !== undefined) {\r\n        if(!isDirty && value!== newTabVal) {\r\n            setValue(newTabVal);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {\r\n                paper ? <Paper square>\r\n                    <Tabs value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor='primary'\r\n                        textColor='primary'\r\n                        variant='scrollable'\r\n                        scrollButtons='auto'\r\n                        TabIndicatorProps={TabIndicatorProps}\r\n                        aria-label='scrollable auto tab'\r\n                    >\r\n                        {getTabs(tabsLabel, value)}\r\n                    </Tabs>\r\n                </Paper>\r\n                    :\r\n                    <AppBar position='static' color='default'>\r\n                        <Tabs value={value}\r\n                            onChange={handleChange}\r\n                            indicatorColor='primary'\r\n                            textColor='primary'\r\n                            variant='scrollable'\r\n                            scrollButtons='auto'\r\n                            TabIndicatorProps={TabIndicatorProps}\r\n                            aria-label='scrollable auto tab'\r\n                        >\r\n                            {getTabs(tabsLabel, value)}\r\n                        </Tabs>\r\n                    </AppBar>\r\n            }\r\n            {getTabPanels(tabPanelChild, value)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScrollableTabsButtonAuto;","const constants = {\r\n    roles: ['Client', 'Manager'],\r\n    clientType: ['Charterer', 'Owner'],\r\n    clientDisplayList: ['View Performance', 'View Voyage Details', 'View Documents'],\r\n    managerRolesList: ['Add New User', 'View All Users', 'Edit User Details', 'Add New Vessel', 'View All Vessels', 'Edit Vessel Details', 'Fill Voyage Details', 'View All Voyage Details', 'Edit Voyage Details', 'Fill Performance Details', 'View All Performance Details', 'Edit Performance Details'],\r\n    voyageFieldList: ['Vessel Size', 'Load Port', 'Discharge Port', 'Cargo', 'Cargo Intake', 'Owner Name', 'Shipper', 'Load Port Agent', 'Discharge Port Agent', 'Receiver', 'On Hire Surveyor', 'Off Hire Surveyor', 'Bunker Supplier', 'Bunker Trader', 'PNI Insurance', ' Weather Routing Company'],\r\n}\r\n\r\nexport default constants;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function ConfirmationAlert(props) {\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={props.confAlertDetails.openAlert}\r\n        onClose={props.handleCancelAlert}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.confAlertDetails.titleMsg}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.confAlertDetails.descrMsg}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleCancelAlert} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={props.handleSuccessAlert} color=\"primary\" autoFocus>\r\n            {props.confAlertDetails.buttonTitle}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Alert(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.alertDetails.openAlert}\r\n        onClose={props.handleCancelAlert}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.alertDetails.titleMsg}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n           {props.alertDetails.descrMsg}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleCancelAlert} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import axios from 'axios';\r\n\r\nclass API {\r\n    constructor() {\r\n        this.apiUrl = '';\r\n    }\r\n\r\n    /*\r\n    * loginUser: method to validate user\r\n    * argument: data : login information { userId, password, rememberMe }\r\n    */\r\n    loginUser(data) {\r\n        return axios.post(this.apiUrl + '/userDetails/login', data);\r\n    }\r\n\r\n    /*\r\n    * fetchMarks: method to fetch student's marks\r\n    * argument: data : { userId, schoolId, studentId }\r\n    */\r\n    checkUsername = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/checkUsername', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    updatePassword = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/updatePassword', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    login = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/login', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertUserDetails = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/insertUserDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/insertVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertPerformanceData = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/insertPerformanceData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVoyageData = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/insertVoyageData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllVesselsPerformance = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getAllVessels/' + data.isDetailsFilled);\r\n    }\r\n\r\n    getAllVoyage = data => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyage/' + data.companyName, {\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n    }\r\n\r\n    getAllUserDetails = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllUserDetails');\r\n    }\r\n\r\n    getAllClientList = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllClientList');\r\n    }\r\n\r\n    getAllVesselsList = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselsList');\r\n    }\r\n\r\n    getAllVesselsDetails = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselDetails');\r\n    }\r\n\r\n    getAllVoyageDetails = () => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyageDetails');\r\n    }\r\n\r\n    fillPerformanceDetails = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/fillPerformanceDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVesselDetails = data => {\r\n        return axios.delete(this.apiUrl + '/vesselDetails/' + data);\r\n    }\r\n\r\n    updateVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/updateVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVoyageDetails = data => {\r\n        return axios.delete(this.apiUrl + '/voyageDetails/' + data);\r\n    }\r\n\r\n    deleteUserDetails = data => {\r\n        return axios.delete(this.apiUrl + '/UserDetails/' + data);\r\n    }\r\n\r\n    updateUserDetails = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/updateUserDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    updateVoyageDetails = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/updateVoyageDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getPortDetails = data => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getPortDetails/' + data.userName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n\r\n    getPerformanceDetails = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getPerformanceDetails/' + data.chartererName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n\r\n    getCompletePerformanceDetailsForView = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getCompletePerformanceDetailsForView/' + data.userName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n};\r\n\r\nconst api = new API();\r\nexport default api;","import React, { Component } from 'react';\r\nimport { Paper, Grid, Button, InputLabel, Select, Checkbox, ListItemText, MenuItem, Input, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport constants from '../../utils/constants';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport api from '../../api';\r\n\r\nclass AddNewUser extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDirty: false,\r\n      isTyped: false,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      userDetails: props && props.onRowClickedData ? { ...props.onRowClickedData } : {},\r\n      isEditPage: props && props.onRowClickedData && Object.keys(props.onRowClickedData).length ? true : false,\r\n      validity: {},\r\n      isformValid: true\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props && this.props.onRowClickedData) {\r\n      this.updateForm(this.props.onRowClickedData, true);\r\n    }\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    confAlertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: '',\r\n      buttonTitle: '',\r\n    },\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  handleSuccessAlert = async e => {\r\n    e.preventDefault();\r\n    const { isDirty, userDetails, isEditPage } = this.state;\r\n    if (isDirty) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n        validity: {}\r\n      });\r\n    }\r\n\r\n    let resp = {};\r\n    if (isEditPage) {\r\n      resp = await api.updateUserDetails(userDetails);\r\n      if (resp.data.status) {\r\n        this.props.handleBlocking(false);\r\n        this.setState({\r\n          isDirty: true,\r\n          isTyped: false,\r\n          confAlertDetails: {\r\n            openAlert: false,\r\n            titleMsg: '',\r\n            descrMsg: '',\r\n            buttonTitle: '',\r\n          },\r\n          isEditPage: true,\r\n          validity: {},\r\n          isformValid: true,\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Success !!',\r\n            descrMsg: 'Updated user details successfully..'\r\n          },\r\n        });\r\n      } else {\r\n        this.setState({\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Error !!',\r\n            descrMsg: 'Failed to update user details...'\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      resp = await api.insertUserDetails({ ...userDetails });\r\n      if (resp.data.status.errors || resp.data.status.errorMsg || resp.data.status.errmsg || !resp.data.status) {\r\n        if (resp && resp.data && resp.data.status && resp.data.status.errmsg && resp.data.status.errmsg.indexOf('duplicate key error') >= 0) {\r\n          this.setState({\r\n            alertDetails: {\r\n              openAlert: true,\r\n              titleMsg: 'Error !!',\r\n              descrMsg: 'Username already exits.'\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        this.setState({\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Error !!',\r\n            descrMsg: 'Failed to add new user...'\r\n          }\r\n        });\r\n      } else {\r\n        this.setState({\r\n          isDirty: false,\r\n          isTyped: false,\r\n          confAlertDetails: {\r\n            openAlert: false,\r\n            titleMsg: '',\r\n            descrMsg: '',\r\n            buttonTitle: '',\r\n          },\r\n          userDetails: {},\r\n          validity: {},\r\n          isformValid: true,\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Success !!',\r\n            descrMsg: 'Added new user successfully..'\r\n          },\r\n        });\r\n      }\r\n      this.props.handleBlocking(false);\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.isEditPage) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Update user Details ?',\r\n          descrMsg: 'Do you want to submit?',\r\n          buttonTitle: 'Submit'\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Add New User ?',\r\n          descrMsg: 'Do you want to submit?',\r\n          buttonTitle: 'Submit'\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { id, value, name } = e.target;\r\n    let { userDetails, isformValid, validity, isTyped } = this.state;\r\n    if (typeof e.target.getAttribute === 'function') {\r\n      let validationtype = e.target.getAttribute('type');\r\n      if (validationtype) {\r\n        const resp = miscUtils.isFieldValid(validationtype, value, validity, id);\r\n        isformValid = !resp.v;\r\n        this.setState({\r\n          validity: resp.validity,\r\n          validationtype,\r\n          isformValid: !resp.v\r\n        });\r\n      }\r\n    }\r\n    isTyped = true\r\n    if (id) {\r\n      Object.assign(userDetails, { [id]: value });\r\n    } else {\r\n      Object.assign(userDetails, { [name]: value });\r\n    }\r\n\r\n    this.updateForm(userDetails, isformValid, isTyped);\r\n  };\r\n\r\n  updateForm(userDetails, isformValid, isTyped) {\r\n    const { userName, companyName, displayName, password, role, managerRoles, clientDisplay, clientType } = userDetails\r\n    if (isformValid && userName && companyName && displayName && role) {\r\n      if (!this.state.isEditPage) {\r\n        if (role === 'Client' && password && clientType && clientDisplay && clientDisplay.length) {\r\n          Object.assign(userDetails, { managerRoles: [] });\r\n          this.setState({ isDirty: true, userDetails });\r\n        } else if (role === 'Manager' && password && managerRoles && managerRoles.length) {\r\n          Object.assign(userDetails, { clientType: role, clientDisplay: [] });\r\n          this.setState({ isDirty: true, userDetails, isTyped });\r\n        } else {\r\n          this.setState({ isDirty: false, userDetails, isTyped });\r\n        }\r\n      } else {\r\n        if (role === 'Client' && clientType && clientDisplay && clientDisplay.length) {\r\n          Object.assign(userDetails, { managerRoles: [] });\r\n          this.setState({ isDirty: true, userDetails });\r\n        } else if (role === 'Manager' && managerRoles && managerRoles.length) {\r\n          Object.assign(userDetails, { clientType: role, clientDisplay: [] });\r\n          this.setState({ isDirty: true, userDetails, isTyped });\r\n        } else {\r\n          this.setState({ isDirty: false, userDetails, isTyped });\r\n        }\r\n      }\r\n    } else {\r\n      this.setState({ isDirty: false, userDetails, isTyped });\r\n    }\r\n\r\n    if (isTyped) {\r\n      this.props.handleBlocking(true);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { validity, isDirty, isformValid, confAlertDetails, userDetails, alertDetails, isEditPage } = this.state;\r\n    let { userName, companyName, displayName, password, role } = userDetails;\r\n    let showRoledata;\r\n    if (role === 'Manager') {\r\n      showRoledata = this.getManagerRoleData();\r\n    } else if (role === 'Client') {\r\n      showRoledata = this.getClientRoleData();\r\n    }\r\n\r\n    return (\r\n      <form autoComplete=\"off\" noValidate >\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <Paper style={{ marginTop: '2%' }}>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.userName && validity.userName.isInvalid}\r\n                id='userName'\r\n                label='User Name *'\r\n                type='email*'\r\n                disabled={isEditPage}\r\n                onChange={this.handleChange}\r\n                value={userName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.userName && validity.userName.isInvalid ? miscUtils.getErrorMessage(validity.userName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.companyName && validity.companyName.isInvalid}\r\n                id='companyName'\r\n                label='Company Name *'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={companyName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.companyName && validity.companyName.isInvalid ? miscUtils.getErrorMessage(validity.companyName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.displayName && validity.displayName.isInvalid}\r\n                id='displayName'\r\n                label='Display Name *'\r\n                type='onlyAlphabets*'\r\n                onChange={this.handleChange}\r\n                value={displayName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.displayName && validity.displayName.isInvalid ? miscUtils.getErrorMessage(validity.displayName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.password && validity.password.isInvalid}\r\n                id='password'\r\n                label='Password *'\r\n                type='password'\r\n                disabled={isEditPage}\r\n                onChange={this.handleChange}\r\n                value={password || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.password && validity.password.isInvalid ? miscUtils.getErrorMessage(validity.password.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Role *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                autoWidth\r\n                disabled={isEditPage}\r\n                id='role'\r\n                name='role'\r\n                value={role || ''}\r\n                onChange={this.handleChange}>\r\n                {miscUtils.getOptions(constants.roles)}\r\n              </Select>\r\n            </Grid>\r\n            {showRoledata}\r\n          </Grid>\r\n          <Button\r\n            className={`${(isDirty && isformValid) ? 'white-color' : 'grey-color'} btn-save`}\r\n            variant='contained'\r\n            size='large'\r\n            startIcon={<SaveIcon />}\r\n            disabled={!(isDirty && isformValid)}\r\n            onClick={this.handleSubmit}> Submit  </Button>\r\n        </Paper>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  getManagerRoleData() {\r\n    let { managerRoles } = this.state.userDetails;\r\n    if (!managerRoles) {\r\n      managerRoles = [];\r\n    }\r\n    const names = constants.managerRolesList;\r\n    const data = <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n      <InputLabel id=\"demo-mutiple-checkbox-label\" className='inputLabels'>Select Manager Roles *</InputLabel>\r\n      <Select\r\n        className='field-select'\r\n        labelId=\"demo-mutiple-checkbox-label\"\r\n        id=\"demo-mutiple-checkbox\"\r\n        multiple\r\n        value={managerRoles}\r\n        name='managerRoles'\r\n        onChange={this.handleChange}\r\n        input={<Input id=\"select-multiple-chip\" />}\r\n        renderValue={(selected) => selected.join(', ')}>\r\n        {names.map((name) => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={managerRoles && managerRoles.length && managerRoles.indexOf(name) > -1} />\r\n            <ListItemText primary={name} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </Grid>\r\n    return data;\r\n  }\r\n\r\n  getClientRoleData() {\r\n    let { clientType, clientDisplay } = this.state.userDetails;\r\n    if (!clientDisplay) {\r\n      clientDisplay = [];\r\n    }\r\n    const names = constants.clientDisplayList.sort();\r\n    const data = <>\r\n      <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n        <InputLabel id='demo-simple-select-label' className='inputLabels'>Client Type *</InputLabel>\r\n        <Select\r\n          className='field-select'\r\n          labelId='demo-simple-select-label'\r\n          autoWidth\r\n          id='clientType'\r\n          name='clientType'\r\n          value={clientType || ''}\r\n          onChange={this.handleChange}>\r\n          {miscUtils.getOptions(constants.clientType)}\r\n        </Select>\r\n      </Grid>\r\n      <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\" className='inputLabels'>Select Client Display *</InputLabel>\r\n        <Select\r\n          className='field-select'\r\n          labelId=\"demo-mutiple-checkbox-label\"\r\n          id=\"demo-mutiple-checkbox\"\r\n          multiple\r\n          value={clientDisplay}\r\n          name='clientDisplay'\r\n          onChange={this.handleChange}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => selected.join(', ')}>\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name}>\r\n              <Checkbox checked={clientDisplay && clientDisplay.length && clientDisplay.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </Grid>\r\n    </>\r\n    return data\r\n  }\r\n\r\n}\r\n\r\nexport default AddNewUser;\r\n","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport api from '../../api';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction UserTable(props) {\r\n  let propsInside = props;\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} onClick = {()=> {\r\n      for (let i=0;i< data.length;i++) {\r\n        let singleClientId = data[i]\r\n        if (singleClientId.role ==='Manager' && singleClientId.managerRoles && singleClientId.managerRoles.length) {\r\n          singleClientId.managerRoles = <select>{singleClientId.managerRoles.map((e) => <option>{e}</option>)}</select>\r\n        }\r\n      }\r\n    }}/>),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} onClick = {()=> {\r\n      \r\n      for (let i=0;i< data.length;i++) {\r\n        let singleClientId = data[i]\r\n        if (singleClientId.role ==='Manager' && singleClientId.managerRoles) {\r\n          singleClientId.managerRoles = propsInside.originalArray[i].managerRoles;\r\n        }\r\n      }\r\n    }}/>),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  let [columns, setColumns] = React.useState([]);\r\n  let [data, setData] = React.useState([]);\r\n\r\n  if (props.columns && props.columns.length && !columns.length) {\r\n    setColumns(props.columns);\r\n  }\r\n\r\n  if (props.data && props.data.length && !data.length) {\r\n    setData(props.data);\r\n  }\r\n\r\n  const showDelete = () => {\r\n    const { detail } = props;\r\n    const { managerRoles } = detail;\r\n    if (detail && detail.role === 'Admin') {\r\n      return true;\r\n    } else if (detail && detail.role === 'Manager') {\r\n      if (managerRoles && managerRoles.length) {\r\n        return managerRoles.some(s => s === 'Edit User Details');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MaterialTable\r\n      title={props.title}\r\n      columns={props.columns}\r\n      data={props.data}\r\n      icons={tableIcons}\r\n      editable=\r\n      {showDelete() ?\r\n        {\r\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\r\n            resolve();\r\n            props.onRowClick(newData, oldData);\r\n          }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setData(async prevState => {\r\n                  const data = [...prevState];\r\n                  let resp = await api.deleteUserDetails(oldData['_id']);\r\n                  if (resp.data.status) {\r\n                    window.location.reload();\r\n                    // data.splice(data.indexOf(oldData), 1);\r\n                  }\r\n                  return data;\r\n                });\r\n              }, 600);\r\n            }),\r\n        } : null}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(UserTable);","import React, { Component } from 'react';\r\nimport Alert from '../../utils/alert';\r\nimport UserTable from './userTable';\r\nimport api from '../../api';\r\n\r\nclass ViewAllUsers extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.originalObjectArray = [];\r\n    this.state = {\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      originalColumns : [],\r\n    }\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n  }\r\n\r\n  componentDidMount = async e => {\r\n    const res = await api.getAllUserDetails();\r\n    if (res.data.status) {\r\n      const onceArray = Array.from(res.data.clientList);\r\n      this.originalObjectArray = JSON.parse(JSON.stringify(res.data.clientList))\r\n      this.setState({\r\n        originalColumns : onceArray\r\n      })\r\n      for (var i = 0; i < res.data.clientList.length; i++) {\r\n        let singleClientId = res.data.clientList[i]\r\n        if (singleClientId.role ==='Manager' && singleClientId.managerRoles && singleClientId.managerRoles.length) {\r\n          singleClientId.managerRoles = <select>{singleClientId.managerRoles.map((e) => <option>{e}</option>)}</select>\r\n        }\r\n      }\r\n      \r\n      this.setState({ clientList: res.data.clientList });\r\n    }\r\n  }\r\n\r\n\r\n  onRowClick = (event, rowData) => {\r\n    //if(!event.target.tagName === 'SELECT') {\r\n      this.props.handleRowClicked(rowData);\r\n    //}\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  render() {\r\n    const columns = [{ field: 'userName', title: 'User Name', editable: 'never' },\r\n    { field: 'displayName', title: 'Display Name', editable: 'never' },\r\n    { field: 'companyName', title: 'Company Name', editable: 'never' },\r\n    { field: 'role', title: 'Role', editable: 'never' },\r\n    { field: 'clientType', title: 'User Type', editable: 'never' },\r\n    { field: 'clientDisplay', title: 'Client Display', editable: 'never' },\r\n    { field: 'managerRoles', title: 'Roles', editable: 'never' },\r\n    ];\r\n\r\n    const { clientList, alertDetails } = this.state;\r\n    return (\r\n      <form>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <UserTable title={'View All Users'} data={clientList} columns={columns} onRowClick={this.onRowClick} originalColumns = {this.state.originalColumns} originalArray = {this.originalObjectArray}/>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewAllUsers;","import React, { Component } from 'react';\r\nimport ScrollableTabsButtonAuto from '../sub-component/ScrollableTabsButtonAuto';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport AddNewUser from './Form_AddNewUser';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport ViewAllUsers from './Form_ViewAllUsers';\r\n\r\nclass Users extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n      isDirty: false,\r\n      localClickedtTab: 0,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n\r\n    };\r\n\r\n    this.handleBlocking = this.handleBlocking.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n    this.handleRowClicked = this.handleRowClicked.bind(this);\r\n  }\r\n\r\n  handleIconDetail = (event, value) => {\r\n    const { detail } = this.props;\r\n    let localValue = 2;\r\n    if (detail && detail.role === 'Manager' && detail.managerRoles.some(m => m === 'Edit User Details')) {\r\n      localValue = 1;\r\n    }\r\n\r\n    if (value === localValue) {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Sorry !!',\r\n          descrMsg: 'You cannot directly click the tab.  Please click the edit icon from the table to edit...'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ onRowClickedData: {} });\r\n    if (value !== this.state.activeTabIndex) {\r\n      const { isDirty } = this.state;\r\n      if (isDirty) {\r\n        this.setState({\r\n          confAlertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Discard Changes?',\r\n            descrMsg: '  You have unsaved changes. Do you want to discard?',\r\n            buttonTitle: ' Discard'\r\n          },\r\n          localClickedtTab: value\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    this.setState({ activeTabIndex: value, localClickedtTab: value });\r\n    return true;\r\n  };\r\n\r\n  handleCancelAlert = () => {\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      localClickedtTab: this.state.activeTabIndex\r\n    })\r\n  };\r\n\r\n  handleSuccessAlert = e => {\r\n    e.preventDefault();\r\n    const { localClickedtTab, activeTabIndex, isDirty } = this.state\r\n    if (localClickedtTab !== activeTabIndex && isDirty) {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n      this.setState({ activeTabIndex: localClickedtTab });\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleBlocking = e => this.setState({ isDirty: e });\r\n  handleRowClicked = e => {\r\n    const { detail } = this.props;\r\n    let localValue = 2;\r\n    if (detail && detail.role === 'Manager') {\r\n      const isPresent = detail.managerRoles.some(m => m === 'Edit User Details');\r\n      if (!isPresent) {\r\n        return;\r\n      } else if (isPresent) {\r\n        localValue = 1\r\n      }\r\n    } else {\r\n      localValue = 2\r\n    }\r\n\r\n    this.setState({ activeTabIndex: localValue, localClickedtTab: localValue, onRowClickedData: e });\r\n  };\r\n\r\n  getTabData = () => {\r\n    const { detail } = this.props;\r\n    if (detail && detail.role === 'Manager') {\r\n      const tabs = {\r\n        tabsLabel: [],\r\n        tabPanelChild: []\r\n      }\r\n      let assignedRoles = detail.managerRoles.filter(m => m.indexOf('User') >= 0);\r\n      if (assignedRoles.some(s => s === 'Edit User Details') && !assignedRoles.some(s => s === 'View All Users')) {\r\n        assignedRoles.push('View All Users');\r\n      }\r\n      assignedRoles = assignedRoles.sort().reverse();\r\n      for (let i = 0; i < assignedRoles.length; i++) {\r\n        const role = assignedRoles[i];\r\n        if (role === 'View All Users') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span disabled className='labelColor'>VIEW ALL USERS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <ViewAllUsers handleRowClicked={this.handleRowClicked} />\r\n          })\r\n        } else if (role === 'Add New User') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>ADD NEW USER</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <AddNewUser handleBlocking={this.handleBlocking} />\r\n          })\r\n        } else if (role === 'Edit User Details') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>EDIT USER DETAILS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <AddNewUser handleBlocking={this.handleBlocking} onRowClickedData={this.state.onRowClickedData} />\r\n          })\r\n        }\r\n      }\r\n\r\n      return tabs;\r\n    } else {\r\n      const tabs = {\r\n        tabsLabel: [{\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span disabled className='labelColor'>VIEW ALL USERS</span>\r\n        }, {\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>ADD NEW USER</span>\r\n        }, {\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>EDIT USER DETAILS</span>\r\n        },\r\n        ],\r\n        tabPanelChild:\r\n          [{\r\n            child: <ViewAllUsers handleRowClicked={this.handleRowClicked} />\r\n          }, {\r\n            child: <AddNewUser handleBlocking={this.handleBlocking} />\r\n          }, {\r\n            child: <AddNewUser handleBlocking={this.handleBlocking} onRowClickedData={this.state.onRowClickedData} />\r\n          }]\r\n      }\r\n\r\n      return tabs;\r\n    }\r\n  }\r\n\r\n  /* tab data end */\r\n\r\n  render() {\r\n    const { confAlertDetails, alertDetails, isDirty, localClickedtTab } = this.state;\r\n    return (\r\n      <div className='my-profile'>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <ScrollableTabsButtonAuto paper={true} tabs={this.getTabData()} onChange={this.handleIconDetail} TabIndicatorProps={{ style: { background: '#e37933' } }} isDirty={isDirty} newTabVal={localClickedtTab} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Users);\r\n","import React, { Component } from 'react';\r\nimport { Paper, Grid, Button, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport api from '../../api';\r\n\r\nclass AddNewVessel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDirty: false,\r\n      isTyped: false,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      vesselDetails: props && props.onRowClickedData ? { ...props.onRowClickedData } : {},\r\n      isEditPage: props && props.onRowClickedData && Object.keys(props.onRowClickedData).length ? true : false,\r\n      validity: {},\r\n      isformValid: true\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props && this.props.onRowClickedData) {\r\n      this.updateForm(this.props.onRowClickedData, true);\r\n    }\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    confAlertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: '',\r\n      buttonTitle: '',\r\n    },\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  handleSuccessAlert = async e => {\r\n    e.preventDefault();\r\n    const { isDirty, vesselDetails, isEditPage } = this.state;\r\n    if (isDirty) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    let resp = {};\r\n    if (isEditPage) {\r\n      resp = await api.updateVesselDetails(vesselDetails);\r\n      if (resp.data.status) {\r\n        this.props.handleBlocking(false);\r\n        this.setState({\r\n          isDirty: true,\r\n          isTyped: false,\r\n          confAlertDetails: {\r\n            openAlert: false,\r\n            titleMsg: '',\r\n            descrMsg: '',\r\n            buttonTitle: '',\r\n          },\r\n          isEditPage: true,\r\n          validity: {},\r\n          isformValid: true,\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Success !!',\r\n            descrMsg: 'Updated vessel details successfully..'\r\n          },\r\n        });\r\n      } else {\r\n        this.setState({\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Error !!',\r\n            descrMsg: 'Failed to update vessel details...'\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      resp = await api.insertVesselDetails({ vesselDetails });\r\n      this.props.handleBlocking(false);\r\n      if (resp.data.status) {\r\n        this.setState({\r\n          isDirty: false,\r\n          isTyped: false,\r\n          confAlertDetails: {\r\n            openAlert: false,\r\n            titleMsg: '',\r\n            descrMsg: '',\r\n            buttonTitle: '',\r\n          },\r\n          vesselDetails: {},\r\n          validity: {},\r\n          isformValid: true,\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Success !!',\r\n            descrMsg: 'Added new vessel successfully..'\r\n          },\r\n        });\r\n      } else {\r\n        this.setState({\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Error !!',\r\n            descrMsg: 'Failed to add new user...'\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.isEditPage) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Update Vessel Details?',\r\n          descrMsg: 'Do you want to submit?',\r\n          buttonTitle: 'Submit'\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Add New Vessel ?',\r\n          descrMsg: 'Do you want to submit?',\r\n          buttonTitle: 'Submit'\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { id, value, name } = e.target;\r\n    let { vesselDetails, isformValid, validity, isTyped } = this.state;\r\n    if (typeof e.target.getAttribute === 'function') {\r\n      let validationtype = e.target.getAttribute('type');\r\n      if (validationtype) {\r\n        const resp = miscUtils.isFieldValid(validationtype, value, validity, id);\r\n        isformValid = !resp.v;\r\n        this.setState({\r\n          validity: resp.validity,\r\n          validationtype,\r\n          isformValid: !resp.v\r\n        });\r\n      }\r\n    }\r\n    isTyped = true;\r\n    if (id) {\r\n      Object.assign(vesselDetails, { [id]: value });\r\n    } else {\r\n      Object.assign(vesselDetails, { [name]: value });\r\n    }\r\n\r\n    this.updateForm(vesselDetails, isformValid, isTyped);\r\n  };\r\n\r\n  updateForm(vesselDetails, isformValid, isTyped) {\r\n    const { vesselName, IMO, DWT } = vesselDetails\r\n    if (isformValid && vesselName && IMO && DWT) {\r\n      this.setState({ isDirty: true, vesselDetails, isTyped });\r\n    } else {\r\n      this.setState({ isDirty: false, vesselDetails, isTyped });\r\n    }\r\n\r\n    if (isTyped) {\r\n      this.props.handleBlocking(true);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { validity, isDirty, isformValid, confAlertDetails, vesselDetails, alertDetails, isEditPage } = this.state;\r\n    let { vesselName, IMO, DWT, flag, vesselType, built, draft, LOA, beam, GRT, NRT, TPC, holdsHatches, grainCapacity, baleCapacity, cranes, grabs } = vesselDetails;\r\n    return (\r\n      <form autoComplete=\"off\" noValidate >\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <Paper style={{ marginTop: '2%' }}>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 20 }}\r\n                disabled={isEditPage}\r\n                error={validity && validity.vesselName && validity.vesselName.isInvalid}\r\n                id='vesselName'\r\n                label='Vessel Name *'\r\n                type='aplhaNumeric*'\r\n                onChange={this.handleChange}\r\n                value={vesselName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.vesselName && validity.vesselName.isInvalid ? miscUtils.getErrorMessage(validity.vesselName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 15 }}\r\n                disabled={isEditPage}\r\n                error={validity && validity.IMO && validity.IMO.isInvalid}\r\n                id='IMO'\r\n                label='IMO *'\r\n                type='numeric*'\r\n                onChange={this.handleChange}\r\n                value={IMO || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.IMO && validity.IMO.isInvalid ? miscUtils.getErrorMessage(validity.IMO.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                disabled={isEditPage}\r\n                error={validity && validity.DWT && validity.DWT.isInvalid}\r\n                id='DWT'\r\n                label='DWT (MT) *'\r\n                type='decimal*'\r\n                onChange={this.handleChange}\r\n                value={DWT || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.DWT && validity.DWT.isInvalid ? miscUtils.getErrorMessage(validity.DWT.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 20 }}\r\n                error={validity && validity.flag && validity.flag.isInvalid}\r\n                id='flag'\r\n                label='Flag'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={flag || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.flag && validity.flag.isInvalid ? miscUtils.getErrorMessage(validity.flag.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.vesselType && validity.vesselType.isInvalid}\r\n                id='vesselType'\r\n                label='Vessel Type'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={vesselType || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.vesselType && validity.vesselType.isInvalid ? miscUtils.getErrorMessage(validity.vesselType.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 4 }}\r\n                error={validity && validity.built && validity.built.isInvalid}\r\n                id='built'\r\n                label='Built Year'\r\n                type='numeric'\r\n                onChange={this.handleChange}\r\n                value={built || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.built && validity.built.isInvalid ? miscUtils.getErrorMessage(validity.built.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 8 }}\r\n                error={validity && validity.draft && validity.draft.isInvalid}\r\n                id='draft'\r\n                label='Draft (M)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={draft || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.draft && validity.draft.isInvalid ? miscUtils.getErrorMessage(validity.draft.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.LOA && validity.LOA.isInvalid}\r\n                id='LOA'\r\n                label='LOA (M)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={LOA || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.LOA && validity.LOA.isInvalid ? miscUtils.getErrorMessage(validity.LOA.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.beam && validity.beam.isInvalid}\r\n                id='beam'\r\n                label='Beam (M)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={beam || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.beam && validity.beam.isInvalid ? miscUtils.getErrorMessage(validity.beam.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.GRT && validity.GRT.isInvalid}\r\n                id='GRT'\r\n                label='GRT (MT)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={GRT || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.GRT && validity.GRT.isInvalid ? miscUtils.getErrorMessage(validity.GRT.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.NRT && validity.NRT.isInvalid}\r\n                id='NRT'\r\n                label='NRT (MT)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={NRT || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.NRT && validity.NRT.isInvalid ? miscUtils.getErrorMessage(validity.NRT.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.TPC && validity.TPC.isInvalid}\r\n                id='TPC'\r\n                label='TPC (MT/CBM)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={TPC || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.TPC && validity.TPC.isInvalid ? miscUtils.getErrorMessage(validity.TPC.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.holdsHatches && validity.holdsHatches.isInvalid}\r\n                id='holdsHatches'\r\n                label='Holds/Hatches'\r\n                type='allCharacters'\r\n                onChange={this.handleChange}\r\n                value={holdsHatches || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.holdsHatches && validity.holdsHatches.isInvalid ? miscUtils.getErrorMessage(validity.holdsHatches.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.grainCapacity && validity.grainCapacity.isInvalid}\r\n                id='grainCapacity'\r\n                label='Grain Capacity (CBM)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={grainCapacity || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.grainCapacity && validity.grainCapacity.isInvalid ? miscUtils.getErrorMessage(validity.grainCapacity.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.baleCapacity && validity.baleCapacity.isInvalid}\r\n                id='baleCapacity'\r\n                label='Bale Capacity (CBM)'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={baleCapacity || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.baleCapacity && validity.baleCapacity.isInvalid ? miscUtils.getErrorMessage(validity.baleCapacity.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.cranes && validity.cranes.isInvalid}\r\n                id='cranes'\r\n                label='Cranes (MT)'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={cranes || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.cranes && validity.cranes.isInvalid ? miscUtils.getErrorMessage(validity.cranes.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.grabs && validity.grabs.isInvalid}\r\n                id='grabs'\r\n                label='Grabs (CBM)'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={grabs || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.grabs && validity.grabs.isInvalid ? miscUtils.getErrorMessage(validity.grabs.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            className={`${(isDirty && isformValid) ? 'white-color' : 'grey-color'} btn-save`}\r\n            variant='contained'\r\n            size='large'\r\n            startIcon={<SaveIcon />}\r\n            disabled={!(isDirty && isformValid)}\r\n            onClick={this.handleSubmit}> Submit  </Button>\r\n        </Paper>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewVessel;\r\n","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport api from '../../api';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction UserTable(props) {\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  let [columns, setColumns] = React.useState([]);\r\n  let [data, setData] = React.useState([]);\r\n\r\n  if (props.columns && props.columns.length && !columns.length) {\r\n    setColumns(props.columns);\r\n  }\r\n\r\n  if (props.data && props.data.length && !data.length) {\r\n    setData(props.data)\r\n  }\r\n\r\n  const showDelete = () => {\r\n    const { detail } = props;\r\n    const { managerRoles } = detail;\r\n    if (detail && detail.role === 'Admin') {\r\n      return true;\r\n    } else if (detail && detail.role === 'Manager') {\r\n      if (managerRoles && managerRoles.length) {\r\n        return managerRoles.some(s => s === 'Edit Vessel Details');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MaterialTable\r\n      title={props.title}\r\n      columns={props.columns}\r\n      data={props.data}\r\n      icons={tableIcons}\r\n      editable=\r\n      {showDelete() ?\r\n        {\r\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\r\n            resolve();\r\n            props.onRowClick(newData, oldData);\r\n          }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setData(async prevState => {\r\n                  const data = [...prevState];\r\n                  let resp = await api.deleteVesselDetails(oldData['_id']);\r\n                  if (resp.data.status) {\r\n                    window.location.reload();\r\n                    // data.splice(data.indexOf(oldData), 1);\r\n                  }\r\n                  return data;\r\n                });\r\n              }, 600);\r\n            }),\r\n        } : null}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(UserTable);","import React, { Component } from 'react';\r\nimport Alert from '../../utils/alert';\r\nimport UserTable from './userTable';\r\nimport api from '../../api';\r\n\r\nclass ViewAllVessels extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    }\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n  }\r\n\r\n  componentDidMount = async e => {\r\n    const res = await api.getAllVesselsDetails();\r\n    if (res.data.status) {\r\n      this.setState({ vesselList: res.data.vesselList });\r\n    }\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  onRowClick = (event, rowData) => {\r\n    this.props.handleRowClicked(rowData);\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      { field: 'vesselName', title: 'Vessel Name', editable: 'never' },\r\n      { field: 'IMO', title: 'IMO', editable: 'never' },\r\n      { field: 'DWT', title: ' DWT (MT)', editable: 'never' },\r\n      { field: 'flag', title: 'Flag', editable: 'never' },\r\n      { field: 'vesselType', title: 'Vessel Type', editable: 'never' },\r\n      { field: 'built', title: 'Built Year', editable: 'never' },\r\n      { field: 'draft', title: 'Draft', editable: 'never' },\r\n      { field: 'LOA', title: 'LOA (M)', editable: 'never' },\r\n      { field: 'beam', title: 'Beam (M)', editable: 'never' },\r\n      { field: 'GRT', title: 'GRT (MT)', editable: 'never' },\r\n      { field: 'NRT', title: 'NRT (MT)', editable: 'never' },\r\n      { field: 'TPC', title: 'TPC (MT/CBM)', editable: 'never' },\r\n      { field: 'holdsHatches', title: 'Holds/Hatches', editable: 'never' },\r\n      { field: 'grainCapacity', title: 'Grain Capacity (CBM)', editable: 'never' },\r\n      { field: 'baleCapacity', title: 'Bale Capacity (CBM)', editable: 'never' },\r\n      { field: 'cranes', title: 'Cranes (MT)', editable: 'never' },\r\n      { field: 'grabs', title: 'Grabs (CBM)', editable: 'never' },\r\n      // { field: 'otherFields', title: 'Other Details' }\r\n    ];\r\n    const { vesselList, alertDetails } = this.state;\r\n    return (\r\n      <form>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <UserTable title={'View All Vessels'} data={vesselList} columns={columns} onRowClick={this.onRowClick} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewAllVessels;","import React, { Component } from 'react';\r\nimport ScrollableTabsButtonAuto from '../sub-component/ScrollableTabsButtonAuto';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport AddNewVessel from './Form_AddNewVessel';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport ViewAllVessels from './Form_ViewAllVessels';\r\n\r\nclass Vessel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n      isDirty: false,\r\n      localClickedtTab: 0,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n\r\n    };\r\n\r\n    this.handleBlocking = this.handleBlocking.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n    this.handleRowClicked = this.handleRowClicked.bind(this);\r\n  }\r\n\r\n  handleIconDetail = (event, value) => {\r\n    const { detail } = this.props;\r\n    let localValue = 2;\r\n    if (detail && detail.role === 'Manager' && detail.managerRoles.some(m => m === 'Edit Vessel Details')) {\r\n      localValue = 1;\r\n    }\r\n    if (value === localValue) {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Sorry !!',\r\n          descrMsg: 'You cannot directly click the tab.  Please click the edit icon from the table to edit...'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ onRowClickedData: {} });\r\n    if (value !== this.state.activeTabIndex) {\r\n      const { isDirty } = this.state;\r\n      if (isDirty) {\r\n        this.setState({\r\n          confAlertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Discard Changes?',\r\n            descrMsg: '  You have unsaved changes. Do you want to discard?',\r\n            buttonTitle: ' Discard'\r\n          },\r\n          localClickedtTab: value\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    this.setState({ activeTabIndex: value, localClickedtTab: value });\r\n    return true;\r\n  };\r\n\r\n  handleCancelAlert = () => {\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      localClickedtTab: this.state.activeTabIndex\r\n    })\r\n  };\r\n\r\n  handleSuccessAlert = e => {\r\n    e.preventDefault();\r\n    const { localClickedtTab, activeTabIndex, isDirty } = this.state\r\n    if (localClickedtTab !== activeTabIndex && isDirty) {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n      this.setState({ activeTabIndex: localClickedtTab });\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleBlocking = e => this.setState({ isDirty: e });\r\n  handleRowClicked = e => {\r\n    const { detail } = this.props;\r\n    let localValue = 2;\r\n    if (detail && detail.role === 'Manager') {\r\n      const isPresent = detail.managerRoles.some(m => m === 'Edit Vessel Details');\r\n      if (!isPresent) {\r\n        return;\r\n      } else if (isPresent) {\r\n        localValue = 1\r\n      }\r\n    } else {\r\n      localValue = 2\r\n    }\r\n\r\n    this.setState({ activeTabIndex: localValue, localClickedtTab: localValue, onRowClickedData: e });\r\n  };\r\n\r\n  getTabData = () => {\r\n    if (this.props && this.props.detail && this.props.detail.role === 'Manager') {\r\n      const tabs = {\r\n        tabsLabel: [],\r\n        tabPanelChild: []\r\n      }\r\n      let assignedRoles = this.props.detail.managerRoles.filter(m => m.indexOf('Vessel') >= 0);\r\n      if (assignedRoles.some(s => s === 'Edit Vessel Details') && !assignedRoles.some(s => s === 'View All Vessels')) {\r\n        assignedRoles.push('View All Vessels');\r\n      }\r\n      assignedRoles = assignedRoles.sort().reverse();\r\n      for (let i = 0; i < assignedRoles.length; i++) {\r\n        const role = assignedRoles[i];\r\n        if (role === 'View All Vessels') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>VIEW ALL VESSELS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <ViewAllVessels handleRowClicked={this.handleRowClicked} />\r\n          })\r\n        } else if (role === 'Add New Vessel') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>ADD NEW VESSEL</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <AddNewVessel handleBlocking={this.handleBlocking} />\r\n          })\r\n        } else if (role === 'Edit Vessel Details') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>EDIT VESSEL DETAILS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <AddNewVessel handleBlocking={this.handleBlocking} onRowClickedData={this.state.onRowClickedData} />\r\n          })\r\n        }\r\n      }\r\n\r\n      return tabs;\r\n    } else {\r\n      const tabs = {\r\n        tabsLabel: [{\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>VIEW ALL VESSELS</span>\r\n        }, {\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>ADD NEW VESSEL</span>\r\n        }, {\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>EDIT VESSEL DETAILS</span>\r\n        },\r\n        ],\r\n        tabPanelChild:\r\n          [{\r\n            child: <ViewAllVessels handleRowClicked={this.handleRowClicked} />\r\n          },\r\n          {\r\n            child: <AddNewVessel handleBlocking={this.handleBlocking} />\r\n          },\r\n          {\r\n            child: <AddNewVessel handleBlocking={this.handleBlocking} onRowClickedData={this.state.onRowClickedData} />\r\n          }]\r\n      }\r\n\r\n      return tabs;\r\n    }\r\n  }\r\n\r\n  /* tab data end */\r\n\r\n  render() {\r\n    const { confAlertDetails, alertDetails, isDirty, localClickedtTab } = this.state;\r\n    return (\r\n      <div className='my-profile'>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <ScrollableTabsButtonAuto paper={true} tabs={this.getTabData()} onChange={this.handleIconDetail} TabIndicatorProps={{ style: { background: '#e37933' } }} isDirty={isDirty} newTabVal={localClickedtTab} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Vessel);\r\n","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport api from '../../api';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction UserTable(props) {\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  let [columns, setColumns] = React.useState([]);\r\n  let [data, setData] = React.useState([]);\r\n\r\n  if (props.columns && props.columns.length && !columns.length) {\r\n    setColumns(props.columns);\r\n  }\r\n\r\n  if (props.data && props.data.length && !data.length) {\r\n    setData(props.data)\r\n  }\r\n\r\n  const showDelete = () => {\r\n    const { detail } = props;\r\n    const { managerRoles } = detail;\r\n    if (detail && detail.role === 'Admin') {\r\n      return true;\r\n    } else if (detail && detail.role === 'Manager') {\r\n      if (managerRoles && managerRoles.length) {\r\n        return managerRoles.some(s => s === 'Edit Voyage Details');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MaterialTable\r\n      title={props.title}\r\n      columns={props.columns}\r\n      data={props.data}\r\n      icons={tableIcons}\r\n      editable=\r\n      {showDelete() ?\r\n        {\r\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\r\n            resolve();\r\n            props.onRowClick(newData, oldData);\r\n          }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise(resolve => {\r\n              setTimeout(() => {\r\n                resolve();\r\n                setData(async prevState => {\r\n                  const data = [...prevState];\r\n                  let resp = await api.deleteVoyageDetails(oldData['_id']);\r\n                  if (resp.data.status) {\r\n                    window.location.reload();\r\n                    // data.splice(data.indexOf(oldData), 1);\r\n                  }\r\n                  return data;\r\n                });\r\n              }, 600);\r\n            }),\r\n        } : null}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(UserTable);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Alert from '../../utils/alert';\r\nimport UserTable from './userTable';\r\nimport api from '../../api';\r\nimport { array } from 'prop-types';\r\n\r\nclass ViewVoyageDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    }\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n  }\r\n  checkandRemoveObject(data) {\r\n    let updatedArray = [];\r\n    updatedArray = data.map((item) => {\r\n      let udpatedItem = '';\r\n      if (item.otherFields) {\r\n        Object.keys(item.otherFields).forEach(function (index, value) {\r\n          udpatedItem = udpatedItem + index + \":\" + item.otherFields[index] + '|'\r\n        });\r\n        item.otherFields = udpatedItem;\r\n      }\r\n    })\r\n    return data;\r\n  }\r\n\r\n  checkandRemoveObject(data) {\r\n    data.map((item) => {\r\n      let udpatedItem = '';\r\n      if (item.otherFields) {\r\n        Object.keys(item.otherFields).forEach((index, value) => {\r\n          udpatedItem = udpatedItem + index + ' = ' + item.otherFields[index] + ' | '\r\n        });\r\n        item.otherFields = udpatedItem.trim().substring(0, udpatedItem.trim().length - 1);\r\n      }\r\n    })\r\n    return data;\r\n  }\r\n\r\n  componentDidMount = async e => {\r\n    if (this.props.clientData) {\r\n      let arrayItem = [];\r\n      arrayItem.push(this.props.clientData.detail);\r\n      const updatedResult = this.checkandRemoveObject(arrayItem);\r\n      this.setState({ voyageList: updatedResult });\r\n    }\r\n    else {\r\n      const res = await api.getAllVoyageDetails();\r\n      if (res.data.status) {\r\n        const updatedResult = this.checkandRemoveObject(res.data.voyageList);\r\n        this.setState({ voyageList: updatedResult });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  onRowClick = (event, rowData) => {\r\n    this.props.handleRowClicked(rowData);\r\n  }\r\n\r\n  render() {\r\n    let columns = [\r\n      { field: 'chartererName', title: 'Charterer Name', editable: 'never' },\r\n      { field: 'vesselName', title: 'Vessel Name', editable: 'never' },\r\n      { field: 'cpDate', title: 'CP Date', editable: 'never' },\r\n      { field: 'vesselSize', title: 'Vessel Size', editable: 'never' },\r\n      { field: 'loadPort', title: 'Load Port', editable: 'never' },\r\n      { field: 'dischargePort', title: 'Discharge Port', editable: 'never' },\r\n      { field: 'cargo', title: 'Cargo', editable: 'never' },\r\n      { field: 'cargoIntake', title: 'Cargo Intake', editable: 'never' },\r\n      { field: 'ownerName', title: 'Owner Name', editable: 'never' },\r\n      { field: 'shipper', title: 'Shipper', editable: 'never' },\r\n      { field: 'loadPortAgent', title: 'Load Port Agent', editable: 'never' },\r\n      { field: 'dischargePortAgent', title: 'Discharge Port Agent', editable: 'never' },\r\n      { field: 'receiver', title: 'Receiver', editable: 'never' },\r\n      { field: 'onHireSurveyor', title: 'On Hire Surveyor', editable: 'never' },\r\n      { field: 'offHireSurveyor', title: 'Off Hire Surveyor', editable: 'never' },\r\n      { field: 'bunkerSupplier', title: 'Bunker Supplier', editable: 'never' },\r\n      { field: 'bunkerTrader', title: 'Bunker Trader', editable: 'never' },\r\n      { field: 'pniInsurance', title: 'PNI Insurance', editable: 'never' },\r\n      { field: 'weatherRoutingCompany', title: 'Weather Routing Company', editable: 'never' },\r\n      { field: 'otherFields', title: 'Other Details', editable: 'never' },\r\n      { field: 'fieldVisibility', title: 'Visible', editable: 'never' }\r\n    ];\r\n\r\n    if (this.props && this.props.clientData && this.props.clientData.detail) {\r\n      let localColumns = [];\r\n      localColumns.push({ field: \"chartererName\", title: \"Charterer Name\", editable: \"never\" },\r\n        { field: \"vesselName\", title: \"Vessel Name\", editable: \"never\" },\r\n        { field: \"cpDate\", title: \"CP Date\", editable: \"never\" });\r\n      for (let i = 0; i < this.props.clientData.fieldVisibility.length; i++) {\r\n        let label = this.props.clientData.fieldVisibility[i];\r\n        localColumns.push(columns.find(f => f.title.trim() === label.trim()));\r\n      }\r\n\r\n      columns = localColumns;\r\n    }\r\n\r\n    const { voyageList, alertDetails } = this.state;\r\n    return (\r\n      <form>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <UserTable title={'View Voyage Details'} data={voyageList} columns={columns} onRowClick={this.onRowClick} />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewVoyageDetails;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { Paper, Grid, Button, TextField } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport './style.scss';\r\nimport miscUtils from '../../utils/miscUtils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SimplePopover(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [validity, setValidity] = React.useState({});\r\n    const [isformValid, setIsformValid] = React.useState(false);\r\n    const [otherFields, setOtherFields] = React.useState({});\r\n    const [validationtype, setValidationtype] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        const { id, value, name } = e.target;\r\n        let validity = validity;\r\n        let is;\r\n        // let { isformValid, validity, otherFields } = localState;\r\n        if (typeof e.target.getAttribute === 'function') {\r\n            let validationtype = e.target.getAttribute('type');\r\n            if (validationtype) {\r\n                const resp = miscUtils.isFieldValid(validationtype, value, validity, id);\r\n                isformValid = !resp.v;\r\n                setValidity(resp.validity);\r\n                setValidationtype(validationtype);\r\n                setIsformValid(!resp.v);\r\n            }\r\n        }\r\n\r\n        if (id) {\r\n            Object.assign(otherFields, { [id]: value });\r\n        } else {\r\n            Object.assign(otherFields, { [name]: value });\r\n        }\r\n\r\n        // localState.otherFields = otherFields;\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n    // const { validity } = localState;\r\n    let { fieldLabel } = validity;\r\n    return (\r\n        <div>\r\n            <IconButton onClick={handleClick} aria-describedby={id} aria-label='Add' className='btn-edit'><AddIcon /></IconButton>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }} >\r\n                <form id='newFieldForm' autoComplete=\"off\" noValidate onSubmit={props.submitNewFieldDetails}>\r\n                    <Paper style={{ margin: '1%' }}>\r\n                        <Grid style={{ marginLeft: '25%' }} container>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    inputProps={{ maxLength: 25 }}\r\n                                    error={validity && validity.fieldLabel && validity.fieldLabel.isInvalid}\r\n                                    id='fieldLabel'\r\n                                    label='Field Label *'\r\n                                    type='aplhaNumeric*'\r\n                                    onChange={handleChange}\r\n                                    value={fieldLabel || ''}\r\n                                    autoComplete='off'\r\n                                    helperText={validity && validity.fieldLabel && validity.fieldLabel.isInvalid ? miscUtils.getErrorMessage(validity.fieldLabel.validationtype) : ''}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    inputProps={{ maxLength: 50 }}\r\n                                    id='fieldValue'\r\n                                    label='Field Value'\r\n                                    autoComplete='off'\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            style={{ marginLeft: '40%' }}\r\n                            className='white-color btn-save'\r\n                            type='submit'\r\n                            variant='contained'\r\n                            size='small'\r\n                            startIcon={<SaveIcon />}\r\n                        > Save  </Button>\r\n                    </Paper>\r\n                </form>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Paper, Grid, Button, InputLabel, Select, Checkbox, ListItemText, MenuItem, Input, TextField } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\r\nimport constants from '../../utils/constants';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport api from '../../api';\r\nimport AddDynamicField from '../common/AddDynamicField';\r\n\r\nclass FillVoyageDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDirty: false,\r\n      isTyped: false,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      voyageDetails: props && props.onRowClickedData ? { ...props.onRowClickedData } : {},\r\n      isEditPage: props && props.onRowClickedData && Object.keys(props.onRowClickedData).length ? true : false,\r\n      validity: {},\r\n      isformValid: true,\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    confAlertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: '',\r\n      buttonTitle: '',\r\n    },\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  componentWillMount() {\r\n    this.getAllClientList();\r\n    this.getAllVesselsList();\r\n    if (this.props && this.props.onRowClickedData) {\r\n      this.updateForm(this.props.onRowClickedData, true);\r\n    }\r\n  }\r\n\r\n  getAllClientList = async () => {\r\n    const res = await api.getAllClientList();\r\n    if (res.data.status) {\r\n      const clientList = res.data.clientList.sort();\r\n      this.setState({ clientList });\r\n    } else {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getAllVesselsList = async () => {\r\n    const res = await api.getAllVesselsList();\r\n    if (res.data.status) {\r\n      const vesselList = res.data.vesselList.map(m => m.vesselName + '_' + m.DWT).sort();\r\n      this.setState({ vesselList });\r\n    } else {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDateFieldChange = value => {\r\n    if (!value || value.toString() === 'Invalid Date' || value > new Date()) {\r\n      return;\r\n    }\r\n    const voyageDetails = this.state.voyageDetails;\r\n    Object.assign(voyageDetails, { cpDate: value });\r\n    this.updateForm(voyageDetails);\r\n  };\r\n\r\n  handleSuccessAlert = async e => {\r\n    e.preventDefault();\r\n    const { isDirty, voyageDetails, isEditPage } = this.state;\r\n    const { chartererName, vesselName, cpDate } = voyageDetails;\r\n    if (isDirty) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    let resp = {};\r\n    if (isEditPage) {\r\n      resp = await api.updateVoyageDetails(voyageDetails);\r\n      if (resp.data.status) {\r\n        this.props.handleBlocking(false);\r\n        this.setState({\r\n          isDirty: true,\r\n          isTyped: false,\r\n          confAlertDetails: {\r\n            openAlert: false,\r\n            titleMsg: '',\r\n            descrMsg: '',\r\n            buttonTitle: '',\r\n          },\r\n          isEditPage: true,\r\n          validity: {},\r\n          isformValid: true,\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Success !!',\r\n            descrMsg: 'Updated voyage details successfully..'\r\n          },\r\n        });\r\n      } else {\r\n        this.setState({\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Error !!',\r\n            descrMsg: 'Failed to update voyage details...'\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      resp = await api.insertPerformanceData({ cpDate, vesselName, chartererName, isDetailsFilled: false });\r\n      resp = await api.insertVoyageData({ voyageDetails });\r\n      this.props.handleBlocking(false);\r\n      if (resp.data.status) {\r\n        this.setState({\r\n          isDirty: false,\r\n          isTyped: false,\r\n          confAlertDetails: {\r\n            openAlert: false,\r\n            titleMsg: '',\r\n            descrMsg: '',\r\n            buttonTitle: '',\r\n          },\r\n          voyageDetails: {},\r\n          validity: {},\r\n          isformValid: true,\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Success !!',\r\n            descrMsg: 'Added voyage details successfully..'\r\n          },\r\n        });\r\n      } else {\r\n        this.setState({\r\n          alertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Error !!',\r\n            descrMsg: 'Failed to add voyage details...'\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.isEditPage) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Update Voyage Details ?',\r\n          descrMsg: 'Do you want to submit?',\r\n          buttonTitle: 'Submit'\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Add Voyage Details ?',\r\n          descrMsg: 'Do you want to submit?',\r\n          buttonTitle: 'Submit'\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    e.preventDefault();\r\n    const { id, value, name } = e.target;\r\n    let { voyageDetails, isformValid, validity, isTyped } = this.state;\r\n    if (typeof e.target.getAttribute === 'function') {\r\n      let validationtype = e.target.getAttribute('type');\r\n      if (validationtype) {\r\n        const resp = miscUtils.isFieldValid(validationtype, value, validity, id);\r\n        isformValid = !resp.v;\r\n        this.setState({\r\n          validity: resp.validity,\r\n          validationtype,\r\n          isformValid: !resp.v\r\n        });\r\n      }\r\n    }\r\n    isTyped = true;\r\n    if (id) {\r\n      Object.assign(voyageDetails, { [id]: value });\r\n    } else {\r\n      Object.assign(voyageDetails, { [name]: value });\r\n    }\r\n\r\n    this.updateForm(voyageDetails, isformValid, isTyped);\r\n  };\r\n\r\n  submitNewFieldDetails = e => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    const inputs = e.target.querySelectorAll('input');\r\n    if (inputs && inputs.length) {\r\n      const { voyageDetails } = this.state;\r\n      let { otherFields } = voyageDetails;\r\n      if (!otherFields) {\r\n        otherFields = {};\r\n      }\r\n      Object.assign(otherFields, { [inputs[0].value]: inputs[1].value });\r\n      this.setState({ voyageDetails });\r\n      document.getElementById('newFieldForm').reset();\r\n      // this.displayOtherFields();\r\n    }\r\n  };\r\n\r\n  updateForm(voyageDetails, isformValid, isTyped) {\r\n    let { chartererName, vesselName, cpDate, dischargePort, loadPort, fieldVisibility } = voyageDetails;\r\n    if (!cpDate) {\r\n      cpDate = new Date();\r\n      Object.assign(voyageDetails, { cpDate });\r\n    }\r\n    if (isformValid && chartererName && vesselName && cpDate && dischargePort && loadPort && fieldVisibility && fieldVisibility.length) {\r\n      this.setState({ isDirty: true, voyageDetails, isTyped });\r\n    } else {\r\n      this.setState({ isDirty: false, voyageDetails, isTyped });\r\n    }\r\n\r\n    if (isTyped) {\r\n      this.props.handleBlocking(true);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { validity, isDirty, isformValid, confAlertDetails, voyageDetails, alertDetails, clientList, vesselList, isEditPage } = this.state;\r\n    let { chartererName, vesselName, cpDate, dischargePort, loadPort, vesselSize, cargoIntake, cargo, ownerName, shipper, pniInsurance, weatherRoutingCompany, loadPortAgent, dischargePortAgent, receiver, onHireSurveyor, offHireSurveyor, bunkerSupplier, bunkerTrader, fieldVisibility } = voyageDetails;\r\n    if (!fieldVisibility) {\r\n      fieldVisibility = [];\r\n    }\r\n    return (\r\n      <form autoComplete=\"off\" noValidate >\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <AddDynamicField submitNewFieldDetails={this.submitNewFieldDetails} />\r\n        <Paper style={{ marginTop: '2%' }}>\r\n          <Grid container>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Charterer Name *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                disabled={isEditPage}\r\n                autoWidth\r\n                id='chartererName'\r\n                name='chartererName'\r\n                value={chartererName || ''}\r\n                onChange={this.handleChange}>\r\n                {clientList && clientList.length ? miscUtils.getOptions(clientList) : []}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Vessel Name *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                disabled={isEditPage}\r\n                autoWidth\r\n                id='vesselName'\r\n                name='vesselName'\r\n                value={vesselName || ''}\r\n                onChange={this.handleChange}>\r\n                {vesselList && vesselList.length ? miscUtils.getOptions(vesselList) : []}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  className='field-select'\r\n                  disabled={isEditPage}\r\n                  format='MM/dd/yyyy'\r\n                  margin='normal'\r\n                  id='cpDate'\r\n                  label='CP Date *'\r\n                  value={cpDate}\r\n                  onChange={this.handleDateFieldChange}\r\n                  maxDate={new Date()}\r\n                  autoOk\r\n                  variant='inline'\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.vesselSize && validity.vesselSize.isInvalid}\r\n                id='vesselSize'\r\n                label='Vessel Size'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={vesselSize || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.vesselSize && validity.vesselSize.isInvalid ? miscUtils.getErrorMessage(validity.vesselSize.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.loadPort && validity.loadPort.isInvalid}\r\n                id='loadPort'\r\n                label='Load Port *'\r\n                type='aplhaNumeric*'\r\n                onChange={this.handleChange}\r\n                value={loadPort || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.loadPort && validity.loadPort.isInvalid ? miscUtils.getErrorMessage(validity.loadPort.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 25 }}\r\n                error={validity && validity.dischargePort && validity.dischargePort.isInvalid}\r\n                id='dischargePort'\r\n                label='Discharge Port *'\r\n                type='aplhaNumeric*'\r\n                onChange={this.handleChange}\r\n                value={dischargePort || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.dischargePort && validity.dischargePort.isInvalid ? miscUtils.getErrorMessage(validity.dischargePort.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 15 }}\r\n                error={validity && validity.cargo && validity.cargo.isInvalid}\r\n                id='cargo'\r\n                label='Cargo'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={cargo || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.cargo && validity.cargo.isInvalid ? miscUtils.getErrorMessage(validity.cargo.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                error={validity && validity.cargoIntake && validity.cargoIntake.isInvalid}\r\n                id='cargoIntake'\r\n                label='Cargo Intake'\r\n                type='decimal'\r\n                onChange={this.handleChange}\r\n                value={cargoIntake || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.cargoIntake && validity.cargoIntake.isInvalid ? miscUtils.getErrorMessage(validity.cargoIntake.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.ownerName && validity.ownerName.isInvalid}\r\n                id='ownerName'\r\n                label='Owner Name'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={ownerName || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.ownerName && validity.ownerName.isInvalid ? miscUtils.getErrorMessage(validity.ownerName.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.shipper && validity.shipper.isInvalid}\r\n                id='shipper'\r\n                label='Shipper'\r\n                type='aplhaNumeric'\r\n                onChange={this.handleChange}\r\n                value={shipper || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.shipper && validity.shipper.isInvalid ? miscUtils.getErrorMessage(validity.shipper.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.loadPortAgent && validity.loadPortAgent.isInvalid}\r\n                id='loadPortAgent'\r\n                label='Load Port Agent'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={loadPortAgent || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.loadPortAgent && validity.loadPortAgent.isInvalid ? miscUtils.getErrorMessage(validity.loadPortAgent.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.dischargePortAgent && validity.dischargePortAgent.isInvalid}\r\n                id='dischargePortAgent'\r\n                label='Discharge Port Agent'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={dischargePortAgent || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.dischargePortAgent && validity.dischargePortAgent.isInvalid ? miscUtils.getErrorMessage(validity.dischargePortAgent.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.receiver && validity.receiver.isInvalid}\r\n                id='receiver'\r\n                label='Receiver'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={receiver || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.receiver && validity.receiver.isInvalid ? miscUtils.getErrorMessage(validity.receiver.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.onHireSurveyor && validity.onHireSurveyor.isInvalid}\r\n                id='onHireSurveyor'\r\n                label='On Hire Surveyor'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={onHireSurveyor || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.onHireSurveyor && validity.onHireSurveyor.isInvalid ? miscUtils.getErrorMessage(validity.onHireSurveyor.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.offHireSurveyor && validity.offHireSurveyor.isInvalid}\r\n                id='offHireSurveyor'\r\n                label='Off Hire Surveyor'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={offHireSurveyor || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.offHireSurveyor && validity.offHireSurveyor.isInvalid ? miscUtils.getErrorMessage(validity.offHireSurveyor.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.bunkerSupplier && validity.bunkerSupplier.isInvalid}\r\n                id='bunkerSupplier'\r\n                label='Bunker Supplier'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={bunkerSupplier || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.bunkerSupplier && validity.bunkerSupplier.isInvalid ? miscUtils.getErrorMessage(validity.bunkerSupplier.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.bunkerTrader && validity.bunkerTrader.isInvalid}\r\n                id='bunkerTrader'\r\n                label='Bunker Trader'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={bunkerTrader || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.bunkerTrader && validity.bunkerTrader.isInvalid ? miscUtils.getErrorMessage(validity.bunkerTrader.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.pniInsurance && validity.pniInsurance.isInvalid}\r\n                id='pniInsurance'\r\n                label='PNI Insurance'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={pniInsurance || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.pniInsurance && validity.pniInsurance.isInvalid ? miscUtils.getErrorMessage(validity.pniInsurance.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <TextField\r\n                inputProps={{ maxLength: 30 }}\r\n                error={validity && validity.weatherRoutingCompany && validity.weatherRoutingCompany.isInvalid}\r\n                id='weatherRoutingCompany'\r\n                label='Weather Routing Co.'\r\n                type='onlyAlphabets'\r\n                onChange={this.handleChange}\r\n                value={weatherRoutingCompany || ''}\r\n                autoComplete='off'\r\n                helperText={validity && validity.weatherRoutingCompany && validity.weatherRoutingCompany.isInvalid ? miscUtils.getErrorMessage(validity.weatherRoutingCompany.validationtype) : ''}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id=\"demo-mutiple-checkbox-label\" className='inputLabels'>Select Client Visible *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId=\"demo-mutiple-checkbox-label\"\r\n                id=\"demo-mutiple-checkbox\"\r\n                multiple\r\n                value={fieldVisibility}\r\n                name='fieldVisibility'\r\n                onChange={this.handleChange}\r\n                input={<Input id=\"select-multiple-chip\" />}\r\n                renderValue={(selected) => selected.join(', ')}>\r\n                {constants.voyageFieldList.map((name) => (\r\n                  <MenuItem key={name} value={name}>\r\n                    <Checkbox checked={fieldVisibility.indexOf(name) > -1} />\r\n                    <ListItemText primary={name} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Button\r\n            className={`${(isDirty && isformValid) ? 'white-color' : 'grey-color'} btn-save`}\r\n            variant='contained'\r\n            size='large'\r\n            startIcon={<SaveIcon />}\r\n            disabled={!(isDirty && isformValid)}\r\n            onClick={this.handleSubmit}> Submit  </Button>\r\n        </Paper>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FillVoyageDetails;\r\n","import React, { Component } from 'react';\r\nimport ScrollableTabsButtonAuto from '../sub-component/ScrollableTabsButtonAuto';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport ViewVoyageDetails from './Form_ViewVoyageDetails';\r\nimport FillVoyageDetails from './Form_FillVoyageDetails';\r\n\r\nclass Voyage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n      isDirty: false,\r\n      localClickedtTab: 0,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    };\r\n\r\n    this.handleBlocking = this.handleBlocking.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n    this.handleRowClicked = this.handleRowClicked.bind(this);\r\n  }\r\n\r\n  handleIconDetail = (event, value) => {\r\n    const { detail } = this.props;\r\n    let localValue = 2;\r\n    if (detail && detail.role === 'Manager' && detail.managerRoles.some(m => m === 'Edit Voyage Details')) {\r\n      localValue = 1;\r\n    }\r\n    if (value === localValue) {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Sorry !!',\r\n          descrMsg: 'You cannot directly click the tab.  Please click the edit icon from the table to edit...'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ onRowClickedData: {} });\r\n    if (value !== this.state.activeTabIndex) {\r\n      const { isDirty } = this.state;\r\n      if (isDirty) {\r\n        this.setState({\r\n          confAlertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Discard Changes?',\r\n            descrMsg: '  You have unsaved changes. Do you want to discard?',\r\n            buttonTitle: ' Discard'\r\n          },\r\n          localClickedtTab: value\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    this.setState({ activeTabIndex: value, localClickedtTab: value });\r\n    return true;\r\n  };\r\n\r\n  handleCancelAlert = () => {\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      localClickedtTab: this.state.activeTabIndex\r\n    })\r\n  };\r\n\r\n  handleSuccessAlert = e => {\r\n    e.preventDefault();\r\n    const { localClickedtTab, activeTabIndex, isDirty } = this.state\r\n    if (localClickedtTab !== activeTabIndex && isDirty) {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n      this.setState({ activeTabIndex: localClickedtTab });\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleBlocking = e => this.setState({ isDirty: e });\r\n  handleRowClicked = e => {\r\n    const { detail } = this.props;\r\n    let localValue = 2;\r\n    if (detail && detail.role === 'Manager') {\r\n      const isPresent = detail.managerRoles.some(m => m === 'Edit Voyage Details');\r\n      if (!isPresent) {\r\n        return;\r\n      } else if (isPresent) {\r\n        localValue = 1\r\n      }\r\n    } else {\r\n      localValue = 2\r\n    }\r\n\r\n    this.setState({ activeTabIndex: localValue, localClickedtTab: localValue, onRowClickedData: e });\r\n  };\r\n\r\n  getTabData = () => {\r\n    const clientData = this.props.history && this.props.history.location.state ? this.props.history.location.state : '';\r\n    if (this.props && this.props.detail && this.props.detail.role === 'Manager') {\r\n      const tabs = {\r\n        tabsLabel: [],\r\n        tabPanelChild: []\r\n      }\r\n      let assignedRoles = this.props.detail.managerRoles.filter(m => m.indexOf('Voyage') >= 0);\r\n      if (assignedRoles.some(s => s === 'Edit Voyage Details') && !assignedRoles.some(s => s === 'View All Voyage Details')) {\r\n        assignedRoles.push('View All Voyage Details');\r\n      }\r\n      assignedRoles = assignedRoles.sort().reverse();\r\n      for (let i = 0; i < assignedRoles.length; i++) {\r\n        const role = assignedRoles[i];\r\n        if (role === 'View All Voyage Details') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>VIEW VOYAGE DETAILS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <ViewVoyageDetails handleRowClicked={this.handleRowClicked} />\r\n          })\r\n        } else if (role === 'Fill Voyage Details') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>FILL VOYAGE DETAILS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <FillVoyageDetails handleBlocking={this.handleBlocking} />\r\n          })\r\n        } else if (role === 'Edit Voyage Details') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>EDIT VOYAGE DETAILS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <FillVoyageDetails handleBlocking={this.handleBlocking} onRowClickedData={this.state.onRowClickedData} />\r\n          })\r\n        }\r\n      }\r\n\r\n      return tabs;\r\n    } else if (this.props && this.props.detail && this.props.detail.role === 'Admin') {\r\n      const tabs = {\r\n        tabsLabel: [{\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>VIEW VOYAGE DETAILS</span>\r\n        }, {\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>FILL VOYAGE DETAILS</span>\r\n        }, {\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>EDIT VOYAGE DETAILS</span>\r\n        },\r\n        ],\r\n        tabPanelChild:\r\n          [{\r\n            child: <ViewVoyageDetails handleRowClicked={this.handleRowClicked} />\r\n          },\r\n          {\r\n            child: <FillVoyageDetails handleBlocking={this.handleBlocking} />\r\n          }, {\r\n            child: <FillVoyageDetails handleBlocking={this.handleBlocking} onRowClickedData={this.state.onRowClickedData} />\r\n          }]\r\n      }\r\n\r\n      return tabs;\r\n    } else if (this.props && this.props.detail && this.props.detail.role === 'Client') {\r\n      const tabs = {\r\n        tabsLabel: [{\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>VIEW VOYAGE DETAILS</span>\r\n        }\r\n        ],\r\n        tabPanelChild:\r\n          [{\r\n            child: <ViewVoyageDetails handleRowClicked={this.handleRowClicked} clientData={clientData} />\r\n          }]\r\n      }\r\n\r\n      return tabs;\r\n    }\r\n  }\r\n\r\n  /* tab data end */\r\n\r\n  render() {\r\n    const { confAlertDetails, alertDetails, isDirty, localClickedtTab } = this.state;\r\n    return (\r\n      <div className='my-profile'>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <ScrollableTabsButtonAuto paper={true} tabs={this.getTabData()} onChange={this.handleIconDetail} TabIndicatorProps={{ style: { background: '#e37933' } }} isDirty={isDirty} newTabVal={localClickedtTab} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Voyage);\r\n","import React, { Component } from 'react';\r\nexport default class PerformanceModule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getOriginalValue = this.getOriginalValue.bind(this);\r\n        this.getActualValue = this.getActualValue.bind(this);\r\n        this.state = {\r\n            original: 0,\r\n            actual: 0,\r\n            original$: 0,\r\n            actual$: 0\r\n        }\r\n    }\r\n\r\n    updateAndNotify() {\r\n        const { original, actual } = this.props && this.props.voyageDays && Object.keys(this.props.voyageDays) .length ? this.props.voyageDays : this.state;\r\n        const updateOriginal$ = this.commonFunction(original);\r\n        const updateActual$ = this.commonFunction(actual);\r\n        const localObj = {\r\n            original: original ? original : (this.props.voyageDays ? this.props.voyageDays.original : 0),\r\n            original$: updateOriginal$ ? updateOriginal$ : (this.props.voyageDays ? this.props.voyageDays.original$ : 0),\r\n            actual: actual ? actual : (this.props.voyageDays ? this.props.voyageDays.actual : 0),\r\n            actual$: updateActual$ ? updateActual$ : (this.props.voyageDays ? this.props.voyageDays.actual$ : 0)\r\n        }\r\n        this.setState({ ...localObj });\r\n\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        return { notifyRequired: (prevProps.tcHire !== this.props.tcHire || prevProps.addressCommission !== this.props.addressCommission) };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (snapshot.notifyRequired) {\r\n            this.updateAndNotify();\r\n        }\r\n    }\r\n\r\n    commonFunction(e) {\r\n        let { tcHire, addressCommission } = this.props\r\n        const value = parseFloat(e);\r\n        tcHire = parseFloat(tcHire);\r\n        addressCommission = parseFloat(addressCommission);\r\n        if (value >= 0 && tcHire >= 0 && addressCommission >= 0) {\r\n            const muitpleItem = tcHire * value;\r\n            return (muitpleItem - (addressCommission * (muitpleItem / 100))).toFixed(2);\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getOriginalValue(e) {\r\n        const value = e.target.value ? e.target.value : 0;\r\n        const updateOriginal$ = this.commonFunction(value);\r\n        const { actual, actual$ } = this.state;\r\n        const localObj = {\r\n            original: this.getValue(value),\r\n            original$: updateOriginal$ ? updateOriginal$ : 0,\r\n            actual,\r\n            actual$\r\n        }\r\n        this.setState({ ...localObj });\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getActualValue(e) {\r\n        const value = e.target.value ? e.target.value : 0;\r\n        const updateActual$ = this.commonFunction(value);\r\n        const { original, original$ } = this.state;\r\n        const localObj = {\r\n            original,\r\n            original$,\r\n            actual: this.getValue(value),\r\n            actual$: updateActual$\r\n        }\r\n\r\n        this.setState({ ...localObj });\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getValue(value) {\r\n        if (!value) return 0;\r\n        if (value[value.length - 1] === '.') return value;\r\n        let v = parseFloat(value);\r\n        return v ? v : 0;\r\n    }\r\n\r\n    render() {\r\n        const { actual$, original$ } = this.state;\r\n        return (\r\n            <>\r\n                <td className='table-performance-td-th'>\r\n                    <input className='table-performance-input' type='text' required={this.props.required} maxLength='10' disabled={this.props.disabled} onChange={this.getOriginalValue} autoComplete='off' value={this.props.voyageDays ? this.props.voyageDays.original : 0} />\r\n                </td>\r\n                <td className='table-performance-td-th'>\r\n                    <input className='table-performance-input' type='text' required={this.props.required} maxLength='10' disabled={this.props.disabled} onChange={this.getActualValue} autoComplete='off' value={this.props.voyageDays ? this.props.voyageDays.actual : 0} />\r\n                </td>\r\n                <td className='table-performance-td-th'>\r\n                    <input className='table-performance-input' type='text' disabled value={original$ ? original$ : (this.props.voyageDays ? this.props.voyageDays.original$ : 0)} />\r\n                </td>\r\n                <td className='table-performance-td-th'>\r\n                    <input className='table-performance-input' type='text' disabled value={actual$ ? actual$ : (this.props.voyageDays ? this.props.voyageDays.actual$ : 0)} />\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Paper, Grid, Button, InputLabel, Select } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport miscUtils from '../../utils/miscUtils';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport api from '../../api';\r\nimport PerformanceModule from './PerformanceModule';\r\n\r\nclass FillPerformanceDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vesselList: [],\r\n      selectedClient: props && props.clientPerformance ? props.clientPerformance.detail : '',\r\n      selectedVessel: props && props.clientPerformance ? props.clientPerformance.vesselName : '',\r\n      selectedCpDate: props && props.clientPerformance ? props.clientPerformance.cpDate : '',\r\n      portDetails: {\r\n        loadPort: props && props.clientPerformance ? props.clientPerformance.loadPort : '',\r\n        dischargePort: props && props.clientPerformance ? props.clientPerformance.dischargePort : ''\r\n      },\r\n      allClients: [],\r\n      allVslForSelectedClient: [],\r\n      allCpDatesForSelectedClient: [],\r\n      performanceDetails: {\r\n        tcHire: 0,\r\n        addressCommission: 0,\r\n      },\r\n      isDirty: true,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      readOnly: false,\r\n      isEditPage: props && props.activeTabIndex && props.activeTabIndex === 'editPage' ? true : false,\r\n      isViewPage: props && props.activeTabIndex && props.activeTabIndex === 'viewPage' ? true : false,\r\n      isClientPage: props && props.clientPerformance && props.clientPerformance.detail ? true : false,\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n    this.handlePerformanceDetailSubmit = this.handlePerformanceDetailSubmit.bind(this);\r\n    this.tcHireChange = this.tcHireChange.bind(this);\r\n    this.addressCommissionChange = this.addressCommissionChange.bind(this);\r\n    this.onVoyageDaysChange = this.onVoyageDaysChange.bind(this);\r\n    this.onLoadPortDelayChange = this.onLoadPortDelayChange.bind(this);\r\n    this.onDischargePortDelayChange = this.onDischargePortDelayChange.bind(this);\r\n    this.onIntermediatePortDelayChange = this.onIntermediatePortDelayChange.bind(this);\r\n    this.handleIFOChange = this.handleIFOChange.bind(this);\r\n    this.handleMDOChange = this.handleMDOChange.bind(this);\r\n    this.getTotalOrg = this.getTotalOrg.bind(this);\r\n    this.getTotalAct = this.getTotalAct.bind(this);\r\n  }\r\n\r\n  handleCancelAlert = () => this.setState({\r\n    confAlertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: '',\r\n      buttonTitle: '',\r\n    },\r\n    alertDetails: {\r\n      openAlert: false,\r\n      titleMsg: '',\r\n      descrMsg: ''\r\n    },\r\n  });\r\n\r\n  async componentDidMount() {\r\n    let res = {};\r\n    let { isEditPage, isViewPage, readOnly, isClientPage } = this.state;\r\n    if (isEditPage || isViewPage) {\r\n      res = await api.getAllVesselsPerformance({ isDetailsFilled: true });\r\n    } else {\r\n      res = await api.getAllVesselsPerformance({ isDetailsFilled: false });\r\n    }\r\n    if (res.data.status) {\r\n      if (isEditPage) {\r\n        readOnly = false;\r\n      } else if (isViewPage && !isClientPage) {\r\n        readOnly = true;\r\n        isEditPage = true\r\n      } else if (isClientPage) {\r\n        readOnly = true;\r\n        const performanceDetails = res.data.vesselList.find(m => m.chartererName === this.state.selectedClient);\r\n        this.setState({ performanceDetails, readOnly, isEditPage });\r\n        return\r\n      }\r\n\r\n      let allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n      this.setState({\r\n        vesselList: res.data.vesselList,\r\n        allClients,\r\n        readOnly,\r\n        isEditPage\r\n      });\r\n    } else {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data or no voyage to fill details...'\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCpDateChange = async e => {\r\n    const { vesselList, selectedVessel, selectedClient, isEditPage } = this.state;\r\n    this.resetForm();\r\n    let vesselDetails = vesselList.find(m => m.vesselName === selectedVessel && m.cpDate === e.target.value);\r\n    const res = await api.getPortDetails({ userName: selectedClient, vesselName: selectedVessel, cpDate: e.target.value });\r\n    if (res && res.data && res.data.status) {\r\n      this.setState({\r\n        portDetails: res.data.portDetails,\r\n        vesselDetails,\r\n        selectedCpDate: e.target.value,\r\n        performanceDetails: {}\r\n      });\r\n    } else {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'No details found...'\r\n        }\r\n      });\r\n    }\r\n\r\n    if (isEditPage && selectedClient && selectedVessel && e.target.value) {\r\n      this.setState({ performanceDetails: vesselDetails });\r\n    }\r\n  };\r\n\r\n  handleVesselListChange = async e => {\r\n    const { vesselList, selectedClient } = this.state;\r\n    this.resetForm();\r\n    const allCpDates = vesselList.filter(f => f.vesselName === e.target.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n    if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n      this.setState({\r\n        allCpDatesForSelectedClient: [],\r\n        selectedVessel: e.target.value,\r\n        selectedCpDate: '',\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      allCpDatesForSelectedClient: allCpDates,\r\n      selectedVessel: e.target.value,\r\n      selectedCpDate: '',\r\n      performanceDetails: {}\r\n    });\r\n  }\r\n\r\n  handleClientListChange = e => {\r\n    const { vesselList } = this.state;\r\n    this.resetForm();\r\n    const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.target.value).map(m => m.vesselName))];\r\n    if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n      this.setState({\r\n        allVslForSelectedClient: [],\r\n        selectedClient: e.target.value,\r\n        selectedVessel: '',\r\n        selectedCpDate: '',\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to fetch data...'\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        allVslForSelectedClient: allVessels,\r\n        selectedClient: e.target.value,\r\n        selectedVessel: '',\r\n        selectedCpDate: '',\r\n        performanceDetails: {}\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSuccessAlert = async e => {\r\n    e.preventDefault();\r\n    const { isDirty } = this.state;\r\n    if (isDirty) {\r\n      this.setState({\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n    }\r\n\r\n    this.handlePerformanceDetailSubmit(e);\r\n    this.props.handleBlocking(false);\r\n  }\r\n\r\n  async handlePerformanceDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { selectedClient, selectedVessel, selectedCpDate, vesselList } = this.state;\r\n    const vessel = vesselList.find(f => f.chartererName === selectedClient && f.vesselName === selectedVessel && f.cpDate === selectedCpDate)\r\n    const vId = vessel ? vessel['_id'] : '';\r\n    let data = await api.fillPerformanceDetails({ ...this.state.performanceDetails, vId });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      this.setState({\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Error !!',\r\n          descrMsg: 'Failed to add performance details...'\r\n        }\r\n      });\r\n    } else {\r\n      this.resetForm();\r\n      this.setState({\r\n        selectedClient: '',\r\n        selectedVessel: '',\r\n        selectedCpDate: '',\r\n        performanceDetails: {\r\n          voyageDays: {},\r\n          loadPortDelay: {},\r\n          dischargePortDelay: {},\r\n          intermediatePortDelay: {}\r\n        },\r\n        alertDetails: {\r\n          openAlert: true,\r\n          titleMsg: 'Success !!',\r\n          descrMsg: 'Added performance details successfully..'\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: true,\r\n        titleMsg: 'Fill Performance Details ?',\r\n        descrMsg: 'Do you want to submit?',\r\n        buttonTitle: 'Submit'\r\n      },\r\n    });\r\n  }\r\n\r\n  tcHireChange(e) {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    const { performanceDetails } = this.state;\r\n    Object.assign(performanceDetails, { tcHire: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  addressCommissionChange(e) {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    const { performanceDetails } = this.state;\r\n    Object.assign(performanceDetails, { addressCommission: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handlePerformanceDetailsChange = e => {\r\n    e.preventDefault();\r\n    let { name, value } = e.target;\r\n    const { performanceDetails } = this.state;\r\n    value = value ? value : 0;\r\n    if (name === 'remarks') {\r\n      Object.assign(performanceDetails, { [name]: value });\r\n      this.setState({ performanceDetails });\r\n      return;\r\n    }\r\n\r\n    Object.assign(performanceDetails, { [name]: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onVoyageDaysChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.voyageDays) {\r\n      performanceDetails.voyageDays = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.voyageDays, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onLoadPortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.loadPortDelay) {\r\n      performanceDetails.loadPortDelay = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.loadPortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onDischargePortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.dischargePortDelay) {\r\n      performanceDetails.dischargePortDelay = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.dischargePortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handleIFOChange(e) {\r\n    const { performanceDetails } = this.state;\r\n    let { name, value } = e.target;\r\n    value = value ? value : 0\r\n    const str = name.split('IFO');\r\n    if (str && str.length >= 2 && str[1] === 'Act') {\r\n      if (!performanceDetails.bunkerIFOAct) {\r\n        performanceDetails.bunkerIFOAct = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerIFOAct, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerIFOAct;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerIFOAct, { bunkerIFOAct$: (consumption * price).toFixed(2) });\r\n      }\r\n    } else {\r\n      if (!performanceDetails.bunkerIFOOrg) {\r\n        performanceDetails.bunkerIFOOrg = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerIFOOrg, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerIFOOrg;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerIFOOrg, { bunkerIFOOrg$: (consumption * price).toFixed(2) });\r\n      }\r\n    }\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handleMDOChange(e) {\r\n    const { performanceDetails } = this.state;\r\n    let { name, value } = e.target;\r\n    value = value ? value : 0\r\n    const str = name.split('MDO');\r\n    if (str && str.length >= 2 && str[1] === 'Act') {\r\n      if (!performanceDetails.bunkerMDOAct) {\r\n        performanceDetails.bunkerMDOAct = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerMDOAct, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerMDOAct;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerMDOAct, { bunkerMDOAct$: (consumption * price).toFixed(2) });\r\n      }\r\n    } else {\r\n      if (!performanceDetails.bunkerMDOOrg) {\r\n        performanceDetails.bunkerMDOOrg = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerMDOOrg, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerMDOOrg;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerMDOOrg, { bunkerMDOOrg$: (consumption * price).toFixed(2) });\r\n      }\r\n    }\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg)).toFixed(2);\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct)).toFixed(2);\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onIntermediatePortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.intermediatePortDelay) {\r\n      performanceDetails.intermediatePortDelay = {};\r\n    }\r\n    Object.assign(performanceDetails.intermediatePortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  getTotalOrg(performanceDetails) {\r\n    const { isViewPage } = this.state;\r\n    const { voyageDays, intermediatePortDelay, dischargePortDelay, loadPortDelay, bunkerIFOOrg, bunkerMDOOrg } = performanceDetails;\r\n    let total = 0;\r\n    const keys = Object.keys(performanceDetails).filter(m => m.substr(m.length - 4) === 'Org$');\r\n    if (keys && keys.length) {\r\n      keys.forEach(e => {\r\n        if (parseFloat(performanceDetails[e])) {\r\n          total += parseFloat(performanceDetails[e]);\r\n        }\r\n      });\r\n    }\r\n    if (voyageDays) {\r\n      total += parseFloat(voyageDays.original$);\r\n    }\r\n    if (intermediatePortDelay) {\r\n      total += parseFloat(intermediatePortDelay.original$);\r\n    }\r\n    if (dischargePortDelay) {\r\n      total += parseFloat(dischargePortDelay.original$);\r\n    }\r\n    if (loadPortDelay) {\r\n      total += parseFloat(loadPortDelay.original$);\r\n    }\r\n    if (bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$) {\r\n      total += parseFloat(bunkerIFOOrg.bunkerIFOOrg$);\r\n    }\r\n    if (bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$) {\r\n      total += parseFloat(bunkerMDOOrg.bunkerMDOOrg$);\r\n    }\r\n    if (!isViewPage) {\r\n      this.props.handleBlocking(true);\r\n    }\r\n    return parseFloat(total).toFixed(2);\r\n  }\r\n\r\n  getTotalAct(performanceDetails) {\r\n    const { voyageDays, intermediatePortDelay, dischargePortDelay, loadPortDelay, bunkerIFOAct, bunkerMDOAct } = performanceDetails;\r\n    let total = 0;\r\n    const keys = Object.keys(performanceDetails).filter(m => m.substr(m.length - 4) === 'Act$');\r\n    if (keys && keys.length) {\r\n      keys.forEach(e => {\r\n        if (parseFloat(performanceDetails[e]) >= 0) {\r\n          total += parseFloat(performanceDetails[e]);\r\n        }\r\n      });\r\n    }\r\n    if (voyageDays) {\r\n      total += parseFloat(voyageDays.actual$);\r\n    }\r\n    if (intermediatePortDelay) {\r\n      total += parseFloat(intermediatePortDelay.actual$);\r\n    }\r\n    if (dischargePortDelay) {\r\n      total += parseFloat(dischargePortDelay.actual$);\r\n    }\r\n    if (loadPortDelay) {\r\n      total += parseFloat(loadPortDelay.actual$);\r\n    }\r\n    if (bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$) {\r\n      total += parseFloat(bunkerIFOAct.bunkerIFOAct$);\r\n    }\r\n    if (bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$) {\r\n      total += parseFloat(bunkerMDOAct.bunkerMDOAct$);\r\n    }\r\n    return parseFloat(total).toFixed(2);\r\n  }\r\n\r\n  getValue(value) {\r\n    if (!value) return 0;\r\n    if (value[value.length - 1] === '.') return value;\r\n    let v = parseFloat(value);\r\n    return v ? v : 0;\r\n  }\r\n\r\n  resetForm() {\r\n    if (!document.getElementById('performanceDetailsForm')) {\r\n      return;\r\n    }\r\n    document.getElementById('performanceDetailsForm').reset();\r\n    document.getElementById('portDetailsForm').reset();\r\n  }\r\n\r\n  render() {\r\n    const { isDirty, readOnly, isClientPage, isViewPage, confAlertDetails, alertDetails, selectedClient, selectedVessel, selectedCpDate, allClients, allVslForSelectedClient, allCpDatesForSelectedClient, portDetails, performanceDetails } = this.state;\r\n    const { tcHire, addressCommission, bunkerMDOAct, bunkerIFOOrg, bunkerIFOAct, bunkerMDOOrg, totalAct, totalOrg, freightOrg, freightAct, voyageDays, loadPortDelay,\r\n      dischargePortDelay, intermediatePortDelay, loadPortDAAct$, loadPortDAOrg$, dischargePortDAOrg$, dischargePortDAAct$, bunkerSurveyCostBendsOrg$, bunkerSurveyCostBendsAct$, ILOHCandCVEAct$,\r\n      ILOHCandCVEOrg$, wXRoutingExpenseOrg$, wXRoutingExpenseAct$, despatchPaidAct$, despatchPaidOrg$, PNIInsuranceAct$, PNIInsuranceOrg$, demmurrageReceivedAct$, demmurrageReceivedOrg$,\r\n      otherExpenseAct$, otherExpenseOrg$, HraWarRiskAct$, HraWarRiskOrg$, remarks, CargoQuantityAct, CargoQuantityOrg } = performanceDetails;\r\n    return (\r\n      <>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <Paper style={{ marginTop: '2%' }}>\r\n          {!isClientPage ? <Grid container>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Select Client *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                autoWidth\r\n                disabled={!allClients || !allClients.length}\r\n                id='selectedClient'\r\n                name='selectedClient'\r\n                value={selectedClient || ''}\r\n                onChange={this.handleClientListChange}>\r\n                {allClients && allClients.length ? miscUtils.getOptions(allClients) : []}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Select Vessel *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                autoWidth\r\n                disabled={!selectedClient}\r\n                id='selectedVessel'\r\n                name='selectedVessel'\r\n                value={selectedVessel || ''}\r\n                onChange={this.handleVesselListChange}>\r\n                {allVslForSelectedClient && allVslForSelectedClient.length ? miscUtils.getOptions(allVslForSelectedClient) : []}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} lg={4} className='field-grid'>\r\n              <InputLabel id='demo-simple-select-label' className='inputLabels'>Select CP Date *</InputLabel>\r\n              <Select\r\n                className='field-select'\r\n                labelId='demo-simple-select-label'\r\n                autoWidth\r\n                disabled={!selectedVessel}\r\n                id='selectedCpDate'\r\n                name='selectedCpDate'\r\n                value={selectedCpDate || ''}\r\n                onChange={this.handleCpDateChange}>\r\n                {allCpDatesForSelectedClient && allCpDatesForSelectedClient.length ? miscUtils.getOptions(allCpDatesForSelectedClient) : []}\r\n              </Select>\r\n            </Grid>\r\n          </Grid> : ''}\r\n          {selectedCpDate ?\r\n            <>\r\n              <form id='portDetailsForm' onSubmit={this.handlePerformanceDetailSubmit}>\r\n                <table className='table-performance'>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Load Port</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled name='loadPort' value={portDetails.loadPort || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Discharge Port</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled name='dischargePort' value={portDetails.dischargePort || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>TC Hire (Per day) *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} className='table-performance-input' maxLength='10' type='text' name='tcHire' required onChange={this.tcHireChange} autoComplete='off' value={tcHire || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Address Commission *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} className='table-performance-input' maxLength='10' type='text' name='addressCommission' required onChange={this.addressCommissionChange} autoComplete='off' value={addressCommission || 0} />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </form>\r\n              <br />\r\n              <form id='performanceDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: '1%' }}>\r\n                <table className='table-performance'>\r\n                  <thead>\r\n                    <tr>\r\n                      <th className='table-performance-td-th'>Field</th>\r\n                      <th className='table-performance-td-th'>Original</th>\r\n                      <th className='table-performance-td-th'>Actual</th>\r\n                      <th className='table-performance-td-th'>Original ($)</th>\r\n                      <th className='table-performance-td-th'>Actual ($)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Voyage Days*</label>\r\n                      </td>\r\n                      <PerformanceModule voyageDays={voyageDays} required={true} tcHire={tcHire} disabled={readOnly} addressCommission={addressCommission} onOriginalActualChange={this.onVoyageDaysChange} />\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Delays at Port</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Load Port Delay</label>\r\n                      </td>\r\n                      <PerformanceModule voyageDays={loadPortDelay} required={false} tcHire={tcHire} disabled={readOnly} addressCommission={addressCommission} onOriginalActualChange={this.onLoadPortDelayChange} />\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Discharge Port Delay</label>\r\n                      </td>\r\n                      <PerformanceModule voyageDays={dischargePortDelay} required={false} tcHire={tcHire} disabled={readOnly} addressCommission={addressCommission} onOriginalActualChange={this.onDischargePortDelayChange} />\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Intermediate Port Delays</label>\r\n                      </td>\r\n                      <PerformanceModule voyageDays={intermediatePortDelay} required={false} tcHire={tcHire} disabled={readOnly} addressCommission={addressCommission} onOriginalActualChange={this.onIntermediatePortDelayChange} />\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Bunker Consumption (MT) *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'></td>\r\n                      <td className='table-performance-td-th'></td>\r\n                      <td className='table-performance-td-th'></td>\r\n                      <td className='table-performance-td-th'></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>IFO</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='consumptionIFOOrg' required onChange={this.handleIFOChange} autoComplete='off' value={bunkerIFOOrg && bunkerIFOOrg.consumption ? bunkerIFOOrg.consumption : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='consumptionIFOAct' required onChange={this.handleIFOChange} autoComplete='off' value={bunkerIFOAct && bunkerIFOAct.consumption ? bunkerIFOAct.consumption : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>MDO</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='consumptionMDOOrg' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOOrg ? bunkerMDOOrg.consumption : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='consumptionMDOAct' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOAct ? bunkerMDOAct.consumption : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Bunker Price (USD) *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'></td>\r\n                      <td className='table-performance-td-th'></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>IFO</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='priceIFOOrg' required onChange={this.handleIFOChange} autoComplete='off' value={bunkerIFOOrg && bunkerIFOOrg.price ? bunkerIFOOrg.price : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='priceIFOAct' required onChange={this.handleIFOChange} autoComplete='off' value={bunkerIFOAct && bunkerIFOAct.price ? bunkerIFOAct.price : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$ ? bunkerIFOOrg.bunkerIFOOrg$ : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled value={bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$ ? bunkerIFOAct.bunkerIFOAct$ : 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>MDO</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='priceMDOOrg' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOOrg ? bunkerMDOOrg.price : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='priceMDOAct' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOAct ? bunkerMDOAct.price : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$ ? bunkerMDOOrg.bunkerMDOOrg$ : 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' disabled value={bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$ ? bunkerMDOAct.bunkerMDOAct$ : 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Load Port DA *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='loadPortDAOrg$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={loadPortDAOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='loadPortDAAct$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={loadPortDAAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Discharge Port DA *</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='dischargePortDAOrg$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={dischargePortDAOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='dischargePortDAAct$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={dischargePortDAAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>ILOHC and CVE</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='ILOHCandCVEOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={ILOHCandCVEOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='ILOHCandCVEAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={ILOHCandCVEAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Bunker Survey Cost Bends</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='bunkerSurveyCostBendsOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={bunkerSurveyCostBendsOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='bunkerSurveyCostBendsAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={bunkerSurveyCostBendsAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>WX Routing Expense</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='wXRoutingExpenseOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={wXRoutingExpenseOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='wXRoutingExpenseAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={wXRoutingExpenseAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>PNI Insurance</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='PNIInsuranceOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={PNIInsuranceOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='PNIInsuranceAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={PNIInsuranceAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Despatch Paid</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='despatchPaidOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={despatchPaidOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='despatchPaidAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={despatchPaidAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Other Expense</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='otherExpenseOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={otherExpenseOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='otherExpenseAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={otherExpenseAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>HRA/WAR Risk</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='HraWarRiskOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={HraWarRiskOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='HraWarRiskAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={HraWarRiskAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Demmurrage Received</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='demmurrageReceivedOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={demmurrageReceivedOrg$ || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='demmurrageReceivedAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={demmurrageReceivedAct$ || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Cargo Quantity (MT)</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='CargoQuantityOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={CargoQuantityOrg || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='10' className='table-performance-input' type='text' name='CargoQuantityAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={CargoQuantityAct || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Total</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' name='totalOrg' disabled value={totalOrg || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' name='totalAct' disabled value={totalAct || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Freight (USD/MT)</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' name='freightOrg' disabled value={freightOrg || 0} />\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input className='table-performance-input' type='text' name='freightAct' disabled value={freightAct || 0} />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className='table-performance-td-th'>\r\n                        <label>Remarks</label>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                      </td>\r\n                      <td className='table-performance-td-th'>\r\n                        <input disabled={readOnly} maxLength='25' className='table-performance-input' type='text' name='remarks' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={remarks || ''} />\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                {isViewPage ? <></> : <Button\r\n                  className={`${(isDirty) ? 'white-color' : 'grey-color'} btn-save`}\r\n                  variant='contained'\r\n                  size='large'\r\n                  startIcon={<SaveIcon />}\r\n                  disabled={!(isDirty)}\r\n                  onClick={this.handleSubmit}> Submit  </Button>}\r\n              </form>\r\n            </> : <></>}\r\n        </Paper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FillPerformanceDetails;\r\n","import React, { Component } from 'react';\r\nimport ScrollableTabsButtonAuto from '../sub-component/ScrollableTabsButtonAuto';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { connect } from 'react-redux';\r\nimport ConfirmationAlert from '../../utils/confirmationAlert';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport FillPerformanceDetails from './Form_FillPerformanceDetails';\r\n\r\nclass Performance extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTabIndex: 0,\r\n      isDirty: false,\r\n      localClickedtTab: 0,\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n    };\r\n\r\n    this.handleBlocking = this.handleBlocking.bind(this);\r\n    this.handleCancelAlert = this.handleCancelAlert.bind(this);\r\n    this.handleSuccessAlert = this.handleSuccessAlert.bind(this);\r\n  }\r\n\r\n  handleIconDetail = (event, value) => {\r\n    if (value !== this.state.activeTabIndex) {\r\n      const { isDirty } = this.state;\r\n      if (isDirty) {\r\n        this.setState({\r\n          confAlertDetails: {\r\n            openAlert: true,\r\n            titleMsg: 'Discard Changes?',\r\n            descrMsg: '  You have unsaved changes. Do you want to discard?',\r\n            buttonTitle: ' Discard'\r\n          },\r\n          localClickedtTab: value\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    this.setState({ activeTabIndex: value, localClickedtTab: value });\r\n    return true;\r\n  };\r\n\r\n  handleCancelAlert = () => {\r\n    this.setState({\r\n      confAlertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: '',\r\n        buttonTitle: '',\r\n      },\r\n      alertDetails: {\r\n        openAlert: false,\r\n        titleMsg: '',\r\n        descrMsg: ''\r\n      },\r\n      localClickedtTab: this.state.activeTabIndex\r\n    })\r\n  };\r\n\r\n  handleSuccessAlert = e => {\r\n    e.preventDefault();\r\n    const { localClickedtTab, activeTabIndex, isDirty } = this.state\r\n    if (localClickedtTab !== activeTabIndex && isDirty) {\r\n      this.setState({\r\n        isDirty: false,\r\n        confAlertDetails: {\r\n          openAlert: false,\r\n          titleMsg: '',\r\n          descrMsg: '',\r\n          buttonTitle: '',\r\n        },\r\n      });\r\n      this.setState({ activeTabIndex: localClickedtTab });\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleBlocking = e => this.setState({ isDirty: e });\r\n\r\n  getTabData = () => {\r\n    if (this.props && this.props.detail && this.props.detail.role === 'Manager') {\r\n      const tabs = {\r\n        tabsLabel: [],\r\n        tabPanelChild: []\r\n      }\r\n      const assignedRoles = this.props.detail.managerRoles.filter(m => m.indexOf('Performance') >= 0);\r\n      for (let i = 0; i < assignedRoles.length; i++) {\r\n        const role = assignedRoles[i];\r\n        if (role === 'View All Performance Details') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>VIEW PERFORMANCE DETAILS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <FillPerformanceDetails handleBlocking={this.handleBlocking} activeTabIndex='viewPage' />\r\n          })\r\n        } else if (role === 'Fill Performance Details') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>FILL PERFORMANCE DETAILS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <FillPerformanceDetails handleBlocking={this.handleBlocking} />\r\n          })\r\n        } else if (role === 'Edit Performance Details') {\r\n          tabs.tabsLabel.push({\r\n            icon: <AccountCircleIcon className='labelColor' />,\r\n            label: <span className='labelColor'>EDIT PERFORMANCE DETAILS</span>\r\n          });\r\n          tabs.tabPanelChild.push({\r\n            child: <FillPerformanceDetails handleBlocking={this.handleBlocking} activeTabIndex='editPage' />\r\n          })\r\n        }\r\n      }\r\n\r\n      return tabs;\r\n    } else if (this.props && this.props.detail && this.props.detail.role === 'Admin') {\r\n      const tabs = {\r\n        tabsLabel: [{\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>VIEW PERFORMANCE DETAILS</span>\r\n        }, {\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>FILL PERFORMANCE DETAILS</span>\r\n        }, {\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>EDIT PERFORMANCE DETAILS</span>\r\n        },\r\n        ],\r\n        tabPanelChild:\r\n          [{\r\n            child: <FillPerformanceDetails handleBlocking={this.handleBlocking} activeTabIndex='viewPage' />\r\n          }, {\r\n            child: <FillPerformanceDetails handleBlocking={this.handleBlocking} />\r\n          }, {\r\n            child: <FillPerformanceDetails handleBlocking={this.handleBlocking} activeTabIndex='editPage' />\r\n          }]\r\n      }\r\n\r\n      return tabs;\r\n    }\r\n    else if (this.props && this.props.detail && this.props.detail.role === 'Client') {\r\n      const tabs = {\r\n        tabsLabel: [{\r\n          icon: <AccountCircleIcon className='labelColor' />,\r\n          label: <span className='labelColor'>VIEW PERFORMANCE DETAILS</span>\r\n        }\r\n        ],\r\n        tabPanelChild:\r\n          [{\r\n            child: <FillPerformanceDetails handleBlocking={this.handleBlocking} activeTabIndex='viewPage' clientPerformance={this.props.history.location.state} />\r\n          }]\r\n      }\r\n\r\n      return tabs;\r\n    }\r\n  }\r\n\r\n  /* tab data end */\r\n\r\n  render() {\r\n    const { confAlertDetails, alertDetails, isDirty, localClickedtTab } = this.state;\r\n    return (\r\n      <div className='my-profile'>\r\n        <Alert alertDetails={alertDetails} handleCancelAlert={this.handleCancelAlert} />\r\n        <ConfirmationAlert confAlertDetails={confAlertDetails} handleCancelAlert={this.handleCancelAlert} handleSuccessAlert={this.handleSuccessAlert} />\r\n        <ScrollableTabsButtonAuto paper={true} tabs={this.getTabData()} onChange={this.handleIconDetail} TabIndicatorProps={{ style: { background: '#e37933' } }} isDirty={isDirty} newTabVal={localClickedtTab} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Performance);\r\n","import React from 'react';\r\nimport { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction UserTable(props) {\r\n\r\n  const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  let [columns, setColumns] = React.useState([]);\r\n  let [data, setData] = React.useState([]);\r\n\r\n  if (props.columns && props.columns.length && !columns.length) {\r\n    setColumns(props.columns);\r\n  }\r\n\r\n  if (props.data && props.data.length && !data.length) {\r\n    setData(props.data)\r\n  }\r\n\r\n  return (\r\n    <MaterialTable\r\n      title={props.title}\r\n      columns={props.columns}\r\n      data={props.data}\r\n      icons={tableIcons}\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(UserTable);","import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nclass PieCharts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: 'pie',\r\n        },\r\n        labels: Object.keys(props.vesselDetails),\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }]\r\n},\r\n      series: Object.values(props.vesselDetails),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='row' />\r\n\r\n        <div className='row'>\r\n          <div className='col percentage-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='pie'\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PieCharts;\r\n\r\n/*import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {},\r\n      series: [44, 55, 41, 17, 15],\r\n      labels: ['A', 'B', 'C', 'D', 'E']\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='row' />\r\n\r\n        <div className='row'>\r\n          <div className='col percentage-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='pie'\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n */","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Alert from '../../utils/alert';\r\nimport './style.scss';\r\nimport UserTable from './userTable';\r\nimport PieCharts from './PieCharts';\r\nimport api from '../../api';\r\n\r\nclass Client extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getAllVoyage();\r\n    this.clientDisplay = props.detail.clientDisplay;\r\n    this.toSendVesselList = [];\r\n    this.state = {\r\n      vesselList: [],\r\n      vesselDetails: {\r\n        vesselName: '',\r\n        vesselSize: '',\r\n        cpDate: '',\r\n        loadPort: '',\r\n        dischargePort: '',\r\n        cargo: '',\r\n        cargoIntake: '',\r\n        ownerName: ''\r\n      },\r\n      tableData: [],\r\n      performanceDetails: {},\r\n    }\r\n  }\r\n\r\n  getAllVoyage = async () => {\r\n    const { detail } = this.props;\r\n    let voyage, performance, documents = false;\r\n    await api.getAllVoyage({ 'companyName': detail.companyName }).then(res => {\r\n      if (res.data.status) {\r\n        this.toSendVesselList = res.data.vesselList;\r\n        if (detail.clientDisplay.length) {\r\n          detail.clientDisplay.indexOf('View Documents') >= 0 ? documents = true : documents = false;\r\n          detail.clientDisplay.indexOf('View Performance') >= 0 ? performance = true : performance = false;\r\n          detail.clientDisplay.indexOf('View Voyage Details') >= 0 ? voyage = true : voyage = false;\r\n          for (var i = 0; i < res.data.vesselList.length; i++) {\r\n            if (documents) {\r\n              res.data.vesselList[i].viewDocuments = <button style={{ color: 'blue', textAlign: 'center' }} type='button' id={res.data.vesselList[i]._id} onClick={this.handleViewDocuments}>View</button>;\r\n            }\r\n            if (performance) {\r\n              res.data.vesselList[i].vesselPerformance = <button style={{ color: 'blue', textAlign: 'center' }} type='button' id={res.data.vesselList[i]._id} onClick={this.handleVesselPerformance}>View</button>;\r\n            }\r\n            if (voyage) {\r\n              res.data.vesselList[i].voyageDetails = <button style={{ color: 'blue', textAlign: 'center' }} type='button' id={res.data.vesselList[i]._id} onClick={this.handleVoyageDetails}>View</button>;;\r\n            }\r\n          }\r\n        }\r\n        this.setState({\r\n          vesselList: res.data.vesselList,\r\n          companyName: detail.companyName,\r\n          error: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          error: true,\r\n          companyName: detail.companyName,\r\n        });\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  handlePerformanceClick = e => {\r\n    const { vesselList } = this.state;\r\n    const c = vesselList.find(m => m['_id'] === e.target.id);\r\n    this.props.history.push({\r\n      pathname: '/CheckPerformance',\r\n      state: { detail: c }\r\n    });\r\n  }\r\n\r\n  handleVoyageDetails = e => {\r\n    const { vesselList } = this.state;\r\n    const c = vesselList.find(m => m['_id'] === e.target.id);\r\n    this.props.history.push({\r\n      pathname: '/voyage',\r\n      state: {\r\n        detail: {\r\n          'Shipper': c.Shipper,\r\n          'bunkerSupplier': c.bunkerSupplier,\r\n          'bunkerTrader': c.bunkerTrader,\r\n          'cargo': c.cargo,\r\n          'cargoIntake': c.cargoIntake,\r\n          'chartererName': c.chartererName,\r\n          'cpDate': c.cpDate,\r\n          'dischargePort': c.dischargePort,\r\n          'loadPort': c.loadPort,\r\n          'loadPortAgent': c.loadPortAgent,\r\n          'offHireSurveyor': c.offHireSurveyor,\r\n          'offHireSurveyor': c.offHireSurveyor,\r\n          'receiver': c.receiver,\r\n          'onwerName': c.onwerName,\r\n          'onHireSurveyor': c.onHireSurveyor,\r\n          'vesselSize': c.vesselSize,\r\n          'weatherRoutingCompany': c.weatherRoutingCompany,\r\n          'tableData': { id: 0 },\r\n          'vId': c.vId,\r\n          'vesselName': c.vesselName\r\n        },\r\n        fieldVisibility: c.fieldVisibility\r\n      }\r\n    });\r\n  }\r\n\r\n  handleVesselPerformance = e => {\r\n    const { vesselList } = this.state;\r\n    const c = vesselList.find(m => m['_id'] === e.target.id);\r\n    this.props.history.push({\r\n      pathname: '/performance',\r\n      state: {\r\n        detail: c.chartererName,\r\n        loadPort: c.loadPort,\r\n        cpDate: c.cpDate,\r\n        dischargePort: c.dischargePort,\r\n        vesselName: c.vesselName\r\n      }\r\n    });\r\n  }\r\n\r\n  handleViewDocuments = e => {\r\n    this.props.history.push({\r\n      pathname: '/viewDocuments'\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const columns = [{ field: 'vesselName', title: 'Vessel Name', editable: 'never' },\r\n    { field: 'cpDate', title: 'CP Date', editable: 'never' },\r\n    { field: 'voyageDetails', title: 'View Voyage', check: 'View Voyage Details', editable: 'never' },\r\n    { field: 'vesselPerformance', title: 'View Performance', check: 'View Performance', editable: 'never' },\r\n    { field: 'viewDocuments', title: 'View Documents', check: 'View Documents', editable: 'never' }\r\n    ];\r\n    const { detail } = this.props;\r\n    var index = columns.length;\r\n    while (index--) {\r\n      if (columns[index].check && !detail.clientDisplay.includes(columns[index].check)) {\r\n        columns.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    const { vesselList } = this.state;\r\n    const ourCount = {};\r\n    let previousYearDate = new Date();\r\n    const pastYear = previousYearDate.getFullYear() - 1;\r\n    previousYearDate.setFullYear(pastYear);\r\n    vesselList.forEach(v => {\r\n      if (!ourCount[v.cargo]) {\r\n        ourCount[v.cargo] = 0;\r\n      }\r\n      if (new Date(v.cpDate).getTime() <= new Date().getTime() && new Date(v.cpDate).getTime() > previousYearDate.getTime()) {\r\n        ourCount[v.cargo] += parseInt(v.cargoIntake);\r\n      }\r\n    });\r\n    return (\r\n      <form>\r\n        <UserTable title={'Fixture List'} data={vesselList} columns={columns} />\r\n        <PieCharts vesselDetails={ourCount} />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  capitalize = s => {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n  }\r\n\r\n\r\n  // getPopupContent = (cellVal, rowId) => {\r\n  //   const { vesselList } = this.state;\r\n  //   let vesselDetails = vesselList.find(m => m['_id'] === rowId);\r\n  //   vesselDetails = (({ vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }) => (\r\n  //     { vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }))(vesselDetails);\r\n\r\n  //   const content = <div>\r\n  //     <Popup trigger={<a id={rowId} style={{ color: 'blue', textAlign: 'center', textDecoration: 'underline', cursor: 'pointer' }}> {cellVal} </a>}\r\n  //       modal closeOnDocumentClick >\r\n  //       <div className='content'>\r\n  //         <DisplaySelectedVesselDetails vesselDetails={vesselDetails} />\r\n  //       </div>\r\n  //     </Popup>\r\n  //   </div>\r\n\r\n  //   return content;\r\n  // }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { ui, detail } = state;\r\n  return {\r\n    ui,\r\n    detail\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Client);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Callback from '../../Callback';\r\nimport Login from '../login';\r\nimport NavBar from '../navBar';\r\nimport LeftMenu from '../sub-component/left-menu';\r\nimport Users from '../user';\r\nimport { connect } from 'react-redux';\r\nimport './../../style/reset.css';\r\nimport './../../style/common.scss';\r\nimport './App.scss';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Grid } from '@material-ui/core';\r\nimport vessel from '../vessel';\r\nimport voyage from '../voyage';\r\nimport performance from '../performance';\r\nimport Client from '../client';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loggedIn: false\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { loggedIn } = this.props;\r\n    const { ui, detail } = this.props;\r\n    const { activeOverlay } = ui;\r\n    let initialComponent = 'Users'\r\n    if (detail.role === \"Manager\") {\r\n      const mr = detail.managerRoles;\r\n      let isFound = false;\r\n      for (let i = 0; i < mr.length; i++) {\r\n        if (!isFound && mr.some(s => s.indexOf('User') >= 0)) {\r\n          initialComponent = 'Users';\r\n          isFound = true;\r\n        }\r\n        if (!isFound && mr.some(s => s.indexOf('Vessel') >= 0)) {\r\n          initialComponent = 'vessel';\r\n          isFound = true;\r\n        }\r\n        if (!isFound && mr.some(s => s.indexOf('Voyage') >= 0)) {\r\n          initialComponent = 'voyage';\r\n          isFound = true;\r\n        }\r\n        if (!isFound && mr.some(s => s.indexOf('Performance') >= 0)) {\r\n          initialComponent = 'performance';\r\n          isFound = true;\r\n        }\r\n      }\r\n    }\r\n    if (detail.role === 'Client') {\r\n      initialComponent = 'client';\r\n    }\r\n\r\n    return (\r\n      <div className={`main ${activeOverlay ? 'active-overlay' : ''}`}>\r\n        {loggedIn ? <Grid container direction='row' className='main-container'>\r\n          {detail.role !== 'Client' ? <Grid item md={3} lg={3} className='left left-section'>\r\n            <LeftMenu />\r\n          </Grid> : \"\"}\r\n          <Grid item xs={12} md={detail.role !== 'Client' ? 9 : false} lg={detail.role !== 'Client' ? 9 : false}>\r\n            <section className='right right-section'>\r\n              <NavBar history={this.props.history} />\r\n              <div className='right-container'>\r\n                <section className='component-wrapper'>\r\n                  <Switch>\r\n                    {initialComponent === 'Users' ? <Route exact path='/' component={Users} /> :\r\n                      initialComponent === 'vessel' ? <Route exact path='/' component={vessel} /> :\r\n                        initialComponent === 'voyage' ? <Route exact path='/' component={voyage} /> :\r\n                          initialComponent === 'performance' ? <Route exact path='/' component={performance} /> :\r\n                            initialComponent === 'client' ? <Route exact path='/' component={Client} /> :\r\n                              <Route exact path='/' component={Users} />}\r\n                    <Route exact path='/' component={initialComponent} />\r\n                    <Route exact path='/user' component={Users} />\r\n                    <Route exact path='/vessel' component={vessel} />\r\n                    <Route exact path='/voyage' component={voyage} />\r\n                    <Route exact path='/performance' component={performance} />\r\n                  </Switch>\r\n                </section>\r\n              </div>\r\n            </section>\r\n          </Grid>\r\n        </Grid>\r\n          :\r\n          <Route exact path='/' component={Login} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { detail, loggedIn, ui } = state;\r\n  return {\r\n    detail,\r\n    loggedIn,\r\n    ui\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import actionTypes from './actions/constants'\r\n\r\nexport const exampleInitialState = {\r\n  detail: {\r\n    userName: '',\r\n    companyName: '',\r\n    displayName: '',\r\n    role: '',\r\n    clientType: '',\r\n    _id: 0,\r\n    managerRoles: [],\r\n    clientDisplay: []\r\n  },\r\n  loggedIn: null,\r\n  ui: {\r\n    userDetails: {},\r\n    activeTab: '',\r\n    activeOverlay: '',\r\n  }\r\n}\r\n\r\nfunction reducer(state = exampleInitialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_ASYNC:\r\n      let loggedIn = false;\r\n      let detailObj = {\r\n        userName: action.data.userName || '',\r\n        companyName: action.data.companyName || '',\r\n        displayName: action.data.displayName || '',\r\n        role: action.data.role || '',\r\n        clientType: action.data.clientType || '',\r\n        _id: action.data['_id'] || 0,\r\n        managerRoles: action.data.managerRoles || [],\r\n        clientDisplay: action.data.clientDisplay || [],\r\n      };\r\n      if (action.data) {\r\n        loggedIn = action.data === 'signout' ? null : true;\r\n      }\r\n      return Object.assign({}, state, {\r\n        detail: { ...detailObj },\r\n        loggedIn,\r\n        ui: Object.assign({}, state.ui)\r\n      });\r\n    case actionTypes.USERDETAIL_ASYNC:\r\n      const uiObjTemp = Object.assign({}, state.ui);\r\n      if (action.data) {\r\n        uiObjTemp.userDetails = action.data;\r\n      }\r\n      return Object.assign({}, state, {\r\n        ui: uiObjTemp\r\n      });\r\n    case actionTypes.SET_ACTIVE_TAB:\r\n      const uiObjTemp2 = Object.assign({}, state.ui);\r\n      if (action.data) {\r\n        uiObjTemp2.activeTab = action.data;\r\n      }\r\n      return Object.assign({}, state, {\r\n        ui: uiObjTemp2\r\n      });\r\n    case actionTypes.SET_OVERLAY:\r\n      const uiObjTemp4 = Object.assign({}, state.ui);\r\n      uiObjTemp4.activeOverlay = action.data;\r\n      return Object.assign({}, state, {\r\n        ui: uiObjTemp4\r\n      });\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n\r\nexport default reducer;","\r\nimport { all, put, takeLatest } from 'redux-saga/effects'\r\nimport es6promise from 'es6-promise'\r\nimport api from './../api';\r\nimport actionTypes from './actions/constants';\r\nimport { setLoginDetails } from './actions'\r\n\r\nes6promise.polyfill()\r\n\r\nfunction* login({ data }) {\r\n  try {\r\n    const resp = yield api.loginUser(data);\r\n    if (resp) {\r\n      const data = {};\r\n      if (resp && resp.data && resp.data && resp.data.status === 'success') {\r\n        const { clientType, companyName, role, displayName, managerRoles, userName, _id, clientDisplay } = resp.data;\r\n        data.clientType = clientType;\r\n        data.companyName = companyName;\r\n        data.role = role;\r\n        data.displayName = displayName\r\n        data.managerRoles = managerRoles;\r\n        data.userName = userName;\r\n        data['_id'] = _id;\r\n        data.clientDisplay = clientDisplay;\r\n        yield put(setLoginDetails(data));\r\n      } else {\r\n        yield put(setLoginDetails(''));\r\n      }\r\n    }\r\n  } catch (err) {\r\n    console.log('api error login');\r\n    yield put(setLoginDetails(''));\r\n  }\r\n}\r\n\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    takeLatest(actionTypes.LOGIN, login),\r\n  ])\r\n}\r\n\r\nexport default rootSaga","import { applyMiddleware, createStore } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootReducer, { exampleInitialState } from './reducer'\r\nimport rootSaga from './saga'\r\n\r\nconst bindMiddleware = middleware => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { composeWithDevTools } = require('redux-devtools-extension')\r\n    return composeWithDevTools(applyMiddleware(...middleware))\r\n  }\r\n  return applyMiddleware(...middleware)\r\n}\r\n\r\nfunction configureStore (initialState = exampleInitialState) {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    bindMiddleware([sagaMiddleware])\r\n  )\r\n\r\n  store.sagaTask = sagaMiddleware.run(rootSaga)\r\n\r\n  return store\r\n}\r\n\r\nexport default configureStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore  from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}