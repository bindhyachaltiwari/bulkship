{"version":3,"sources":["reducers/reducer.js","sagas/saga.js","js/index.js","components/Others/About.js","components/Others/Location.js","components/Others/Spinner.js","components/Client/DisplaySelectedVesselDetails.js","components/Others/PieCharts.js","components/api/index.js","components/Client/ClientHome.js","components/Admin/AdminHome.js","components/Manager/ManagerHome.js","components/Others/Page.js","components/Login/LoginHome.js","components/Others/SlideShow.js","components/Others/Home.js","components/Others/Header.js","components/Others/Footer.js","components/Client/CheckPerformance.js","components/FirstComponentStateFul.js","action/action.js","components/Others/Alert.js","components/Login/FormPasswordReset.js","components/Login/ForgotPassword.js","components/Admin/user/AddNewUser.js","components/Admin/user/ViewAllUsers.js","components/Admin/common/AddDynamicField.js","components/Admin/vessel/AddNewVessel.js","components/Admin/vessel/ViewAllVessels.js","components/Admin/voyage/FillVoyageDetails.js","components/Admin/voyage/ViewVoyageDetails.js","components/Admin/performance/ViewPerformanceDetails.js","components/Admin/common/PrivateRoute.js","components/Admin/common/ShowDropDownAdmin.js","components/Admin/performance/FillPerformanceDetails.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","apiData","watcherSaga","workerFunction","takeEvery","call","getAPIData","finalData","put","type","fetch","then","response","json","initializeMiddleware","createSagaMiddleware","store","createStore","state","action","Object","assign","concat","payload","applyMiddleware","run","About","className","AnyReactComponent","text","Location","style","height","width","bootstrapURLKeys","key","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","Spinner","display","flexDirection","justifyContent","alignItems","CircularProgress","color","DisplaySelectedVesselDetails","pairs","getDisplayKey","charAt","toUpperCase","slice","replace","trim","vesselDetails","push","marginTop","PieCharts","options","chart","labels","keys","responsive","breakpoint","legend","position","series","values","api","apiUrl","checkUsername","data","axios","post","headers","updatePassword","login","insertUserDetails","insertVesselDetails","insertPerformanceData","insertVoyageData","getAllManager","get","getAllVesselsPerformance","getAllVoyage","getAllUserDetails","getAllClientList","getAllVesselsList","getAllVesselsDetails","getAllVoyageDetails","fillPerformanceDetails","deleteVessel","delete","updateVessel","ClientHome","a","async","localStorage","getItem","res","status","setState","vesselList","companyName","error","handlePerformanceClick","e","c","find","m","target","id","history","pathname","detail","buildCustomTableBodyCell","val","cellVal","column","rowId","textAlign","onClick","getPopupContent","capitalize","s","vesselName","vesselSize","cpDate","loadPort","cargo","cargoIntake","ownerName","trigger","textDecoration","cursor","modal","closeOnDocumentClick","dischargePoint","tableData","performanceDetails","isPeformancePage","userName","showData","length","title","keyColumn","font","dimensions","datatable","row","stripped","features","canSearch","canDownload","canPrint","canOrderColumns","columns","label","colSize","dataType","rows","map","_id","checkPerformance","ourCount","previousYearDate","Date","pastYear","getFullYear","setFullYear","forEach","v","getTime","parseInt","marginLeft","CustomTableBodyCell","withRouter","AdminHome","marginRight","to","pointerEvents","ManagerHome","localRoles","JSON","parse","arrayItemsRoles","role","AddUser","ViewUsers","EditUser","AddVessel","ViewVessels","EditVessels","FillVoyage","ViewVoyage","EditVoyage","FillPerformance","ViewPerformance","EditPerformance","item","i","bind","Page","toLowerCase","LoginHome","isLoggedIn","errorMsg","_handleSubmit","username","password","setSubmitting","resetForm","resp","err","setItem","token","displayName","stringify","managerRoles","initialValues","validationSchema","object","shape","string","required","onSubmit","render","touched","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","userRole","Typography","variant","margin","Paper","elevation","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","name","autoComplete","value","onChange","onBlur","FormHelperText","Button","size","disabled","images","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","SlideShow","each","index","src","alt","Home","Header","handleClick","showHeader","toggleHeaderState","logoutAndToggleState","toggleState","clear","scroll","Footer","CheckPerformance","console","log","location","FirstComponentStateFul","count","itemList","incrementCounter","addItemTo","addItems","getApiCall","event","addItem","getApiCallData","document","connect","dispatch","Transition","Slide","direction","Alert","handleClose","isOpen","hasTwoButtons","submitButtonText","Dialog","open","transition","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","FormPasswordReset","passChangeSuccess","user","_handleModalClose","_renderModal","_handleClose","confirmPass","newPass","oneOf","ref","ForgotPassword","AddNewUser","userDetails","clientType","success","roles","handleUserDetailsChange","preventDefault","handleMultiSelect","checked","handleRoleChange","handleClientTypeChange","handleAddNewUserSubmit","handleBackButton","goBack","filter","errmsg","indexOf","getElementById","reset","placeholder","component","FormGroup","FormControlLabel","control","Checkbox","top","left","fontSize","ViewAllUsers","localState","clientList","handleEditClick","edit","AddDynamicField","IconButton","aria-label","submitNewFieldDetails","TextField","inputProps","maxLength","startIcon","AddNewVessel","IMO","DWT","built","LOA","beam","cranes","grabs","otherFields","newFields","handleVesselDetailsChange","inputs","querySelectorAll","displayOtherFields","handleNewFieldDetailsChange","handleAddNewVesselSubmit","defaultValue","ViewAllVessels","isEditPage","some","f","vsl","content","on","keepTooltipInside","canRefreshRows","rowsPerPage","available","selected","editable","inputType","flag","draft","GRT","NRT","TPC","grainCapacity","baleCapacity","canEdit","canDelete","refreshRows","window","reload","actionsRow","actions","FillVoyageDetails","voyageDetails","chartererName","shipper","loadPortAgent","receiver","onHireSurveyor","offHireSurveyor","bunkerSupplier","bunkerTrader","pniInsurance","weatherRoutingCompany","fieldVisibility","handleChartererNameChange","handleVesselNameChange","handleAdminChange","handleDateFieldChange","handleCheckBoxChange","sort","handleVesselDetailSubmit","toString","isDetailsFilled","defaultChecked","maxDate","placeholderText","ViewVoyageDetails","voyageList","getPopupContent_OtherFields","getPopupContent_FieldVisibility","dischargePortAgent","ViewPerformanceDetails","getAllVesselDetails","tooltip","PrivateRoute","rest","from","ShowDropDownAdmin","clients","allClients","vessels","allVslForSelectedClient","dates","allCpDatesForSelectedClient","selectedClient","handleClientListChange","isDisabled","selectedVessel","handleVesselListChange","selectedCpDate","handleCpDateChange","FillPerformanceDetails","handlePerformanceDetailsChange","allCpDates","allVessels","Set","handlePerformanceDetailSubmit","vessel","vId","showTable","App","path","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb52ddd5.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    items: [],\r\n    apiData: [],\r\n};\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD': {\r\n            return Object.assign({}, state, {\r\n                items: state.items.concat(action.payload)\r\n            });\r\n        }\r\n        case 'DATA-LOADED': {\r\n            return Object.assign({}, state, {\r\n                apiData: state.apiData.concat(action.finalData)\r\n            });\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nexport default function* watcherSaga() {\r\n    yield takeEvery('APICALL', workerFunction)\r\n}\r\nfunction* workerFunction() {\r\n    try {\r\n        const finalData = yield call(getAPIData);\r\n        //const finalResponse = yield finalData.json();\r\n        yield put({ type: 'DATA-LOADED', finalData });\r\n    }\r\n    catch (e) {\r\n        yield put({ type: 'DATA-ERROR', finalData: e });\r\n    }\r\n}\r\nfunction getAPIData() {\r\n    return fetch('https://jsonplaceholder.typicode.com/posts').then((response) =>\r\n        response.json()\r\n    );\r\n    // return fetch('https://jsonplaceholder.typicode.com/posts').then(function(response) {\r\n    // response.json();\r\n    // })\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers/reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport watcherSaga from '../sagas/saga';\r\n\r\nconst initializeMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(initializeMiddleware));\r\ninitializeMiddleware.run(watcherSaga);\r\nexport default store;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <section className=\"about_us_2 about_us_2_animated\">\r\n                <div className=\"about_text\">\r\n                    <p className=\"main anim animated\">about bulkcom shipping</p>\r\n                    <div className=\"pic_cont anim animated\">\r\n                    </div>\r\n                    <p className=\"sub anim4 animated\">WE'VE BUILT OUR REPUTATION ON EXCELLENCE IN SHIP CHARTERING BOTH VOYAGE AND TIME CHARTER, WITH A CONSTANT FOCUS ON SERVING OUR CUSTOMERS.<br />\r\n                        We are experts in planning, executing and handling any dry cargo movement in bulk across the globe.\r\n                        We have booked over 5Million MT of dry bulk cargo on all kinds of vessel ranging from handy to cape size with special focus on supramax category.<br />\r\n                        When trust us to charter vessels exclusively through us, you'll know that your shipments are in the hands of skilled, qualified professionals with decades of experience in shipping.<br /><br />\r\n                        Contact us today to discuss your current and future chartering needs. We have trained friendly staff to provide the best customer service in the industry.\r\n\r\n                        <br /><br /><b>WHY CHOOSE US?</b><br />\r\n                        WE AIM TO PROVIDE LEVERAGE TO YOUR BUSINESS BACKED BY OUR MARKET INFORMATION<br />\r\n                        Your freight is too important to trust to amateur and most important aspect for a trade deal to conclude. We deliver every time, and that's a promise.<br /><br />\r\n\r\n                        WE KNOW THE INS AND OUTS OF SHIPPING<br />\r\n                        The difference, in one word, is experience. Our team is fully capable to provide you the best service in industry.<br /><br />\r\n\r\n                        WE'RE NOT JUST A BROKER, WE'RE YOUR PARTNER<br />\r\n                        Shipping needs fluctuate, grow, and evolve in ways you might not be able to anticipate. We can help create not just a solution, but a entire shipping strategy.<br /><br />\r\n                        {/* <span className=\"more_btn\">\r\n                            more\r\n                        <img src=\"https://aegisuae.com/resources/img/arrow_down_white.svg\" alt=\"arrow\" className=\"arrow\" />\r\n                        </span> */}\r\n                        {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                        <span className=\"sub_more\">Our Trading efforts are currently focused on Bulk, Limestone, Dolomite, Gypsum, and Coal. We also have our own fleet of Chartered in tonnage and Dry Bulk Vessels to provide end to end solutions to our Clients.\r\n                        Our business endeavours tirelessly to create strong foundations of trust with all stake holders of the organisation.\r\n                        The company specializes in Value Addition with the supply chain. Our primary objective is to cater to and exceed our clients expectations in a timely and professional manner.\r\n                The Group is on the cusp of massive expansions and business growth and has been growing from strength to strength supported with the faith our customers, suppliers and employees repose on the organisation.</span>\r\n                    </p>\r\n                    {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link_2\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass Location extends Component {\r\n    static defaultProps = {\r\n        center: {\r\n          lat: 59.95,\r\n          lng: 30.33\r\n        },\r\n        zoom: 11\r\n      };\r\n      render() {\r\n        return (\r\n            <div>\r\n                <section className='about_us_2 about_us_2_animated'>\r\n                    <div className='about_text'>\r\n                    <div style={{ height: '100vh', width: '100%' }}>\r\n                            <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: 'AIzaSyAtqgKhqfCi91s3GL1SM5HEt9pfqQvnZDw' }}\r\n                            defaultCenter={this.props.center}\r\n                            defaultZoom={this.props.zoom}\r\n                            >\r\n                            <AnyReactComponent\r\n                                lat={59.955413}\r\n                                lng={30.337844}\r\n                                text='My Marker'\r\n                            />\r\n                            </GoogleMapReact>\r\n                        </div>\r\n                    </div>\r\n                    </section>\r\n            </div>\r\n        )\r\n      }\r\n}\r\nexport default Location;","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nexport default function Spinner() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <CircularProgress color='primary' />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst DisplaySelectedVesselDetails = props => {\r\n    var pairs = [];\r\n    const getDisplayKey = key => {\r\n        key = key.charAt(0).toUpperCase() + key.slice(1)\r\n        return key.replace(/([A-Z])/g, ' $1').trim()\r\n    }\r\n\r\n    for (var key in props.vesselDetails) {\r\n        pairs.push(\r\n            <tr key={key}>\r\n                <td>\r\n                    <label>\r\n                        {getDisplayKey(key)}\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    {props.vesselDetails[key]}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <table style={{marginTop:'5%'}}>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    {pairs}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplaySelectedVesselDetails","import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nclass PieCharts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: 'pie',\r\n        },\r\n        labels: Object.keys(props.vesselDetails),\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }]\r\n},\r\n      series: Object.values(props.vesselDetails),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='row' />\r\n\r\n        <div className='row'>\r\n          <div className='col percentage-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='pie'\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PieCharts;\r\n\r\n/*import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {},\r\n      series: [44, 55, 41, 17, 15],\r\n      labels: ['A', 'B', 'C', 'D', 'E']\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='row' />\r\n\r\n        <div className='row'>\r\n          <div className='col percentage-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='pie'\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n */","import axios from 'axios';\r\n\r\nclass API {\r\n    apiUrl = '';\r\n\r\n    checkUsername = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/checkUsername', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    updatePassword = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/updatePassword', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    login = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/login', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertUserDetails = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/insertUserDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/insertVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertPerformanceData = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/insertPerformanceData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVoyageData = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/insertVoyageData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllManager = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllManager');\r\n    }\r\n\r\n    getAllVesselsPerformance = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/getAllVessels', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllVoyage = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/getAllVoyage', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllUserDetails = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllUserDetails');\r\n    }\r\n\r\n    getAllClientList = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllClientList');\r\n    }\r\n\r\n    getAllVesselsList = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselsList');\r\n    }\r\n\r\n    getAllVesselsDetails = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselDetails');\r\n    }\r\n\r\n    getAllVoyageDetails=()=>{\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyageDetails');\r\n    }\r\n\r\n    fillPerformanceDetails = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/fillPerformanceDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVessel = data => {\r\n        return axios.delete(this.apiUrl + '/vesselDetails/' + data);\r\n    }\r\n\r\n    updateVessel = data=>{\r\n        return axios.post(this.apiUrl + '/vesselDetails/updateVessel', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n};\r\n\r\nconst api = new API();\r\nexport default api;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport Popup from 'reactjs-popup';\r\nimport DisplaySelectedVesselDetails from './DisplaySelectedVesselDetails';\r\nimport { withRouter } from 'react-router-dom'\r\nimport PieCharts from '../../components/Others/PieCharts';\r\nimport api from '../api';\r\n\r\nclass ClientHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getAllVoyage();\r\n        this.state = {\r\n            vesselList: [],\r\n            vesselDetails: {\r\n                vesselName: '',\r\n                vesselSize: '',\r\n                cpDate: '',\r\n                loadPort: '',\r\n                dischargePoint: '',\r\n                cargo: '',\r\n                cargoIntake: '',\r\n                ownerName: ''\r\n            },\r\n            tableData: [],\r\n            performanceDetails: {},\r\n            isPeformancePage: false,\r\n            error: false,\r\n            userName: '',\r\n        }\r\n    }\r\n\r\n    getAllVoyage = async () => {\r\n       await api.getAllVoyage({ 'companyName': localStorage.getItem('companyName') }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    vesselList: res.data.vesselList,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                    error: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    error: true,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handlePerformanceClick = e => {\r\n        const { vesselList } = this.state;\r\n        const c = vesselList.find(m => m['_id'] === e.target.id);\r\n        this.props.history.push({\r\n            pathname: '/CheckPerformance',\r\n            state: { detail: c }\r\n        });\r\n    }\r\n\r\n\r\n    // handleVesselClick = e => {\r\n    //     const { vesselList } = this.state;\r\n    //     const c = vesselList.find(m => m['_id'] === e.target.id);\r\n    //     console.log(c.vesselName);\r\n    //     alert(c.vesselName)\r\n    // }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'checkPerformance':\r\n                val = <button style={{ color: 'blue', textAlign: 'center' }} id={rowId} type='button' onClick={this.handlePerformanceClick}>Check Performance</button>;\r\n                break;\r\n            case 'vesselName':\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        let showData;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Fixture List',\r\n                keyColumn: 'id',\r\n                font: 'Arial',\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: '10px'\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: 'vesselName',\r\n                            label: 'Vessel Name',\r\n                            colSize: '50px',\r\n                            dataType: ''\r\n                        },\r\n                        {\r\n                            id: 'cpDate',\r\n                            label: 'CP Date',\r\n                            colSize: '50px',\r\n                        },\r\n                        {\r\n                            id: 'checkPerformance',\r\n                            label: 'Performance',\r\n                            colSize: '50px',\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList.map(({ vesselName, cpDate, _id }) => ({ vesselName, cpDate, id: _id, checkPerformance: true }))\r\n                    ],\r\n                }\r\n            }\r\n\r\n            const ourCount = {};\r\n            let previousYearDate = new Date();\r\n            const pastYear = previousYearDate.getFullYear() - 1;\r\n            previousYearDate.setFullYear(pastYear);\r\n            vesselList.forEach(v => {\r\n                if (!ourCount[v.cargo]) {\r\n                    ourCount[v.cargo] = 0;\r\n                }\r\n                if (new Date(v.cpDate).getTime() <= new Date().getTime() && new Date(v.cpDate).getTime() > previousYearDate.getTime()) {\r\n                    ourCount[v.cargo] += parseInt(v.cargoIntake);\r\n                }\r\n            });\r\n\r\n\r\n            showData = < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                <div style={{ marginTop: '15%', marginLeft: '0%' }}>\r\n                    {/* <DisplaySelectedVesselDetails vesselDetails={ourCount} /> */}\r\n                    <PieCharts vesselDetails={ourCount} />\r\n\r\n                </div>\r\n            </div >\r\n        } else {\r\n            showData = <div style={{ marginTop: '15%' }}> Oops!! There are no business details for you.</div>\r\n        }\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <span>\r\n                    <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                    {showData}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        let vesselDetails = vesselList.find(m => m['_id'] === rowId);\r\n        vesselDetails = (({ vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }) => (\r\n            { vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }))(vesselDetails);\r\n\r\n        const content = <div>\r\n            <Popup trigger={<a id={rowId} style={{ color: 'blue', textAlign: 'center', textDecoration: 'underline', cursor: 'pointer' }}> {cellVal} </a>}\r\n                modal closeOnDocumentClick >\r\n                <div className='content'>\r\n                    <DisplaySelectedVesselDetails vesselDetails={vesselDetails} />\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientHome);\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass AdminHome extends Component {\r\n\r\n    history;\r\n\r\n    render() {\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/addNewUser'>Add New User </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/viewAllUsers'>View All Users </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', pointerEvents: 'none' }} to='/editUserDetails'>Edit User Details</Link><br /><br />\r\n\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/addNewVessel'>Add New Vessel</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/viewAllVessels'>View All Vessels</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/editVesselDetails'>Edit Vessel Details</Link><br /><br />\r\n\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'green' }} to='/fillVoyageDetails'> Fill Voyage Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'green' }} to='/viewVoyageDetails' >View Voyage Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', pointerEvents: 'none' }} to='/editVoyageDetails'> Edit Voyage Details</Link><br /><br />\r\n\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/fillPerformanceDetails' >Fill Performance Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', pointerEvents: 'none' }} to='/viewPerformanceDetails' >View Performance Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', pointerEvents: 'none' }} to='/editPerformanceDetails' >Edit Performance Details</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminHome);","\r\nimport React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nclass ManagerHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let localRoles = JSON.parse(localStorage.getItem('managerRoles'));\r\n        if (Object.keys(localRoles).length) {\r\n            this.state = {\r\n                arrayItemsRoles: [\r\n                    { role: localRoles.AddUser, to: '/addNewUser', text: 'Add New User' },\r\n                    { role: localRoles.ViewUsers, to: '/viewAllUsers', text: 'View All Users' },\r\n                    { role: localRoles.EditUser, to: '/editUserDetails', text: 'Edit User Details' },\r\n\r\n                    { role: localRoles.AddVessel, to: '/addNewVessel', text: 'Add New Vessel' },\r\n                    { role: localRoles.ViewVessels, to: '/viewAllVessels', text: 'View All Vessels' },\r\n                    { role: localRoles.EditVessels, to: '/editVesselDetails', text: 'Edit Vessel Details' },\r\n\r\n                    { role: localRoles.FillVoyage, to: '/fillVoyageDetails', text: 'Fill Voyage Details' },\r\n                    { role: localRoles.ViewVoyage, to: '/viewVoyageDetails', text: 'View Voyage Details' },\r\n                    { role: localRoles.EditVoyage, to: '/editVoyageDetails', text: 'Edit Voyage Details' },\r\n\r\n                    { role: localRoles.FillPerformance, to: '/fillPerformanceDetails', text: 'Fill Performance Details' },\r\n                    { role: localRoles.ViewPerformance, to: '/viewPerformanceDetails', text: 'View Performance Details' },\r\n                    { role: localRoles.EditPerformance, to: '/editPerformanceDetails', text: 'Edit Performance Details' }]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.arrayItemsRoles.map(function (item, i) {\r\n            return item.role ?\r\n                (<Link style={{ width: '300px', height: '40px', marginRight: '80px' }} key={i} to={item.to}> {item.text} </Link>) :\r\n                ''\r\n        }.bind(this));\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    {data}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\nexport default withRouter(ManagerHome);","import React from 'react';\r\nimport LoginHome from '../Login/LoginHome';\r\nimport ClientHome from '../Client/ClientHome';\r\nimport AdminHome from '../Admin/AdminHome';\r\nimport ManagerHome from '../Manager/ManagerHome';\r\n\r\nfunction Page(props) {\r\n    if (localStorage.getItem('authToken')) {\r\n        switch (localStorage.getItem('userRole').toLowerCase()) {\r\n            case 'admin':\r\n                return <AdminHome/>;\r\n            case 'manager':\r\n                return <ManagerHome/>;\r\n            case 'client':\r\n                return <ClientHome/>;\r\n            default:\r\n                return <LoginHome />;\r\n        }\r\n    }\r\n    return <LoginHome />;\r\n}\r\nexport default Page","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../Others/Page'\r\nimport api from '../api'\r\n\r\nexport default class LoginHome extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: localStorage.getItem('authToken') ? true : false,\r\n        role: localStorage.getItem('userRole') ? localStorage.getItem('userRole') : '',\r\n        errorMsg: '',\r\n        error: localStorage.getItem('authToken') ? false : true\r\n    }\r\n\r\n    // handleLogoutClick = (e) => {\r\n    //     localStorage.setItem('authToken', '');\r\n    //     localStorage.setItem('userRole', '');\r\n    //     localStorage.setItem('userName', '');\r\n    //     this.setState({\r\n    //         isLoggedIn: false,\r\n    //         role: '',\r\n    //         errorMsg: '',\r\n    //         error: false,\r\n    //     });\r\n    // }\r\n\r\n    _handleSubmit = async ({\r\n        username,\r\n        password,\r\n        setSubmitting,\r\n        resetForm,\r\n    }) => {\r\n        this.setState(() => ({\r\n            isLoggedIn: false,\r\n            error: false,\r\n            role: '',\r\n        }));\r\n\r\n        let resp = await api.login({ username, password, });\r\n        resp = resp.data;\r\n        setSubmitting(false);\r\n        if (!resp.status) {\r\n            this.setState(() => ({\r\n                isLoggedIn: false,\r\n                errorMsg: resp.err,\r\n                error: true,\r\n                role: '',\r\n            }))\r\n            return;\r\n        } else {\r\n            this.setState(() => ({\r\n                isLoggedIn: true,\r\n                error: false,\r\n                errorMsg: '',\r\n            }))\r\n            localStorage.setItem('authToken', resp.token);\r\n            localStorage.setItem('userRole', resp.role);\r\n            localStorage.setItem('displayName', resp.displayName);\r\n            localStorage.setItem('userName', resp.userName);\r\n            localStorage.setItem('companyName', resp.companyName);\r\n            localStorage.setItem('managerRoles', JSON.stringify(resp.managerRoles));\r\n        }\r\n\r\n        resetForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                }}\r\n                validationSchema={object().shape({\r\n                    username: string().required('Please enter a valid email address.'),\r\n                    password: string().required('Password is required'),\r\n                })}\r\n                onSubmit={(\r\n                    { username, password },\r\n                    { setSubmitting, resetForm }\r\n                ) =>\r\n                    this._handleSubmit({\r\n                        username,\r\n                        password,\r\n                        setSubmitting,\r\n                        resetForm,\r\n                    })\r\n                }\r\n                render={props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isValid,\r\n                        isSubmitting,\r\n                    } = props\r\n\r\n                    const { error } = this.state;\r\n                    const authToken = localStorage.getItem('authToken');\r\n                    const userRole = localStorage.getItem('userRole');\r\n                    let showData;\r\n                    if (isSubmitting) {\r\n                        showData = <Spinner />\r\n                    } else if (userRole && !error) {\r\n                        showData = <div>\r\n                            <Page />\r\n                            {/* <LogoutButton onClick={this.handleLogoutClick} ></LogoutButton> */}\r\n                        </div>\r\n                    } else {\r\n                        showData = <div className='ForgotPasswordForm'>\r\n                            <Typography variant='h4' style={{ margin: '10px 0' }}> Login </Typography>\r\n                            <Paper className='form form--wrapper' elevation={10}>\r\n                                <form className='form' onSubmit={handleSubmit}>\r\n                                    <FormControl fullWidth margin='dense'>\r\n                                        <InputLabel htmlFor='username' error={Boolean(touched.username && errors.username)}>\r\n                                            {'Enter your username'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id='username'\r\n                                            name='username'\r\n                                            type='email'\r\n                                            required\r\n                                            autoComplete='off'\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.username && errors.username)} />\r\n                                        <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                                            {touched.username && errors.username ? errors.username : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        fullWidth\r\n                                        margin='dense'\r\n                                        error={Boolean(touched.password && errors.password)}>\r\n                                        <InputLabel htmlFor='password' error={Boolean(touched.password && errors.password)}>\r\n                                            {'Enter your password'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id='password'\r\n                                            name='password'\r\n                                            type='password'\r\n                                            autoComplete='off'\r\n                                            value={values.password}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.password && errors.password)}\r\n                                        />\r\n                                        <FormHelperText error={Boolean(touched.password && errors.password)}>\r\n                                            {touched.password && errors.password ? errors.password : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormHelperText error={Boolean(this.state.error)}>\r\n                                        {this.state.error ? this.state.errorMsg : ''}\r\n                                    </FormHelperText>\r\n                                    <Button\r\n                                        type='submit'\r\n                                        variant='contained'\r\n                                        size='small'\r\n                                        color='primary'\r\n                                        disabled={Boolean(!isValid || isSubmitting)}\r\n                                        style={{ margin: '16px' }}>\r\n                                        Login </Button>\r\n                                    <Link style={{ color: 'black' }} to='/forgotPassword'>Forgot Password !!</Link>\r\n                                </form>\r\n                            </Paper>\r\n                        </div>\r\n                    }\r\n                    return (\r\n                        showData\r\n                    )\r\n                }\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Zoom } from 'react-slideshow-image';\r\n\r\nconst images = [\r\n  '/assests/images/ship1.jpg',\r\n  '/assests/images/ship2.jpg',\r\n  '/assests/images/ship3.jpg',\r\n];\r\n\r\nconst zoomOutProperties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n  scale: 2,\r\n  arrows: true\r\n}\r\n\r\nconst SlideShow = () => {\r\n  return (\r\n    <div className='slide-container'>\r\n      <Zoom {...zoomOutProperties}>\r\n        {\r\n          images.map((each, index) => <img key={index} style={{ width: '100%' }} src={each} alt={each} />)\r\n        }\r\n      </Zoom>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SlideShow;","import React from 'react';\r\nimport Slideshow from './SlideShow';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=''>\r\n            <h2>Welcome to Bulkcom Shipping</h2>\r\n            <Slideshow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.toggleHeaderState = this.toggleHeaderState.bind(this);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n    this.state = {\r\n      showHeader: props.toggleState,\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      showHeader: !this.state.showHeader,\r\n    })\r\n  }\r\n\r\n  toggleHeaderState() {\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.showHeader ? 'menu_open menu' : 'menu'} id='main_menu'>\r\n        <div className='header_right'>\r\n          <div className='explore' id='menu_label'>explore</div>\r\n          <img src='https://aegisuae.com/resources/img/arrow_white.svg' alt='arrow' className='arrow' />\r\n          <button className='js-toggle-nav c-btn-nav -inited' id='menu_button' onClick={this.handleClick} >\r\n            <div className='c-btn-nav_burger'>\r\n              <span className='c-burger_top'></span>\r\n              <span className='c-burger_middle'></span>\r\n              <span className='c-burger_bottom'></span>\r\n              <div className='c-close-burger_top'></div>\r\n              <div className='c-close-burger_bottom'></div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div className={this.state.showHeader ? 'left_menu_open left_menu' : 'left_menu'} id='left_menu' scroll='no'>\r\n          <ul className={this.state.showHeader ? 'opened main_nav' : 'main_nav'} id='navigation'>\r\n            <li>\r\n              <Link className='' to='/' onClick={this.toggleHeaderState}>\r\n                Home\r\n              <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='' to='/about' onClick={this.toggleHeaderState}>\r\n                About\r\n            <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='' to='/location' onClick={this.toggleHeaderState}>\r\n                Locations\r\n            <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            {localStorage.getItem('authToken') ? (\r\n              <li>\r\n                <Link className='' to='/login' onClick={this.logoutAndToggleState}>\r\n                  Logout\r\n             <span className='menu_line'></span>\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n                <li>\r\n                  <Link className='' to='/login' onClick={this.toggleHeaderState}>\r\n                    Login\r\n              <span className='menu_line'></span>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Footer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer className='navbar navbar-dark bg-primary fixed-top'>\r\n        <div className='bottom_footer'>\r\n          <Link className='navbar-brand' to='/'>\r\n            Home\r\n            </Link>\r\n          <Link className='navbar-brand' to='/about'>\r\n            About\r\n            </Link>\r\n          <Link className='navbar-brand' to='/location'>\r\n            Locations\r\n            </Link>\r\n          {localStorage.getItem('authToken') ? (\r\n            <Link className='navbar-brand' to='/login' onClick={this.logoutAndToggleState}>\r\n              Logout\r\n             </Link>) : (\r\n              <Link className='navbar-brand' to='/login'>\r\n                Login\r\n                </Link>\r\n            )}\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React,{Component} from 'react';\r\n\r\nclass CheckPerformance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.location.state);\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                Check Performance\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CheckPerformance;","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem, getApiActionCal } from '../action/action';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addItem: item => {\r\n            dispatch(addItem(item))\r\n        },\r\n        getApiCallData: () => {\r\n            dispatch(getApiActionCal())\r\n        }\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        apiData: state.apiData\r\n    };\r\n}\r\n\r\nclass FirstComponentStateFul extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 1,\r\n            items: ['bunty', 'babli'],\r\n            apiData: []\r\n        }\r\n        this.itemList = '';\r\n        this.incrementCounter = this.incrementCounter.bind(this);\r\n        this.addItemTo = this.addItemTo.bind(this);\r\n        this.addItems = this.addItems.bind(this);\r\n        this.getApiCall = this.getApiCall.bind(this);\r\n    }\r\n    addItemTo(event) {\r\n        this.itemList = event.target.value;\r\n    }\r\n    addItems() {\r\n        this.props.addItem(this.itemList)\r\n    }\r\n    incrementCounter() {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n\r\n    }\r\n    getApiCall() {\r\n        this.props.getApiCallData();\r\n    }\r\n    componentDidUpdate() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    componentDidMount() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>you clicked it {this.state.count} times</p>\r\n                <button onClick={this.incrementCounter}></button>\r\n                <input type='text' onChange={this.addItemTo} />\r\n                <button onClick={this.addItems}></button>\r\n                <ul>\r\n                    {\r\n                        this.props.items.map(item =>\r\n                            <li key={item}>{item}</li>)\r\n                    }\r\n\r\n                </ul>\r\n                <button onClick={this.getApiCall}>get API call</button>\r\n                <ul>\r\n                    {\r\n                        this.props.apiData.map(item =>\r\n                            <li key={item.id}>{item.title}</li>)\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Form = connect(mapStatetoProps, mapDispatchToProps)(FirstComponentStateFul)\r\nexport default Form;","export function addItem(payload) {\r\n    return {\r\n        type: 'ADD',\r\n        payload\r\n    }\r\n}\r\nexport function getApiActionCal() {\r\n    return {\r\n        type: 'APICALL'\r\n    }\r\n}\r\nexport function getDataLoaded(payload) {\r\n    return {\r\n        type: 'DATA-LOADED',\r\n        payload\r\n    }\r\n}\r\nexport function getDataError() {\r\n    return {\r\n        type: 'DATA-ERROR'\r\n    }\r\n}","import React from 'react'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction='up' {...props} />\r\n}\r\n\r\nexport default function Alert({\r\n  handleClose,\r\n  handleSubmit,\r\n  isOpen,\r\n  hasTwoButtons = false,\r\n  submitButtonText,\r\n  title,\r\n  text,\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      transition={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby='alert-dialog-slide-title'\r\n      aria-describedby='alert-dialog-slide-description'\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{text}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {hasTwoButtons ? (\r\n          <Button onClick={handleClose} variant='raised' color='primary'>\r\n            {'CANCEL'}\r\n          </Button>\r\n        ) : null}\r\n        <Button onClick={handleSubmit} color='primary'>\r\n          {submitButtonText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, ref, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Alert from '../Others/Alert';\r\nimport api from '../api'\r\n\r\nexport default class FormPasswordReset extends Component {\r\n\r\n  state = {\r\n    passChangeSuccess: false,\r\n    user: this.props.username,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _renderModal = () => {\r\n    const onClick = () => {\r\n      this.setState(() => ({ passChangeSuccess: false }))\r\n    }\r\n\r\n    return (\r\n      <Alert\r\n        isOpen={this.state.passChangeSuccess}\r\n        onClose={this._handleClose}\r\n        handleSubmit={onClick}\r\n        title='Password Reset'\r\n        text='Your password was changed successfully'\r\n        submitButtonText='Done'\r\n      />\r\n    )\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    confirmPass,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n\r\n    let resp = await api.updatePassword({ user: this.state.user, confirmPass });\r\n    resp = resp.data;\r\n    setSubmitting(false);\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n      }));\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        passChangeSuccess: true,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newPass: '',\r\n          confirmPass: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          newPass: string().required('New password is required'),\r\n          confirmPass: string()\r\n            .oneOf([ref('newPass')], 'Passwords do not match')\r\n            .required('Password is required'),\r\n        })}\r\n        onSubmit={(\r\n          { newPass, confirmPass },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            newPass,\r\n            confirmPass,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n          return isSubmitting ? (\r\n            <Spinner />\r\n          ) : (\r\n              <Paper className='form form--wrapper' elevation={10}>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin='dense' error={Boolean(touched.newPass && errors.newPass)}>\r\n                    <InputLabel htmlFor='password-new' error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {'New Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='password-new'\r\n                      name='newPass'\r\n                      type='password'\r\n                      autoComplete='off'\r\n                      value={values.newPass}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.newPass && errors.newPass)} />\r\n                    <FormHelperText error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {touched.newPass && errors.newPass ? errors.newPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl fullWidth margin='dense' error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                    <InputLabel htmlFor='password-confirm' error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {'Confirm Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='password-confirm'\r\n                      name='confirmPass'\r\n                      type='password'\r\n                      value={values.confirmPass}\r\n                      autoComplete='off'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.confirmPass && errors.confirmPass)} />\r\n                    <FormHelperText error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {touched.confirmPass && errors.confirmPass ? errors.confirmPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type='submit'\r\n                    variant='raised'\r\n                    color='primary'\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }} >\r\n                    {'Reset Password'}\r\n                  </Button>\r\n                </form>\r\n                {this._renderModal()}\r\n              </Paper>\r\n            )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport FormPasswordReset from './FormPasswordReset';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport api from '../api'\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    passChangeSuccess: false,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    username,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    let resp = await api.checkUsername({ username });\r\n    setSubmitting(false);\r\n    resp = resp.data;\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n        error: true,\r\n        errorMsg: 'Username not found'\r\n      }))\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        username,\r\n        passChangeSuccess: true,\r\n        error: false,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          username: string().required('Please enter a valid email address.'),\r\n        })}\r\n        onSubmit={(\r\n          { username },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            username,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n\r\n          let showData;\r\n          if (isSubmitting) {\r\n            showData = <Spinner />\r\n          } else if (this.state.passChangeSuccess) {\r\n            showData = <div className='ForgotPasswordForm'>\r\n              <Typography variant='title' style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <FormPasswordReset username={this.state.username} />\r\n            </div>\r\n          } else {\r\n            showData = <div className='ForgotPasswordForm'>\r\n              <Typography variant='title' style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <Paper className='form form--wrapper' elevation={10}>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin='dense'>\r\n                    <InputLabel\r\n                      htmlFor='username'\r\n                      error={Boolean(touched.username && errors.username)}>\r\n                      {'Enter your username'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='username'\r\n                      name='username'\r\n                      type='email'\r\n                      autoComplete='off'\r\n                      value={values.username}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.username && errors.username)}\r\n                    />\r\n                    <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                      {touched.username && errors.username ? errors.username : ''}\r\n                    </FormHelperText>\r\n                    <FormHelperText error={Boolean(this.state.error)}>\r\n                      {this.state.error ? this.state.errorMsg : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type='submit'\r\n                    variant='raised'\r\n                    color='primary'\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }}>\r\n                    {'Check Username'}\r\n                  </Button>\r\n                </form>\r\n              </Paper>\r\n            </div>\r\n          }\r\n          return (\r\n            showData\r\n          )\r\n        }\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../../../css/Admin.css';\r\nimport Select from 'react-select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport api from '../../api';\r\n\r\nclass AddNewUser extends Component {\r\n\r\n  userDetails = {\r\n    userName: '',\r\n    companyName: '',\r\n    displayName: '',\r\n    password: '',\r\n    role: '',\r\n    clientType: '',\r\n    success: true,\r\n    errorMsg: '',\r\n    managerRoles: {\r\n      AddUser: false,\r\n      ViewUsers: false,\r\n      EditUser: false,\r\n      AddVessel: false,\r\n      ViewVessels: false,\r\n      EditVessels: false,\r\n      FillVoyage: false,\r\n      ViewVoyage: false,\r\n      EditVoyage: false,\r\n      FillPerformance: false,\r\n      ViewPerformance: false,\r\n      EditPerformance: false,\r\n    },\r\n  };\r\n\r\n  roles = [{ label: 'Client', value: 'Client' }, { label: 'Manager', value: 'Manager' }];\r\n  clientType = [{ label: 'Owner', value: 'Owner' }, { label: 'Charterer', value: 'Charterer' }];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.userDetails };\r\n    this.handleUserDetailsChange = this.handleUserDetailsChange.bind(this);\r\n    this.handleRoleChange = this.handleRoleChange.bind(this);\r\n    this.handleClientTypeChange = this.handleClientTypeChange.bind(this);\r\n    this.handleAddNewUserSubmit = this.handleAddNewUserSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleUserDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleMultiSelect = (event) => {\r\n    console.log(event);\r\n    this.setState({\r\n      ...this.state, managerRoles: {\r\n        ...this.state.managerRoles,\r\n        [event.target.name]: event.target.checked\r\n      }\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  handleRoleChange = e => {\r\n    this.setState({\r\n      role: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  handleClientTypeChange = e => {\r\n    this.setState({\r\n      clientType: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  async handleAddNewUserSubmit(event) {\r\n    event.preventDefault();\r\n    const { userName, password, displayName, companyName, role, clientType, managerRoles } = this.state;\r\n    if (!userName || !displayName || !password || !role || !companyName || (role === 'Client' && !clientType)) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (role === 'Manager') {\r\n      const { AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance } = managerRoles;\r\n      const error = [AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance].filter((v) => v).length < 1;\r\n      if (error) {\r\n        this.setState({\r\n          success: false,\r\n          errorMsg: 'Please select minimum one role'\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!clientType) {\r\n      this.state.clientType = role;\r\n    }\r\n\r\n    let data = await api.insertUserDetails({ ...this.state });\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      if (data.data.status.errmsg.indexOf('duplicate key error') >= 0) {\r\n        data.data.status.errmsg = 'Username already exits.'\r\n      }\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('userDetailsForm').reset();\r\n      this.setState({\r\n        ...this.userDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New user created = ' + userName\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const role = this.state.role;\r\n    const { AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance } = this.state.managerRoles;\r\n    const error = [AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance].filter((v) => v).length < 1;\r\n    let tableData;\r\n    if (role === 'Client') {\r\n      tableData = <tr>\r\n        <td>\r\n          <label>\r\n            Client Type *\r\n        </label>\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.clientType.filter(({ value }) => value === this.state.clientType)}\r\n            onChange={this.handleClientTypeChange}\r\n            options={this.clientType}\r\n            placeholder='Select Client Type'\r\n            name='clientType'\r\n          />\r\n        </td>\r\n      </tr>\r\n    } else if (role === 'Manager') {\r\n      tableData = <tr>\r\n        <td>\r\n          <label>\r\n            Select Manager Roles *\r\n          </label>\r\n        </td>\r\n        <td>\r\n          <FormControl required error={error} component='fieldset' style={{ display: 'flex' }}>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox checked={AddUser} onChange={this.handleMultiSelect} name='AddUser' />}\r\n                label='Add New User'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewUsers} onChange={this.handleMultiSelect} name='ViewUsers' />}\r\n                label='View All Users'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditUser} onChange={this.handleMultiSelect} name='EditUser' />}\r\n                label='Edit User Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={AddVessel} onChange={this.handleMultiSelect} name='AddVessel' />}\r\n                label='Add New Vessel'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewVessels} onChange={this.handleMultiSelect} name='ViewVessels' />}\r\n                label='View All Vessels'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditVessels} onChange={this.handleMultiSelect} name='EditVessels' />}\r\n                label='Edit Vessel Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={FillVoyage} onChange={this.handleMultiSelect} name='FillVoyage' />}\r\n                label='Fill Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewVoyage} onChange={this.handleMultiSelect} name='ViewVoyage' />}\r\n                label='View All Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditVoyage} onChange={this.handleMultiSelect} name='EditVoyage' />}\r\n                label='Edit Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={FillPerformance} onChange={this.handleMultiSelect} name='FillPerformance' />}\r\n                label='Fill Performance Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewPerformance} onChange={this.handleMultiSelect} name='ViewPerformance' />}\r\n                label='View All Performance Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditPerformance} onChange={this.handleMultiSelect} name='EditPerformance' />}\r\n                label='Edit Performance Details'\r\n              />\r\n            </FormGroup>\r\n            <FormHelperText>Please select minimum one role</FormHelperText>\r\n          </FormControl>\r\n        </td>\r\n      </tr>\r\n    }\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New User</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='userDetailsForm' onSubmit={this.handleAddNewUserSubmit} style={{ margin: '1%' }} autoComplete='off'>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    User Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='email' name='userName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Company Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='companyName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Display Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='displayName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Password *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='password' name='password' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Role *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Select\r\n                      value={this.roles.filter(({ value }) => value === this.state.role)}\r\n                      onChange={this.handleRoleChange}\r\n                      options={this.roles}\r\n                      placeholder='Select Role'\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              {tableData}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewUser;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport api from '../../api';\r\n\r\nclass ViewAllUsers extends Component {\r\n\r\n    localState = {\r\n        clientList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await api.getAllUserDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                clientList: res.data.clientList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleEditClick = e => {\r\n        const { clientList } = this.state;\r\n        const c = clientList.find(m => m['id'] === e.target.id);\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'edit':\r\n                val = <button style={{ color: 'blue', textAlign: 'center', marginLeft: '20%' }} id={rowId} type='button' onClick={this.handleEditClick}>Edit</button>;\r\n                break;\r\n            default:\r\n                val = <div style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { clientList } = this.state;\r\n        let options;\r\n        if (clientList.length) {\r\n            options = {\r\n                title: 'User List',\r\n                keyColumn: 'id',\r\n                font: 'Arial',\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: '10px'\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        // {\r\n                        //     id: 'edit',\r\n                        //     label: 'Edit',\r\n                        //     colSize: '50px',\r\n                        // },\r\n                        {\r\n                            id: 'userName',\r\n                            label: 'User Name',\r\n                            colSize: '50px',\r\n                        },\r\n                        {\r\n                            id: 'displayName',\r\n                            label: 'Display Name',\r\n                            colSize: '50px',\r\n                        },\r\n                        {\r\n                            id: 'companyName',\r\n                            label: 'Company Name',\r\n                            colSize: '50px',\r\n                        },\r\n                        {\r\n                            id: 'role',\r\n                            label: 'Role',\r\n                            colSize: '50px',\r\n                        },\r\n                        {\r\n                            id: 'clientType',\r\n                            label: 'User Type',\r\n                            colSize: '50px',\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...clientList.map(({ userName, displayName, companyName, role, clientType, id }) => ({ userName, displayName, companyName, role, clientType, id, edit: true }))\r\n                    ],\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllUsers;\r\n","\r\nimport React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { TextField, Button, IconButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddCircleTwoToneIcon from '@material-ui/icons/AddCircleTwoTone';\r\n\r\nconst AddDynamicField = props => {\r\n    return (\r\n        <>\r\n            <Popup trigger={<IconButton aria-label='Add new field'><AddCircleTwoToneIcon /></IconButton>}>\r\n                <form id='newFieldForm' autoComplete='off' onSubmit={props.submitNewFieldDetails}>\r\n                    <TextField\r\n                        required\r\n                        inputProps={{ maxLength: 25 }}\r\n                        id='fieldLabel'\r\n                        label='Field Label'\r\n                        autoComplete='off'\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        inputProps={{ maxLength: 50 }}\r\n                        id='fieldValue'\r\n                        label='Field Value'\r\n                        autoComplete='off'\r\n                    />\r\n                    <Button\r\n                        type='submit'\r\n                        style={{ marginTop: '10%' }}\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'\r\n                        startIcon={<SaveIcon />}> Save</Button>\r\n                </form>\r\n            </Popup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddDynamicField","import React, { Component } from 'react';\r\nimport '../../../css/Admin.css';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button';\r\nimport api from '../../api';\r\nimport AddDynamicField from '../common/AddDynamicField';\r\n\r\nclass AddNewVessel extends Component {\r\n\r\n  localState = {\r\n    vesselDetails: {\r\n      vesselName: '',\r\n      IMO: '',\r\n      DWT: '',\r\n      built: '',\r\n      LOA: '',\r\n      beam: '',\r\n      cranes: '',\r\n      grabs: '',\r\n      otherFields: {},\r\n    },\r\n    success: true,\r\n    errorMsg: '',\r\n    newFields: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.localState };\r\n    this.handleVesselDetailsChange = this.handleVesselDetailsChange.bind(this);\r\n    this.handleAddNewVesselSubmit = this.handleAddNewVesselSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.submitNewFieldDetails = this.submitNewFieldDetails.bind(this);\r\n    this.handleNewFieldDetailsChange = this.handleNewFieldDetailsChange.bind(this);\r\n  }\r\n\r\n  handleVesselDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const { vesselDetails } = this.state;\r\n    Object.assign(vesselDetails, { [name]: value.trim() });\r\n    this.setState({ success: true, errorMsg: '', vesselDetails });\r\n  }\r\n\r\n  handleBackButton = () => this.props.history.goBack();\r\n\r\n  async handleAddNewVesselSubmit(event) {\r\n    event.preventDefault();\r\n    const data = await api.insertVesselDetails({ ...this.state.vesselDetails });\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.localState,\r\n        success: false,\r\n        errorMsg: 'Success!! New vessel created = ' + this.state.vesselDetails.vesselName,\r\n      });\r\n      document.getElementById('vesselDetailsForm').reset();\r\n      if (document.getElementById('newFieldForm')) {\r\n        document.getElementById('newFieldForm').reset();\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  submitNewFieldDetails = e => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    const inputs = e.target.querySelectorAll('input');\r\n    if (inputs && inputs.length) {\r\n      const vesselDetails = this.state.vesselDetails;\r\n      Object.assign(vesselDetails.otherFields, { [inputs[0].value.trim()]: inputs[1].value.trim() });\r\n      this.setState({ vesselDetails });\r\n      document.getElementById('newFieldForm').reset();\r\n      this.displayOtherFields();\r\n    }\r\n  };\r\n\r\n  handleNewFieldDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const otherFields = this.state.vesselDetails.otherFields;\r\n    Object.assign(otherFields, { [name]: value.trim() });\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        otherFields\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errorMsg, success, newFields } = this.state;\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' size='small' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}> Back </Button>\r\n        <h2>Add New Vessel</h2>\r\n        <AddDynamicField submitNewFieldDetails={this.submitNewFieldDetails} />\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!success)}>\r\n          {success ? '' : errorMsg}\r\n        </FormHelperText>\r\n\r\n        <form id='vesselDetailsForm' onSubmit={this.handleAddNewVesselSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='vesselName' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IMO *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='IMO' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Flag\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='flag' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Built Year\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='built' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    DWT (MT) *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DWT' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Draft (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='draft' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    LOA (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='LOA' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Beam (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='beam' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    GRT (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='GRT' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    NRT (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='NRT' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    TPC (MT/CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='TPC' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grain Capacity (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='grainCapacity' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bale Capacity (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='baleCapacity' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cranes (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cranes' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grabs (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='grabs' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              {newFields}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayOtherFields() {\r\n    const otherFields = this.state.vesselDetails.otherFields;\r\n    let data = [];\r\n    if (otherFields && Object.keys(otherFields).length) {\r\n      const keys = Object.keys(otherFields);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        data.push(<tr key={i}>\r\n          <td key={keys[i]}>\r\n            <label>\r\n              {keys[i]}\r\n            </label>\r\n          </td>\r\n          <td key={otherFields[keys[i]]}>\r\n            <input type='text' maxLength={50} required name={keys[i]} onChange={this.handleNewFieldDetailsChange} defaultValue={otherFields[keys[i]]} />\r\n          </td>\r\n        </tr>)\r\n      }\r\n    }\r\n    this.setState({ newFields: data });\r\n  }\r\n\r\n}\r\n\r\nexport default AddNewVessel;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass ViewAllVessels extends Component {\r\n\r\n    localState = {\r\n        vesselList: [],\r\n        isEditPage: false,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (props && props.history && props.history.location.pathname === '/editVesselDetails') {\r\n            this.localState.isEditPage = true;\r\n        }\r\n        this.state = { ...this.localState };\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await api.getAllVesselsDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                vesselList: res.data.vesselList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'otherFields':\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div title={cellVal} style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList, isEditPage } = this.state;\r\n        let options;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Vessel List',\r\n                keyColumn: '_id',\r\n                font: 'Arial',\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '80%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: '10px'\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                    canRefreshRows: true,\r\n                    rowsPerPage: {\r\n                        available: [5, 10, 25, 50, 100],\r\n                        selected: 10\r\n                    },\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: 'vesselName',\r\n                            label: 'Vessel Name',\r\n                            colSize: '80px',\r\n                            editable: false,\r\n                        }, {\r\n                            id: 'IMO',\r\n                            label: 'IMO',\r\n                            colSize: '80px',\r\n                            editable: false,\r\n                        }, {\r\n                            id: 'flag',\r\n                            label: 'Flag',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'built',\r\n                            label: 'Built Year',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'DWT',\r\n                            label: ' DWT (MT)',\r\n                            colSize: '80px',\r\n                            editable: false,\r\n                        }, {\r\n                            id: 'draft',\r\n                            label: 'Draft',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'LOA',\r\n                            label: 'LOA (M)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input',\r\n                        }, {\r\n                            id: 'beam',\r\n                            label: 'Beam (M)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'GRT',\r\n                            label: 'GRT (MT)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'NRT',\r\n                            label: 'NRT (MT)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'TPC',\r\n                            label: 'TPC (MT/CBM)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'grainCapacity',\r\n                            label: 'Grain Capacity (CBM)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'baleCapacity',\r\n                            label: 'Bale Capacity (CBM)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        },\r\n                        {\r\n                            id: 'cranes',\r\n                            label: 'Cranes (MT)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        },\r\n                        {\r\n                            id: 'grabs',\r\n                            label: 'Grabs (CBM)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList.map(({ vesselName, IMO, flag, built, DWT, draft, LOA, beam, GRT, NRT, TPC, grainCapacity, baleCapacity, cranes, grabs, _id }) => ({ vesselName, IMO, flag, built, DWT, draft, LOA, beam, GRT, NRT, TPC, grainCapacity, baleCapacity, cranes, grabs, _id, otherFields: true }))\r\n                    ],\r\n                }\r\n            }\r\n            if (isEditPage) {\r\n                options.features.canEdit = true;\r\n                options.features.canDelete = true;\r\n            }\r\n\r\n            if (vesselList.some(f => f.otherFields)) {\r\n                options.data.columns.push({\r\n                    id: 'otherFields',\r\n                    label: 'Other Details',\r\n                    colSize: '80px',\r\n                });\r\n                options.dimensions.datatable.width = '90%';\r\n            }\r\n\r\n        }\r\n\r\n        this.refreshRows = () => {\r\n            window.location.reload();\r\n        };\r\n\r\n        this.actionsRow = async e => {\r\n            if (!e || !e.type) {\r\n                return;\r\n            }\r\n\r\n            switch (e.type) {\r\n                case 'save':\r\n                    await api.updateVessel(e.payload);\r\n                    break;\r\n                case 'delete':\r\n                    let resp = await api.deleteVessel(e.payload['_id']);\r\n                    if (resp.data.status) {\r\n                        vesselList = vesselList.filter(f => f['_id'] !== e.payload['_id']);\r\n                        options.data.rows = vesselList;\r\n                    } else {\r\n                        this.refreshRows();\r\n                    }\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' className={'tooltipBoundary'} style={{ margin: '2% 0 6% 2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped actions={this.actionsRow} refreshRows={this.refreshRows} CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        if (!vesselList.some(f => f.otherFields)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = vesselList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.otherFields && Object.keys(vsl.otherFields).length) {\r\n            return content =\r\n                <Popup\r\n                    trigger={\r\n                        <Button\r\n                            variant='contained'\r\n                            size='small'\r\n                            color='primary'\r\n                        >\r\n                            Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'\r\n                >\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.otherFields} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ViewAllVessels;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../../../css/Admin.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Select from 'react-select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport api from '../../api';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport AddDynamicField from '../common/AddDynamicField';\r\n\r\n\r\nclass FillVoyageDetails extends Component {\r\n\r\n  localState = {\r\n    voyageDetails: {\r\n      chartererName: '',\r\n      vesselName: '',\r\n      vesselSize: '',\r\n      cpDate: new Date(),\r\n      loadPort: '',\r\n      cargo: '',\r\n      cargoIntake: '',\r\n      ownerName: '',\r\n      shipper: '',\r\n      loadPortAgent: '',\r\n      dischargePoint: '',\r\n      receiver: '',\r\n      onHireSurveyor: '',\r\n      offHireSurveyor: '',\r\n      bunkerSupplier: '',\r\n      bunkerTrader: '',\r\n      pniInsurance: '',\r\n      weatherRoutingCompany: '',\r\n      fieldVisibility: {},\r\n      otherFields: {}\r\n    },\r\n    clientList: [],\r\n    vesselList: [],\r\n    newFields: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.localState };\r\n    this.handleAdminChange = this.handleAdminChange.bind(this);\r\n    this.handleVesselDetailSubmit = this.handleVesselDetailSubmit.bind(this);\r\n    this.handleChartererNameChange = this.handleChartererNameChange.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAllClientList();\r\n    this.getAllVesselsList();\r\n  }\r\n\r\n  handleChartererNameChange = e => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { chartererName: e.value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleVesselNameChange = e => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { vesselName: e.value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleAdminChange = e => {\r\n    e.preventDefault();\r\n    const { value, name } = e.target;\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { [name]: value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleDateFieldChange = value => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { cpDate: value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleCheckBoxChange = e => {\r\n    const { checked, name } = e.target;\r\n    const { voyageDetails } = this.state;\r\n    let { fieldVisibility } = voyageDetails;\r\n    if (!fieldVisibility[name]) {\r\n      Object.assign(fieldVisibility, { [name]: checked });\r\n    } else if (fieldVisibility[name] && !checked) {\r\n      delete fieldVisibility[name];\r\n    }\r\n    this.setState({\r\n      voyageDetails: {\r\n        ...this.state.voyageDetails,\r\n        fieldVisibility\r\n      }\r\n    });\r\n  }\r\n\r\n  handleBackButton = () => this.props.history.goBack();\r\n\r\n  getAllClientList = async () => {\r\n    const res = await api.getAllClientList();\r\n    if (res.data.status) {\r\n      const clientList = res.data.clientList.sort().map(v => ({\r\n        label: v, value: v\r\n      }));\r\n      this.setState({ clientList, error: false });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  getAllVesselsList = async () => {\r\n    const res = await api.getAllVesselsList();\r\n    if (res.data.status) {\r\n      const vesselList = res.data.vesselList.map(m => m.vesselName + '_' + m.DWT).sort().map(v => ({\r\n        label: v, value: v\r\n      }));\r\n      this.setState({ vesselList, error: false });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  submitNewFieldDetails = e => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    const inputs = e.target.querySelectorAll('input');\r\n    if (inputs && inputs.length) {\r\n      const voyageDetails = this.state.voyageDetails;\r\n      Object.assign(voyageDetails.otherFields, { [inputs[0].value.trim()]: inputs[1].value.trim() });\r\n      this.setState({ voyageDetails });\r\n      document.getElementById('newFieldForm').reset();\r\n      this.displayOtherFields();\r\n    }\r\n  };\r\n\r\n  async handleVesselDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { voyageDetails } = this.state;\r\n    const { chartererName, vesselName, cpDate } = voyageDetails;\r\n    if (!chartererName || !vesselName || !cpDate.toString()) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = await api.insertPerformanceData({ cpDate, vesselName, chartererName, isDetailsFilled: false });\r\n    data = await api.insertVoyageData({ voyageDetails });\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.localState.voyageDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! Voyage Details saved for = ' + chartererName\r\n      });\r\n      document.getElementById('voyageDetailsForm').reset();\r\n      if (document.getElementById('newFieldForm')) {\r\n        document.getElementById('newFieldForm').reset();\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { clientList, vesselList, newFields } = this.state;\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <h2>Fill Voyage Details</h2>\r\n        <AddDynamicField submitNewFieldDetails={this.submitNewFieldDetails} />\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='voyageDetailsForm' onSubmit={this.handleVesselDetailSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n                <th>Visible</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Charterer Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={clientList.filter(({ value }) => value === this.state.voyageDetails.chartererName)}\r\n                    onChange={this.handleChartererNameChange}\r\n                    options={clientList}\r\n                    placeholder='Select Charterer Name'\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={vesselList.filter(({ value }) => value === this.state.voyageDetails.vesselName)}\r\n                    onChange={this.handleVesselNameChange}\r\n                    options={vesselList}\r\n                    placeholder='Select Vessel Name'\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Size\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='vesselSize' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='vesselSize'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    CP Date *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <DatePicker selected={this.state.voyageDetails.cpDate} onChange={this.handleDateFieldChange} value={this.state.voyageDetails.cpDate} required autoComplete='off' maxDate={new Date()}\r\n                    placeholderText='Select a date before 1 day in the future' />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='loadPort' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='loadPort'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Point\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='dischargePoint' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='dischargePoint'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cargo' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='cargo'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Intake\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cargoIntake' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='cargoIntake'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Owner Name\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ownerName' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='ownerName'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Shipper\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='shipper' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='shipper'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='loadPortAgent' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='loadPortAgent'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='dischargePortAgent' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='dischargePortAgent'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Receiver\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='receiver' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='receiver'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    On Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='onHireSurveyor' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='onHireSurveyor'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Off Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='offHireSurveyor' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='offHireSurveyor'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Supplier\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerSupplier' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='bunkerSupplier'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Trader\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerTrader' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='bunkerTrader'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='pniInsurance' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='pniInsurance'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Weather Routing Company\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='weatherRoutingCompany' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='weatherRoutingCompany'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              {newFields}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayOtherFields() {\r\n    const otherFields = this.state.voyageDetails.otherFields;\r\n    let data = [];\r\n    if (otherFields && Object.keys(otherFields).length) {\r\n      const keys = Object.keys(otherFields);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        data.push(<tr key={i}>\r\n          <td key={keys[i]}>\r\n            <label>\r\n              {keys[i]}\r\n            </label>\r\n          </td>\r\n          <td key={otherFields[keys[i]]}>\r\n            <input type='text' maxLength={50} required name={keys[i]} onChange={this.handleNewFieldDetailsChange} defaultValue={otherFields[keys[i]]} />\r\n          </td>\r\n          <td>\r\n            <Checkbox name={keys[i]} color='primary' onChange={this.handleCheckBoxChange} />\r\n          </td>\r\n        </tr>)\r\n      }\r\n    }\r\n    this.setState({ newFields: data });\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default FillVoyageDetails;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Button } from '@material-ui/core';\r\nclass ViewVoyageDetails extends Component {\r\n\r\n    localState = {\r\n        voyageList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await api.getAllVoyageDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                voyageList: res.data.voyageList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleEditClick = e => {\r\n        const { voyageList } = this.state;\r\n        const c = voyageList.find(m => m['id'] === e.target.id);\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'otherFields':\r\n                val = this.getPopupContent_OtherFields(cellVal, rowId);\r\n                break;\r\n            case 'fieldVisibility':\r\n                val = this.getPopupContent_FieldVisibility(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div title={cellVal} style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { voyageList } = this.state;\r\n        let options;\r\n        if (voyageList.length) {\r\n            options = {\r\n                title: 'Client List',\r\n                keyColumn: '_id',\r\n                font: 'Arial',\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '90%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: '10px'\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: 'chartererName',\r\n                            label: 'Charterer Name',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'vesselName',\r\n                            label: 'Vessel Name',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'cpDate',\r\n                            label: 'CP Date',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'vesselSize',\r\n                            label: ' Vessel Size',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'loadPort',\r\n                            label: ' Load Port',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'dischargePoint',\r\n                            label: 'Discharge Point',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'cargo',\r\n                            label: 'Cargo',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'cargoIntake',\r\n                            label: ' Cargo Intake',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'ownerName',\r\n                            label: 'Owner Name',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'shipper',\r\n                            label: 'Shipper',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'loadPortAgent',\r\n                            label: 'Load Port Agent',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'dischargePortAgent',\r\n                            label: 'Discharge Port Agent',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'receiver',\r\n                            label: 'Receiver',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'onHireSurveyor',\r\n                            label: 'On Hire Surveyor',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'offHireSurveyor',\r\n                            label: 'Off Hire Surveyor',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'bunkerSupplier',\r\n                            label: 'Bunker Supplier',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'bunkerTrader',\r\n                            label: 'Bunker Trader',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'pniInsurance',\r\n                            label: 'PNI Insurance',\r\n                            colSize: '50px',\r\n                        }, {\r\n                            id: 'weatherRoutingCompany',\r\n                            label: ' Weather Routing Company',\r\n                            colSize: '50px',\r\n                        }\r\n                    ],\r\n                    rows: [\r\n                        ...voyageList.map(({\r\n                            shipper, bunkerSupplier, bunkerTrader, cargo, cargoIntake, chartererName, ownerName, cpDate, dischargePoint, loadPort, loadPortAgent, dischargePortAgent, offHireSurveyor, onHireSurveyor, pniInsurance, receiver, vesselName, vesselSize, weatherRoutingCompany, _id\r\n                        }) => ({\r\n                            shipper, bunkerSupplier, bunkerTrader, cargo, cargoIntake, chartererName, ownerName, cpDate, dischargePoint, loadPort, loadPortAgent, dischargePortAgent, offHireSurveyor, onHireSurveyor, pniInsurance, receiver, vesselName, vesselSize, weatherRoutingCompany, _id, edit: true, otherFields: true, fieldVisibility: true\r\n                        }))\r\n                    ],\r\n                }\r\n            }\r\n            if (voyageList.some(f => f.otherFields)) {\r\n                options.data.columns.push({\r\n                    id: 'otherFields',\r\n                    label: 'Other Details',\r\n                    colSize: '80px',\r\n                });\r\n            }\r\n\r\n            if (voyageList.some(f => f.fieldVisibility)) {\r\n                options.data.columns.push({\r\n                    id: 'fieldVisibility',\r\n                    label: 'Visible',\r\n                    colSize: '80px',\r\n                });\r\n            }\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' className={'tooltipBoundary'} style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    getPopupContent_OtherFields = (cellVal, rowId) => {\r\n        const { voyageList } = this.state;\r\n        if (!voyageList.some(f => f.otherFields)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = voyageList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.otherFields && Object.keys(vsl.otherFields).length) {\r\n            return content =\r\n                <Popup trigger={\r\n                    <Button\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'>\r\n                        Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'>\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.otherFields} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n\r\n\r\n    getPopupContent_FieldVisibility = (cellVal, rowId) => {\r\n        const { voyageList } = this.state;\r\n        if (!voyageList.some(f => f.fieldVisibility)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = voyageList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.fieldVisibility && Object.keys(vsl.fieldVisibility).length) {\r\n            return content =\r\n                <Popup trigger={\r\n                    <Button\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'>\r\n                        Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'>\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.fieldVisibility} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ViewVoyageDetails;\r\n","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass ViewPerformanceDetails extends Component {\r\n\r\n    localState = {\r\n        vesselList: [],\r\n        isEditPage: false,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (props && props.history && props.history.location.pathname === '/editVesselDetails') {\r\n            this.localState.isEditPage = true;\r\n        }\r\n        this.state = { ...this.localState };\r\n        this.getAllVesselDetails();\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    getAllVesselDetails = async () => {\r\n        const res = await api.getAllVesselsDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                vesselList: res.data.vesselList,\r\n                error: false,\r\n            });\r\n\r\n        } else {\r\n            this.setState({ error: true });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'otherFields':\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div title={cellVal} style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList, isEditPage } = this.state;\r\n        let options;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Vessel List',\r\n                keyColumn: '_id',\r\n                font: 'Arial',\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '80%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: '10px'\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                    canRefreshRows: true,\r\n                    rowsPerPage: {\r\n                        available: [5, 10, 25, 50, 100],\r\n                        selected: 10\r\n                    },\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: 'vesselName',\r\n                            label: 'Vessel Name',\r\n                            colSize: '80px',\r\n                            editable: false,\r\n                        }, {\r\n                            id: 'IMO',\r\n                            label: 'IMO',\r\n                            colSize: '80px',\r\n                            editable: false,\r\n                        }, {\r\n                            id: 'flag',\r\n                            label: 'Flag',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'built',\r\n                            label: 'Built Year',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'DWT',\r\n                            label: ' DWT (MT)',\r\n                            colSize: '80px',\r\n                            editable: false,\r\n                        }, {\r\n                            id: 'draft',\r\n                            label: 'Draft',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'LOA',\r\n                            label: 'LOA (M)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input',\r\n                        }, {\r\n                            id: 'beam',\r\n                            label: 'Beam (M)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'GRT',\r\n                            label: 'GRT (MT)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'NRT',\r\n                            label: 'NRT (MT)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'TPC',\r\n                            label: 'TPC (MT/CBM)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'grainCapacity',\r\n                            label: 'Grain Capacity (CBM)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        }, {\r\n                            id: 'baleCapacity',\r\n                            label: 'Bale Capacity (CBM)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        },\r\n                        {\r\n                            id: 'cranes',\r\n                            label: 'Cranes (MT)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        },\r\n                        {\r\n                            id: 'grabs',\r\n                            label: 'Grabs (CBM)',\r\n                            colSize: '80px',\r\n                            editable: true,\r\n                            dataType: 'text',\r\n                            inputType: 'input'\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList.map(({ vesselName, IMO, flag, built, DWT, draft, LOA, beam, GRT, NRT, TPC, grainCapacity, baleCapacity, cranes, grabs, _id }) => ({ vesselName, IMO, flag, built, DWT, draft, LOA, beam, GRT, NRT, TPC, grainCapacity, baleCapacity, cranes, grabs, _id, otherFields: true }))\r\n                    ],\r\n                }\r\n            }\r\n            if (isEditPage) {\r\n                options.features.canEdit = true;\r\n                options.features.canDelete = true;\r\n            }\r\n\r\n            if (vesselList.some(f => f.otherFields)) {\r\n                options.data.columns.push({\r\n                    id: 'otherFields',\r\n                    label: 'Other Details',\r\n                    colSize: '80px',\r\n                });\r\n                options.dimensions.datatable.width = '90%';\r\n            }\r\n\r\n        }\r\n\r\n        this.refreshRows = () => {\r\n            window.location.reload();\r\n        };\r\n\r\n        this.actionsRow = async e => {\r\n            if (!e || !e.type) {\r\n                return;\r\n            }\r\n\r\n            switch (e.type) {\r\n                case 'save':\r\n                    await api.updateVessel(e.payload);\r\n                    break;\r\n                case 'delete':\r\n                    let resp = await api.deleteVessel(e.payload['_id']);\r\n                    if (resp.data.status) {\r\n                        vesselList = vesselList.filter(f => f['_id'] !== e.payload['_id']);\r\n                        options.data.rows = vesselList;\r\n                    } else {\r\n                        this.refreshRows();\r\n                    }\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' className={'tooltipBoundary'} style={{ margin: '2% 0 6% 2%', display: 'flex' }}>\r\n                    <Datatable options={options} tooltip='abc' stripped actions={this.actionsRow} refreshRows={this.refreshRows} CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        if (!vesselList.some(f => f.otherFields)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = vesselList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.otherFields && Object.keys(vsl.otherFields).length) {\r\n            return content =\r\n                <Popup\r\n                    trigger={\r\n                        <Button\r\n                            variant='contained'\r\n                            size='small'\r\n                            color='primary'\r\n                        >\r\n                            Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'\r\n                >\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.otherFields} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ViewPerformanceDetails;\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        localStorage.getItem('userRole') === 'Admin' ||\r\n        localStorage.getItem('userRole') === 'Manager' ||\r\n        localStorage.getItem('userRole') === 'Client'\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/login',\r\n            state: { from: props.location }\r\n          }} />\r\n    )} />\r\n  )\r\n\r\n  export default PrivateRoute;","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst ShowDropDownAdmin = props => {\r\n    const clients = props.state.allClients.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const vessels = props.state.allVslForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const dates = props.state.allCpDatesForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    return (\r\n        <div style={{ display: 'flex', marginTop: '2%' }}>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={clients.filter(({ value }) => value === props.state.selectedClient)}\r\n                    onChange={props.handleClientListChange}\r\n                    options={clients}\r\n                    placeholder='Select Client'\r\n                    isDisabled={!clients || !clients.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={vessels.filter(({ value }) => value === props.state.selectedVessel)}\r\n                    onChange={props.handleVesselListChange}\r\n                    options={vessels}\r\n                    placeholder='Select Vessel'\r\n                    isDisabled={!vessels || !vessels.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={dates.filter(({ value }) => value === props.state.selectedCpDate)}\r\n                    onChange={props.handleCpDateChange}\r\n                    options={dates}\r\n                    placeholder='Select CP Date'\r\n                    isDisabled={!dates || !dates.length}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowDropDownAdmin","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShowDropDownAdmin from '../common/ShowDropDownAdmin';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport '../../../css/Admin.css';\r\nimport api from '../../api';\r\n\r\nclass FillPerformanceDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleVesselListChange = this.handleVesselListChange.bind(this);\r\n    this.handleClientListChange = this.handleClientListChange.bind(this);\r\n    this.handleCpDateChange = this.handleCpDateChange.bind(this);\r\n    this.handlePerformanceDetailSubmit = this.handlePerformanceDetailSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.state = {\r\n      vesselList: [],\r\n      selectedClient: 'SelectClient',\r\n      selectedVessel: 'SelectVessel',\r\n      selectedCpDate: 'SelectCpDate',\r\n      allClients: [],\r\n      allVslForSelectedClient: [],\r\n      allCpDatesForSelectedClient: [],\r\n      error: false,\r\n      performanceDetails: {\r\n\r\n      },\r\n    }\r\n  }\r\n\r\n  handlePerformanceDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      ...this.state,\r\n      performanceDetails: {\r\n        ...this.state.performanceDetails,\r\n        [name]: value.trim(),\r\n      },\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n\r\n\r\n  async componentDidMount() {\r\n    const res = await api.getAllVesselsPerformance({ 'isDetailsFilled': false });\r\n    if (res.data.status) {\r\n      const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n      this.setState({\r\n        vesselList: res.data.vesselList,\r\n        allClients: allClients,\r\n        error: false,\r\n      });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n  \r\n  handleCpDateChange = e => {\r\n    const { vesselList, selectedVessel } = this.state;\r\n    let vesselDetails = vesselList.find(m => m.vesselName === selectedVessel && m.cpDate === e.value);\r\n    vesselDetails = (({ chartererName, vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }) => (\r\n      { chartererName, vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }))(vesselDetails);\r\n    this.setState({\r\n      vesselDetails: vesselDetails,\r\n      selectedCpDate: e.value,\r\n      isPeformancePage: false,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleVesselListChange = async e => {\r\n    const { selectedVessel, vesselList, selectedClient } = this.state;\r\n    if (e.value !== selectedVessel) {\r\n      this.setState({ selectedCpDate: 'SelectCpDate' });\r\n    }\r\n\r\n    const allCpDates = vesselList.filter(f => f.vesselName === e.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n    if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n      this.setState({\r\n        allCpDatesForSelectedClient: [],\r\n        selectedVessel: e.value,\r\n        selectedCpDate: 'SelectCpDate',\r\n        isPeformancePage: false,\r\n        error: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allCpDatesForSelectedClient: allCpDates,\r\n      selectedVessel: e.value,\r\n      selectedCpDate: 'SelectCpDate',\r\n      isPeformancePage: false,\r\n      error: false,\r\n    });\r\n  }\r\n\r\n  handleClientListChange = e => {\r\n    const { selectedClient, vesselList } = this.state;\r\n    if (e.value !== selectedClient) {\r\n      this.setState({ selectedCpDate: 'SelectCpDate', selectedVessel: 'SelectVessel' });\r\n    }\r\n\r\n    const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.value).map(m => m.vesselName))];\r\n    if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n      this.setState({\r\n        allVslForSelectedClient: [],\r\n        selectedClient: e.value,\r\n        selectedVessel: 'SelectVessel',\r\n        selectedCpDate: 'SelectCpDate',\r\n        error: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allVslForSelectedClient: allVessels,\r\n      selectedClient: e.value,\r\n      selectedVessel: 'SelectVessel',\r\n      selectedCpDate: 'SelectCpDate',\r\n      error: false\r\n    });\r\n  }\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handlePerformanceDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { selectedClient, selectedVessel, selectedCpDate, vesselList } = this.state;\r\n    const vessel = vesselList.find(f => f.chartererName === selectedClient && f.vesselName === selectedVessel && f.cpDate === selectedCpDate)\r\n    const vId = vessel ? vessel['_id'] : '';\r\n\r\n    let data = await api.fillPerformanceDetails({ ...this.state.performanceDetails, vId });\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('performanceDetailsForm').reset();\r\n      this.setState({\r\n        performanceDetails: {},\r\n        success: false,\r\n        errorMsg: 'Success!! Performance Details saved for = ' + this.state.selectedClient\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedCpDate } = this.state;\r\n    let showTable;\r\n    if (selectedCpDate !== 'SelectCpDate') {\r\n      showTable = <div>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <form id='performanceDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Original Value</th>\r\n                <th>Actual Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Number of Days *\r\n                  </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='NumberOfDaysOrg' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='NumberOfDaysAct' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Consumption (MT) *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerConsumptionIFOOrg' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerConsumptionIFOAct' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerConsumptionMDOOrg' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerConsumptionMDOAct' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Price *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerPriceIFOOrg' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerPriceIFOAct' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerPriceMDOOrg' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerPriceMDOAct' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='LoadPortDAOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='LoadPortDAAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DischargePortDAOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DischargePortDAAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    ILOHC and CVE\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ILOHCandCVEOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ILOHCandCVEAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Survey Cost Bends *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerSurveyCostBendsOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='BunkerSurveyCostBendsAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    WX Routing Expense *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='WXRoutingExpenseOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='WXRoutingExpenseAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='PNIInsuranceOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='PNIInsuranceAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Despatch Paid\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DespatchPaidOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DespatchPaidAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Other Expense\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='OtherExpenseOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='OtherExpenseAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    HRA/WAR Risk\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='HRA_WARRiskOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='HRA_WARRiskAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Demmurrage Received\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DemmurrageReceivedOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DemmurrageReceivedAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Quantity (MT)\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='CargoQuantityOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='CargoQuantityAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    }\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <h2>Fill Performance Details</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <ShowDropDownAdmin\r\n          handleClientListChange={this.handleClientListChange}\r\n          handleVesselListChange={this.handleVesselListChange}\r\n          handleCpDateChange={this.handleCpDateChange}\r\n          state={this.state}\r\n        />\r\n        <br />\r\n        {showTable}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FillPerformanceDetails;","import React from 'react';\r\nimport './css/App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport About from './components/Others/About';\r\nimport Location from './components/Others/Location';\r\nimport LoginHome from './components/Login/LoginHome';\r\nimport Home from './components/Others/Home';\r\nimport Header from './components/Others/Header';\r\nimport Footer from './components/Others/Footer';\r\nimport PieCharts from './components/Others/PieCharts';\r\nimport CheckPerformance from './components/Client/CheckPerformance';\r\nimport FirstComponentStateFul from './components/FirstComponentStateFul'\r\nimport ForgotPassword from './components/Login/ForgotPassword';\r\nimport AddNewUser from './components/Admin/user/AddNewUser';\r\nimport ViewAllUsers from './components/Admin/user/ViewAllUsers';\r\nimport AddNewVessel from './components/Admin/vessel/AddNewVessel';\r\nimport ViewAllVessels from './components/Admin/vessel/ViewAllVessels';\r\nimport FillVoyageDetails from './components/Admin/voyage/FillVoyageDetails'\r\nimport ViewVoyageDetails from './components/Admin/voyage/ViewVoyageDetails'\r\nimport ViewPerformanceDetails from './components/Admin/performance/ViewPerformanceDetails';\r\nimport PrivateRoute from './components/Admin/common/PrivateRoute';\r\nimport FillPerformanceDetails from './components/Admin/performance/FillPerformanceDetails';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className='App main-wrapper'>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/about' component={About}></Route>\r\n          <Route path='/location' component={Location}></Route>\r\n          <Route path='/login' component={LoginHome}></Route>\r\n\r\n          <PrivateRoute path='/addNewUser' component={AddNewUser}></PrivateRoute>\r\n          <PrivateRoute path='/viewAllUsers' component={ViewAllUsers}></PrivateRoute>\r\n          <PrivateRoute path='/editUserDetails' component={ViewAllUsers}></PrivateRoute>\r\n\r\n\r\n          <PrivateRoute path='/addNewVessel' component={AddNewVessel}></PrivateRoute>\r\n          <PrivateRoute path='/viewAllVessels' component={ViewAllVessels}></PrivateRoute>\r\n          <PrivateRoute path='/editVesselDetails' component={ViewAllVessels}></PrivateRoute>\r\n\r\n\r\n          <PrivateRoute path='/fillVoyageDetails' component={FillVoyageDetails}></PrivateRoute>\r\n          <PrivateRoute path='/viewVoyageDetails' component={ViewVoyageDetails}></PrivateRoute>\r\n          <PrivateRoute path='/editVoyageDetails' component={ViewVoyageDetails}></PrivateRoute>\r\n\r\n          <PrivateRoute path='/fillPerformanceDetails' component={FillPerformanceDetails}></PrivateRoute>\r\n          <PrivateRoute path='/viewPerformanceDetails' component={ViewPerformanceDetails}></PrivateRoute>\r\n          <PrivateRoute path='/editPerformanceDetails' component={ViewPerformanceDetails}></PrivateRoute>\r\n         \r\n          <PrivateRoute path='/checkPerformance' component={CheckPerformance}></PrivateRoute>\r\n          <Route path='/pieChart' component={PieCharts}></Route>\r\n          <Route path='/forgotPassword' component={ForgotPassword}></Route>\r\n          <Route path='/' component={Home}></Route>\r\n        </Switch>\r\n      </div>\r\n      <Footer/>\r\n      {/* <FirstComponentStateFul/> */}\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/index\";\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n   <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}