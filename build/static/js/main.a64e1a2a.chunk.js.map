{"version":3,"sources":["reducers/reducer.js","sagas/saga.js","js/index.js","components/Others/About.js","components/Others/Location.js","components/Others/Spinner.js","components/Client/DisplaySelectedVesselDetails.js","components/Others/PieCharts.js","components/api/index.js","components/Client/ClientHome.js","components/Admin/AdminHome.js","components/Manager/ManagerHome.js","components/Others/Page.js","components/Login/LoginHome.js","components/Others/SlideShow.js","components/Others/Home.js","components/Others/Header.js","components/Others/Footer.js","components/Client/CheckPerformance.js","components/FirstComponentStateFul.js","action/action.js","components/Others/Alert.js","components/Login/FormPasswordReset.js","components/Login/ForgotPassword.js","components/Admin/user/AddNewUser.js","components/Admin/user/ViewAllUsers.js","components/Admin/common/AddDynamicField.js","components/Admin/vessel/AddNewVessel.js","components/Admin/vessel/ViewAllVessels.js","components/Admin/voyage/FillVoyageDetails.js","components/Admin/voyage/ViewVoyageDetails.js","components/Admin/common/ShowDropDownAdmin.js","components/Admin/performance/ViewPerformanceModule.js","components/Admin/performance/ViewPerformanceDetails.js","components/Admin/common/PrivateRoute.js","components/Admin/performance/PerformanceModule.js","components/Admin/performance/FillPerformanceDetails.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","apiData","watcherSaga","workerFunction","takeEvery","call","getAPIData","finalData","put","type","fetch","then","response","json","initializeMiddleware","createSagaMiddleware","store","createStore","state","action","Object","assign","concat","payload","applyMiddleware","run","About","className","AnyReactComponent","text","Location","style","height","width","bootstrapURLKeys","key","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","Spinner","display","flexDirection","justifyContent","alignItems","CircularProgress","color","DisplaySelectedVesselDetails","pairs","getDisplayKey","charAt","toUpperCase","slice","replace","trim","vesselDetails","push","marginTop","PieCharts","options","chart","labels","keys","responsive","breakpoint","legend","position","series","values","api","apiUrl","checkUsername","data","axios","post","headers","updatePassword","login","insertUserDetails","insertVesselDetails","insertPerformanceData","insertVoyageData","getAllVesselsPerformance","get","isDetailsFilled","getAllVoyage","companyName","getAllUserDetails","getAllClientList","getAllVesselsList","getAllVesselsDetails","getAllVoyageDetails","fillPerformanceDetails","deleteVesselDetails","delete","updateVesselDetails","deleteVoyageDetails","updateVoyageDetails","getPortDetails","userName","vesselName","cpDate","getPerformanceDetails","chartererName","getCompletePerformanceDetailsForView","ClientHome","a","async","localStorage","getItem","res","status","setState","vesselList","error","handlePerformanceClick","e","c","find","m","target","id","history","pathname","detail","buildCustomTableBodyCell","val","cellVal","column","rowId","textAlign","onClick","getPopupContent","capitalize","s","vesselSize","loadPort","cargo","cargoIntake","ownerName","trigger","textDecoration","cursor","modal","closeOnDocumentClick","dischargePort","tableData","performanceDetails","isPeformancePage","showData","length","title","keyColumn","font","dimensions","datatable","row","stripped","features","canSearch","canDownload","canPrint","canOrderColumns","columns","label","colSize","dataType","rows","map","_id","checkPerformance","ourCount","previousYearDate","Date","pastYear","getFullYear","setFullYear","forEach","v","getTime","parseInt","marginLeft","CustomTableBodyCell","withRouter","AdminHome","marginRight","to","pointerEvents","ManagerHome","localRoles","JSON","parse","arrayItemsRoles","role","AddUser","ViewUsers","EditUser","AddVessel","ViewVessels","EditVessels","FillVoyage","ViewVoyage","EditVoyage","FillPerformance","ViewPerformance","EditPerformance","item","i","bind","Page","toLowerCase","LoginHome","isLoggedIn","errorMsg","_handleSubmit","username","password","setSubmitting","resetForm","resp","err","setItem","token","displayName","stringify","managerRoles","initialValues","validationSchema","object","shape","string","required","onSubmit","render","touched","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","userRole","Typography","variant","margin","Paper","elevation","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","name","autoComplete","value","onChange","onBlur","FormHelperText","Button","size","disabled","images","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","SlideShow","each","index","src","alt","Home","Header","handleClick","showHeader","toggleHeaderState","logoutAndToggleState","toggleState","clear","scroll","Footer","CheckPerformance","console","log","location","FirstComponentStateFul","count","itemList","incrementCounter","addItemTo","addItems","getApiCall","event","addItem","getApiCallData","document","connect","dispatch","Transition","Slide","direction","Alert","handleClose","isOpen","hasTwoButtons","submitButtonText","Dialog","open","transition","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","FormPasswordReset","passChangeSuccess","user","_handleModalClose","_renderModal","_handleClose","confirmPass","newPass","oneOf","ref","ForgotPassword","AddNewUser","userDetails","clientType","success","clientDisplay","ViewDocuments","roles","handleUserDetailsChange","preventDefault","handleMultiSelectManager","checked","handleMultiSelectClient","handleRoleChange","handleClientTypeChange","handleAddNewUserSubmit","handleBackButton","goBack","filter","indexOf","getElementById","reset","placeholder","component","FormGroup","FormControlLabel","control","Checkbox","top","left","fontSize","ViewAllUsers","localState","clientList","componentDidMount","handleViewVesselList","cl","getPopupContent_ManagerRoles","vsl","content","active","on","keepTooltipInside","rowsPerPage","available","selected","viewVesselList","AddDynamicField","IconButton","aria-label","submitNewFieldDetails","TextField","inputProps","maxLength","startIcon","AddNewVessel","handleVesselDetailsChange","inputs","querySelectorAll","otherFields","displayOtherFields","handleNewFieldDetailsChange","newFields","handleAddNewVesselSubmit","defaultValue","ViewAllVessels","isEditPage","some","f","canRefreshRows","editable","inputType","IMO","flag","built","DWT","draft","LOA","beam","GRT","NRT","TPC","grainCapacity","baleCapacity","cranes","grabs","holdsHatches","vesselType","canEdit","canDelete","refreshRows","window","reload","actionsRow","actions","FillVoyageDetails","voyageDetails","shipper","loadPortAgent","receiver","onHireSurveyor","offHireSurveyor","bunkerSupplier","bunkerTrader","pniInsurance","weatherRoutingCompany","fieldVisibility","handleChartererNameChange","handleVesselNameChange","handleAdminChange","handleDateFieldChange","handleCheckBoxChange","sort","handleVesselDetailSubmit","toString","defaultChecked","maxDate","placeholderText","ViewVoyageDetails","voyageList","getPopupContent_OtherFields","getPopupContent_FieldVisibility","userNameFromViewUsers","dischargePortAgent","edit","ShowDropDownAdmin","clients","allClients","vessels","allVslForSelectedClient","dates","allCpDatesForSelectedClient","selectedClient","handleClientListChange","isDisabled","selectedVessel","handleVesselListChange","selectedCpDate","handleCpDateChange","ViewPerformanceModule","obj","original","actual","actual$","original$","ViewPerformanceDetails","portDetails","allCpDates","allVessels","Set","tcHire","addressCommission","showTable","bunkerIFOAct","bunkerIFOOrg","bunkerMDOAct","bunkerMDOOrg","dischargePortDAAct$","dischargePortDAOrg$","dischargePortDelay","intermediatePortDelay","loadPortDAAct$","loadPortDAOrg$","loadPortDelay","freightAct","freightOrg","totalAct","totalOrg","voyageDays","CargoQuantityAct","CargoQuantityOrg","ILOHCandCVEAct$","ILOHCandCVEOrg$","PNIInsuranceAct$","PNIInsuranceOrg$","bunkerSurveyCostBendsAct$","bunkerSurveyCostBendsOrg$","despatchPaidAct$","despatchPaidOrg$","otherExpenseOrg$","otherExpenseAct$","wXRoutingExpenseAct$","wXRoutingExpenseOrg$","demmurrageReceivedOrg$","demmurrageReceivedAct$","HraWarRiskOrg$","HraWarRiskAct$","remarks","consumption","price","bunkerIFOOrg$","bunkerIFOAct$","bunkerMDOOrg$","bunkerMDOAct$","PrivateRoute","rest","from","PerformanceModule","getOriginalValue","getActualValue","updateOriginal$","commonFunction","updateActual$","localObj","onOriginalActualChange","prevProps","notifyRequired","prevState","snapshot","updateAndNotify","parseFloat","muitpleItem","getValue","FillPerformanceDetails","isEditContinue","handlePerformanceDetailsChange","getTotalOrg","getTotalAct","toFixed","handlePerformanceDetailSubmit","tcHireChange","addressCommissionChange","onVoyageDaysChange","onLoadPortDelayChange","onDischargePortDelayChange","onIntermediatePortDelayChange","handleIFOchange","handleIFOChange","handleMDOChange","vessel","vId","str","split","total","substr","App","path","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a64e1a2a.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    items: [],\r\n    apiData: [],\r\n};\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD': {\r\n            return Object.assign({}, state, {\r\n                items: state.items.concat(action.payload)\r\n            });\r\n        }\r\n        case 'DATA-LOADED': {\r\n            return Object.assign({}, state, {\r\n                apiData: state.apiData.concat(action.finalData)\r\n            });\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nexport default function* watcherSaga() {\r\n    yield takeEvery('APICALL', workerFunction)\r\n}\r\nfunction* workerFunction() {\r\n    try {\r\n        const finalData = yield call(getAPIData);\r\n        //const finalResponse = yield finalData.json();\r\n        yield put({ type: 'DATA-LOADED', finalData });\r\n    }\r\n    catch (e) {\r\n        yield put({ type: 'DATA-ERROR', finalData: e });\r\n    }\r\n}\r\nfunction getAPIData() {\r\n    return fetch('https://jsonplaceholder.typicode.com/posts').then((response) =>\r\n        response.json()\r\n    );\r\n    // return fetch('https://jsonplaceholder.typicode.com/posts').then(function(response) {\r\n    // response.json();\r\n    // })\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers/reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport watcherSaga from '../sagas/saga';\r\n\r\nconst initializeMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(initializeMiddleware));\r\ninitializeMiddleware.run(watcherSaga);\r\nexport default store;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <section className=\"about_us_2 about_us_2_animated\">\r\n                <div className=\"about_text\">\r\n                    <p className=\"main anim animated\">about bulkcom shipping</p>\r\n                    <div className=\"pic_cont anim animated\">\r\n                    </div>\r\n                    <p className=\"sub anim4 animated\">WE'VE BUILT OUR REPUTATION ON EXCELLENCE IN SHIP CHARTERING BOTH VOYAGE AND TIME CHARTER, WITH A CONSTANT FOCUS ON SERVING OUR CUSTOMERS.<br />\r\n                        We are experts in planning, executing and handling any dry cargo movement in bulk across the globe.\r\n                        We have booked over 5Million MT of dry bulk cargo on all kinds of vessel ranging from handy to cape size with special focus on supramax category.<br />\r\n                        When trust us to charter vessels exclusively through us, you'll know that your shipments are in the hands of skilled, qualified professionals with decades of experience in shipping.<br /><br />\r\n                        Contact us today to discuss your current and future chartering needs. We have trained friendly staff to provide the best customer service in the industry.\r\n\r\n                        <br /><br /><b>WHY CHOOSE US?</b><br />\r\n                        WE AIM TO PROVIDE LEVERAGE TO YOUR BUSINESS BACKED BY OUR MARKET INFORMATION<br />\r\n                        Your freight is too important to trust to amateur and most important aspect for a trade deal to conclude. We deliver every time, and that's a promise.<br /><br />\r\n\r\n                        WE KNOW THE INS AND OUTS OF SHIPPING<br />\r\n                        The difference, in one word, is experience. Our team is fully capable to provide you the best service in industry.<br /><br />\r\n\r\n                        WE'RE NOT JUST A BROKER, WE'RE YOUR PARTNER<br />\r\n                        Shipping needs fluctuate, grow, and evolve in ways you might not be able to anticipate. We can help create not just a solution, but a entire shipping strategy.<br /><br />\r\n                        {/* <span className=\"more_btn\">\r\n                            more\r\n                        <img src=\"https://aegisuae.com/resources/img/arrow_down_white.svg\" alt=\"arrow\" className=\"arrow\" />\r\n                        </span> */}\r\n                        {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                        <span className=\"sub_more\">Our Trading efforts are currently focused on Bulk, Limestone, Dolomite, Gypsum, and Coal. We also have our own fleet of Chartered in tonnage and Dry Bulk Vessels to provide end to end solutions to our Clients.\r\n                        Our business endeavours tirelessly to create strong foundations of trust with all stake holders of the organisation.\r\n                        The company specializes in Value Addition with the supply chain. Our primary objective is to cater to and exceed our clients expectations in a timely and professional manner.\r\n                The Group is on the cusp of massive expansions and business growth and has been growing from strength to strength supported with the faith our customers, suppliers and employees repose on the organisation.</span>\r\n                    </p>\r\n                    {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link_2\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass Location extends Component {\r\n    static defaultProps = {\r\n        center: {\r\n          lat: 59.95,\r\n          lng: 30.33\r\n        },\r\n        zoom: 11\r\n      };\r\n      render() {\r\n        return (\r\n            <div>\r\n                <section className='about_us_2 about_us_2_animated'>\r\n                    <div className='about_text'>\r\n                    <div style={{ height: '100vh', width: '100%' }}>\r\n                            <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: 'AIzaSyAtqgKhqfCi91s3GL1SM5HEt9pfqQvnZDw' }}\r\n                            defaultCenter={this.props.center}\r\n                            defaultZoom={this.props.zoom}\r\n                            >\r\n                            <AnyReactComponent\r\n                                lat={59.955413}\r\n                                lng={30.337844}\r\n                                text='My Marker'\r\n                            />\r\n                            </GoogleMapReact>\r\n                        </div>\r\n                    </div>\r\n                    </section>\r\n            </div>\r\n        )\r\n      }\r\n}\r\nexport default Location;","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nexport default function Spinner() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <CircularProgress color='primary' />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst DisplaySelectedVesselDetails = props => {\r\n    var pairs = [];\r\n    const getDisplayKey = key => {\r\n        key = key.charAt(0).toUpperCase() + key.slice(1)\r\n        return key.replace(/([A-Z])/g, ' $1').trim()\r\n    }\r\n\r\n    for (var key in props.vesselDetails) {\r\n        pairs.push(\r\n            <tr key={key}>\r\n                <td>\r\n                    <label>\r\n                        {getDisplayKey(key)}\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    {props.vesselDetails[key]}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <table style={{marginTop:'5%'}}>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    {pairs}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplaySelectedVesselDetails","import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nclass PieCharts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: 'pie',\r\n        },\r\n        labels: Object.keys(props.vesselDetails),\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }]\r\n},\r\n      series: Object.values(props.vesselDetails),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='row' />\r\n\r\n        <div className='row'>\r\n          <div className='col percentage-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='pie'\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PieCharts;\r\n\r\n/*import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {},\r\n      series: [44, 55, 41, 17, 15],\r\n      labels: ['A', 'B', 'C', 'D', 'E']\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='app'>\r\n        <div className='row' />\r\n\r\n        <div className='row'>\r\n          <div className='col percentage-chart'>\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type='pie'\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n */","import axios from 'axios';\r\n\r\nclass API {\r\n    apiUrl = '';\r\n\r\n    checkUsername = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/checkUsername', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    updatePassword = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/updatePassword', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    login = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/login', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertUserDetails = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/insertUserDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/insertVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertPerformanceData = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/insertPerformanceData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVoyageData = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/insertVoyageData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllVesselsPerformance = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getAllVessels/' + data.isDetailsFilled);\r\n    }\r\n\r\n    getAllVoyage = data => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyage/' + data.companyName, {\r\n            headers: { 'Content-Type': 'application/json' }\r\n        });\r\n    }\r\n\r\n    getAllUserDetails = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllUserDetails');\r\n    }\r\n\r\n    getAllClientList = () => {\r\n        return axios.get(this.apiUrl + '/userDetails/getAllClientList');\r\n    }\r\n\r\n    getAllVesselsList = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselsList');\r\n    }\r\n\r\n    getAllVesselsDetails = () => {\r\n        return axios.get(this.apiUrl + '/vesselDetails/getAllVesselDetails');\r\n    }\r\n\r\n    getAllVoyageDetails = () => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getAllVoyageDetails');\r\n    }\r\n\r\n    fillPerformanceDetails = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/fillPerformanceDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVesselDetails = data => {\r\n        return axios.delete(this.apiUrl + '/vesselDetails/' + data);\r\n    }\r\n\r\n    updateVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/updateVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    deleteVoyageDetails = data => {\r\n        return axios.delete(this.apiUrl + '/voyageDetails/' + data);\r\n    }\r\n\r\n    updateVoyageDetails = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/updateVoyageDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getPortDetails = data => {\r\n        return axios.get(this.apiUrl + '/voyageDetails/getPortDetails/' + data.userName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n    getPerformanceDetails = data => {\r\n        return axios.get(this.apiUrl + '/performanceDetails/getPerformanceDetails/' + data.chartererName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n\r\n    getCompletePerformanceDetailsForView = data =>{\r\n        return axios.get(this.apiUrl + '/performanceDetails/getCompletePerformanceDetailsForView/' + data.userName + '/' + data.vesselName + '/' + data.cpDate);\r\n    }\r\n\r\n};\r\n\r\nconst api = new API();\r\nexport default api;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport Popup from 'reactjs-popup';\r\nimport DisplaySelectedVesselDetails from './DisplaySelectedVesselDetails';\r\nimport { withRouter } from 'react-router-dom'\r\nimport PieCharts from '../../components/Others/PieCharts';\r\nimport api from '../api';\r\n\r\nclass ClientHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getAllVoyage();\r\n        this.state = {\r\n            vesselList: [],\r\n            vesselDetails: {\r\n                vesselName: '',\r\n                vesselSize: '',\r\n                cpDate: '',\r\n                loadPort: '',\r\n                dischargePort: '',\r\n                cargo: '',\r\n                cargoIntake: '',\r\n                ownerName: ''\r\n            },\r\n            tableData: [],\r\n            performanceDetails: {},\r\n            isPeformancePage: false,\r\n            error: false,\r\n            userName: '',\r\n        }\r\n    }\r\n\r\n    getAllVoyage = async () => {\r\n       await api.getAllVoyage({ 'companyName': localStorage.getItem('companyName') }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    vesselList: res.data.vesselList,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                    error: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    error: true,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handlePerformanceClick = e => {\r\n        const { vesselList } = this.state;\r\n        const c = vesselList.find(m => m['_id'] === e.target.id);\r\n        this.props.history.push({\r\n            pathname: '/CheckPerformance',\r\n            state: { detail: c }\r\n        });\r\n    }\r\n\r\n\r\n    // handleVesselClick = e => {\r\n    //     const { vesselList } = this.state;\r\n    //     const c = vesselList.find(m => m['_id'] === e.target.id);\r\n    //     console.log(c.vesselName);\r\n    //     alert(c.vesselName)\r\n    // }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'checkPerformance':\r\n                val = <button style={{ color: 'blue', textAlign: 'center' }} id={rowId} type='button' onClick={this.handlePerformanceClick}>Check Performance</button>;\r\n                break;\r\n            case 'vesselName':\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        let showData;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Fixture List',\r\n                keyColumn: 'id',\r\n                font: 'Arial',\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: '10px'\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: 'vesselName',\r\n                            label: 'Vessel Name',\r\n                            colSize: '50px',\r\n                            dataType: ''\r\n                        },\r\n                        {\r\n                            id: 'cpDate',\r\n                            label: 'CP Date',\r\n                            colSize: '50px',\r\n                        },\r\n                        {\r\n                            id: 'checkPerformance',\r\n                            label: 'Performance',\r\n                            colSize: '50px',\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList.map(({ vesselName, cpDate, _id }) => ({ vesselName, cpDate, id: _id, checkPerformance: true }))\r\n                    ],\r\n                }\r\n            }\r\n\r\n            const ourCount = {};\r\n            let previousYearDate = new Date();\r\n            const pastYear = previousYearDate.getFullYear() - 1;\r\n            previousYearDate.setFullYear(pastYear);\r\n            vesselList.forEach(v => {\r\n                if (!ourCount[v.cargo]) {\r\n                    ourCount[v.cargo] = 0;\r\n                }\r\n                if (new Date(v.cpDate).getTime() <= new Date().getTime() && new Date(v.cpDate).getTime() > previousYearDate.getTime()) {\r\n                    ourCount[v.cargo] += parseInt(v.cargoIntake);\r\n                }\r\n            });\r\n\r\n\r\n            showData = < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                <div style={{ marginTop: '15%', marginLeft: '0%' }}>\r\n                    {/* <DisplaySelectedVesselDetails vesselDetails={ourCount} /> */}\r\n                    <PieCharts vesselDetails={ourCount} />\r\n\r\n                </div>\r\n            </div >\r\n        } else {\r\n            showData = <div style={{ marginTop: '15%' }}> Oops!! There are no business details for you.</div>\r\n        }\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <span>\r\n                    <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                    {showData}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        let vesselDetails = vesselList.find(m => m['_id'] === rowId);\r\n        vesselDetails = (({ vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }) => (\r\n            { vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, ownerName }))(vesselDetails);\r\n\r\n        const content = <div>\r\n            <Popup trigger={<a id={rowId} style={{ color: 'blue', textAlign: 'center', textDecoration: 'underline', cursor: 'pointer' }}> {cellVal} </a>}\r\n                modal closeOnDocumentClick >\r\n                <div className='content'>\r\n                    <DisplaySelectedVesselDetails vesselDetails={vesselDetails} />\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientHome);\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass AdminHome extends Component {\r\n\r\n    history;\r\n\r\n    render() {\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/addNewUser'>Add New User </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/viewAllUsers'>View All Users </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', pointerEvents: 'none' }} to='/editUserDetails'>Edit User Details</Link><br /><br />\r\n\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/addNewVessel'>Add New Vessel</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/viewAllVessels'>View All Vessels</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/editVesselDetails'>Edit Vessel Details</Link><br /><br />\r\n\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/fillVoyageDetails'> Fill Voyage Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/viewVoyageDetails' >View Voyage Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'Blue' }} to='/editVoyageDetails'> Edit Voyage Details</Link><br /><br />\r\n\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'green' }} to='/fillPerformanceDetails' >Fill Performance Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color: 'green' }} to='/viewPerformanceDetails' >View Performance Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px', color:'green'}} to='/editPerformanceDetails' >Edit Performance Details</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminHome);","\r\nimport React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nclass ManagerHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let localRoles = JSON.parse(localStorage.getItem('managerRoles'));\r\n        if (Object.keys(localRoles).length) {\r\n            this.state = {\r\n                arrayItemsRoles: [\r\n                    { role: localRoles.AddUser, to: '/addNewUser', text: 'Add New User' },\r\n                    { role: localRoles.ViewUsers, to: '/viewAllUsers', text: 'View All Users' },\r\n                    { role: localRoles.EditUser, to: '/editUserDetails', text: 'Edit User Details' },\r\n\r\n                    { role: localRoles.AddVessel, to: '/addNewVessel', text: 'Add New Vessel' },\r\n                    { role: localRoles.ViewVessels, to: '/viewAllVessels', text: 'View All Vessels' },\r\n                    { role: localRoles.EditVessels, to: '/editVesselDetails', text: 'Edit Vessel Details' },\r\n\r\n                    { role: localRoles.FillVoyage, to: '/fillVoyageDetails', text: 'Fill Voyage Details' },\r\n                    { role: localRoles.ViewVoyage, to: '/viewVoyageDetails', text: 'View Voyage Details' },\r\n                    { role: localRoles.EditVoyage, to: '/editVoyageDetails', text: 'Edit Voyage Details' },\r\n\r\n                    { role: localRoles.FillPerformance, to: '/fillPerformanceDetails', text: 'Fill Performance Details' },\r\n                    { role: localRoles.ViewPerformance, to: '/viewPerformanceDetails', text: 'View Performance Details' },\r\n                    { role: localRoles.EditPerformance, to: '/editPerformanceDetails', text: 'Edit Performance Details' }]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.arrayItemsRoles.map(function (item, i) {\r\n            return item.role ?\r\n                (<Link style={{ width: '300px', height: '40px', marginRight: '80px' }} key={i} to={item.to}> {item.text} </Link>) :\r\n                ''\r\n        }.bind(this));\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    {data}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\nexport default withRouter(ManagerHome);","import React from 'react';\r\nimport LoginHome from '../Login/LoginHome';\r\nimport ClientHome from '../Client/ClientHome';\r\nimport AdminHome from '../Admin/AdminHome';\r\nimport ManagerHome from '../Manager/ManagerHome';\r\n\r\nfunction Page(props) {\r\n    if (localStorage.getItem('authToken')) {\r\n        switch (localStorage.getItem('userRole').toLowerCase()) {\r\n            case 'admin':\r\n                return <AdminHome/>;\r\n            case 'manager':\r\n                return <ManagerHome/>;\r\n            case 'client':\r\n                return <ClientHome/>;\r\n            default:\r\n                return <LoginHome />;\r\n        }\r\n    }\r\n    return <LoginHome />;\r\n}\r\nexport default Page","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../Others/Page'\r\nimport api from '../api'\r\n\r\nexport default class LoginHome extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: localStorage.getItem('authToken') ? true : false,\r\n        role: localStorage.getItem('userRole') ? localStorage.getItem('userRole') : '',\r\n        errorMsg: '',\r\n        error: localStorage.getItem('authToken') ? false : true\r\n    }\r\n\r\n    // handleLogoutClick = (e) => {\r\n    //     localStorage.setItem('authToken', '');\r\n    //     localStorage.setItem('userRole', '');\r\n    //     localStorage.setItem('userName', '');\r\n    //     this.setState({\r\n    //         isLoggedIn: false,\r\n    //         role: '',\r\n    //         errorMsg: '',\r\n    //         error: false,\r\n    //     });\r\n    // }\r\n\r\n    _handleSubmit = async ({\r\n        username,\r\n        password,\r\n        setSubmitting,\r\n        resetForm,\r\n    }) => {\r\n        this.setState(() => ({\r\n            isLoggedIn: false,\r\n            error: false,\r\n            role: '',\r\n        }));\r\n\r\n        let resp = await api.login({ username, password, });\r\n        resp = resp.data;\r\n        setSubmitting(false);\r\n        if (!resp.status) {\r\n            this.setState(() => ({\r\n                isLoggedIn: false,\r\n                errorMsg: resp.err,\r\n                error: true,\r\n                role: '',\r\n            }))\r\n            return;\r\n        } else {\r\n            this.setState(() => ({\r\n                isLoggedIn: true,\r\n                error: false,\r\n                errorMsg: '',\r\n            }))\r\n            localStorage.setItem('authToken', resp.token);\r\n            localStorage.setItem('userRole', resp.role);\r\n            localStorage.setItem('displayName', resp.displayName);\r\n            localStorage.setItem('userName', resp.userName);\r\n            localStorage.setItem('companyName', resp.companyName);\r\n            localStorage.setItem('managerRoles', JSON.stringify(resp.managerRoles));\r\n        }\r\n\r\n        resetForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                }}\r\n                validationSchema={object().shape({\r\n                    username: string().required('Please enter a valid email address.'),\r\n                    password: string().required('Password is required'),\r\n                })}\r\n                onSubmit={(\r\n                    { username, password },\r\n                    { setSubmitting, resetForm }\r\n                ) =>\r\n                    this._handleSubmit({\r\n                        username,\r\n                        password,\r\n                        setSubmitting,\r\n                        resetForm,\r\n                    })\r\n                }\r\n                render={props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isValid,\r\n                        isSubmitting,\r\n                    } = props\r\n\r\n                    const { error } = this.state;\r\n                    const authToken = localStorage.getItem('authToken');\r\n                    const userRole = localStorage.getItem('userRole');\r\n                    let showData;\r\n                    if (isSubmitting) {\r\n                        showData = <Spinner />\r\n                    } else if (userRole && !error) {\r\n                        showData = <div>\r\n                            <Page />\r\n                            {/* <LogoutButton onClick={this.handleLogoutClick} ></LogoutButton> */}\r\n                        </div>\r\n                    } else {\r\n                        showData = <div className='ForgotPasswordForm'>\r\n                            <Typography variant='h4' style={{ margin: '10px 0' }}> Login </Typography>\r\n                            <Paper className='form form--wrapper' elevation={10}>\r\n                                <form className='form' onSubmit={handleSubmit}>\r\n                                    <FormControl fullWidth margin='dense'>\r\n                                        <InputLabel htmlFor='username' error={Boolean(touched.username && errors.username)}>\r\n                                            {'Enter your username'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id='username'\r\n                                            name='username'\r\n                                            type='email'\r\n                                            required\r\n                                            autoComplete='off'\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.username && errors.username)} />\r\n                                        <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                                            {touched.username && errors.username ? errors.username : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        fullWidth\r\n                                        margin='dense'\r\n                                        error={Boolean(touched.password && errors.password)}>\r\n                                        <InputLabel htmlFor='password' error={Boolean(touched.password && errors.password)}>\r\n                                            {'Enter your password'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id='password'\r\n                                            name='password'\r\n                                            type='password'\r\n                                            autoComplete='off'\r\n                                            value={values.password}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.password && errors.password)}\r\n                                        />\r\n                                        <FormHelperText error={Boolean(touched.password && errors.password)}>\r\n                                            {touched.password && errors.password ? errors.password : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormHelperText error={Boolean(this.state.error)}>\r\n                                        {this.state.error ? this.state.errorMsg : ''}\r\n                                    </FormHelperText>\r\n                                    <Button\r\n                                        type='submit'\r\n                                        variant='contained'\r\n                                        size='small'\r\n                                        color='primary'\r\n                                        disabled={Boolean(!isValid || isSubmitting)}\r\n                                        style={{ margin: '16px' }}>\r\n                                        Login </Button>\r\n                                    <Link style={{ color: 'black' }} to='/forgotPassword'>Forgot Password !!</Link>\r\n                                </form>\r\n                            </Paper>\r\n                        </div>\r\n                    }\r\n                    return (\r\n                        showData\r\n                    )\r\n                }\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Zoom } from 'react-slideshow-image';\r\n\r\nconst images = [\r\n  '/assests/images/ship1.jpg',\r\n  '/assests/images/ship2.jpg',\r\n  '/assests/images/ship3.jpg',\r\n];\r\n\r\nconst zoomOutProperties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n  scale: 2,\r\n  arrows: true\r\n}\r\n\r\nconst SlideShow = () => {\r\n  return (\r\n    <div className='slide-container'>\r\n      <Zoom {...zoomOutProperties}>\r\n        {\r\n          images.map((each, index) => <img key={index} style={{ width: '100%' }} src={each} alt={each} />)\r\n        }\r\n      </Zoom>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SlideShow;","import React from 'react';\r\nimport Slideshow from './SlideShow';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=''>\r\n            <h2>Welcome to Bulkcom Shipping</h2>\r\n            <Slideshow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.toggleHeaderState = this.toggleHeaderState.bind(this);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n    this.state = {\r\n      showHeader: props.toggleState,\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      showHeader: !this.state.showHeader,\r\n    })\r\n  }\r\n\r\n  toggleHeaderState() {\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.showHeader ? 'menu_open menu' : 'menu'} id='main_menu'>\r\n        <div className='header_right'>\r\n          <div className='explore' id='menu_label'>explore</div>\r\n          <img src='https://aegisuae.com/resources/img/arrow_white.svg' alt='arrow' className='arrow' />\r\n          <button className='js-toggle-nav c-btn-nav -inited' id='menu_button' onClick={this.handleClick} >\r\n            <div className='c-btn-nav_burger'>\r\n              <span className='c-burger_top'></span>\r\n              <span className='c-burger_middle'></span>\r\n              <span className='c-burger_bottom'></span>\r\n              <div className='c-close-burger_top'></div>\r\n              <div className='c-close-burger_bottom'></div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div className={this.state.showHeader ? 'left_menu_open left_menu' : 'left_menu'} id='left_menu' scroll='no'>\r\n          <ul className={this.state.showHeader ? 'opened main_nav' : 'main_nav'} id='navigation'>\r\n            <li>\r\n              <Link className='' to='/' onClick={this.toggleHeaderState}>\r\n                Home\r\n              <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='' to='/about' onClick={this.toggleHeaderState}>\r\n                About\r\n            <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className='' to='/location' onClick={this.toggleHeaderState}>\r\n                Locations\r\n            <span className='menu_line'></span>\r\n              </Link>\r\n            </li>\r\n            {localStorage.getItem('authToken') ? (\r\n              <li>\r\n                <Link className='' to='/login' onClick={this.logoutAndToggleState}>\r\n                  Logout\r\n             <span className='menu_line'></span>\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n                <li>\r\n                  <Link className='' to='/login' onClick={this.toggleHeaderState}>\r\n                    Login\r\n              <span className='menu_line'></span>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Footer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer className='navbar navbar-dark bg-primary fixed-top'>\r\n        <div className='bottom_footer'>\r\n          <Link className='navbar-brand' to='/'>\r\n            Home\r\n            </Link>\r\n          <Link className='navbar-brand' to='/about'>\r\n            About\r\n            </Link>\r\n          <Link className='navbar-brand' to='/location'>\r\n            Locations\r\n            </Link>\r\n          {localStorage.getItem('authToken') ? (\r\n            <Link className='navbar-brand' to='/login' onClick={this.logoutAndToggleState}>\r\n              Logout\r\n             </Link>) : (\r\n              <Link className='navbar-brand' to='/login'>\r\n                Login\r\n                </Link>\r\n            )}\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React,{Component} from 'react';\r\n\r\nclass CheckPerformance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.location.state);\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                Check Performance\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CheckPerformance;","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem, getApiActionCal } from '../action/action';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addItem: item => {\r\n            dispatch(addItem(item))\r\n        },\r\n        getApiCallData: () => {\r\n            dispatch(getApiActionCal())\r\n        }\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        apiData: state.apiData\r\n    };\r\n}\r\n\r\nclass FirstComponentStateFul extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 1,\r\n            items: ['bunty', 'babli'],\r\n            apiData: []\r\n        }\r\n        this.itemList = '';\r\n        this.incrementCounter = this.incrementCounter.bind(this);\r\n        this.addItemTo = this.addItemTo.bind(this);\r\n        this.addItems = this.addItems.bind(this);\r\n        this.getApiCall = this.getApiCall.bind(this);\r\n    }\r\n    addItemTo(event) {\r\n        this.itemList = event.target.value;\r\n    }\r\n    addItems() {\r\n        this.props.addItem(this.itemList)\r\n    }\r\n    incrementCounter() {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n\r\n    }\r\n    getApiCall() {\r\n        this.props.getApiCallData();\r\n    }\r\n    componentDidUpdate() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    componentDidMount() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>you clicked it {this.state.count} times</p>\r\n                <button onClick={this.incrementCounter}></button>\r\n                <input type='text' onChange={this.addItemTo} />\r\n                <button onClick={this.addItems}></button>\r\n                <ul>\r\n                    {\r\n                        this.props.items.map(item =>\r\n                            <li key={item}>{item}</li>)\r\n                    }\r\n\r\n                </ul>\r\n                <button onClick={this.getApiCall}>get API call</button>\r\n                <ul>\r\n                    {\r\n                        this.props.apiData.map(item =>\r\n                            <li key={item.id}>{item.title}</li>)\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Form = connect(mapStatetoProps, mapDispatchToProps)(FirstComponentStateFul)\r\nexport default Form;","export function addItem(payload) {\r\n    return {\r\n        type: 'ADD',\r\n        payload\r\n    }\r\n}\r\nexport function getApiActionCal() {\r\n    return {\r\n        type: 'APICALL'\r\n    }\r\n}\r\nexport function getDataLoaded(payload) {\r\n    return {\r\n        type: 'DATA-LOADED',\r\n        payload\r\n    }\r\n}\r\nexport function getDataError() {\r\n    return {\r\n        type: 'DATA-ERROR'\r\n    }\r\n}","import React from 'react'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction='up' {...props} />\r\n}\r\n\r\nexport default function Alert({\r\n  handleClose,\r\n  handleSubmit,\r\n  isOpen,\r\n  hasTwoButtons = false,\r\n  submitButtonText,\r\n  title,\r\n  text,\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      transition={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby='alert-dialog-slide-title'\r\n      aria-describedby='alert-dialog-slide-description'\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{text}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {hasTwoButtons ? (\r\n          <Button onClick={handleClose} variant='raised' color='primary'>\r\n            {'CANCEL'}\r\n          </Button>\r\n        ) : null}\r\n        <Button onClick={handleSubmit} color='primary'>\r\n          {submitButtonText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, ref, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Alert from '../Others/Alert';\r\nimport api from '../api'\r\n\r\nexport default class FormPasswordReset extends Component {\r\n\r\n  state = {\r\n    passChangeSuccess: false,\r\n    user: this.props.username,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _renderModal = () => {\r\n    const onClick = () => {\r\n      this.setState(() => ({ passChangeSuccess: false }))\r\n    }\r\n\r\n    return (\r\n      <Alert\r\n        isOpen={this.state.passChangeSuccess}\r\n        onClose={this._handleClose}\r\n        handleSubmit={onClick}\r\n        title='Password Reset'\r\n        text='Your password was changed successfully'\r\n        submitButtonText='Done'\r\n      />\r\n    )\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    confirmPass,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n\r\n    let resp = await api.updatePassword({ user: this.state.user, confirmPass });\r\n    resp = resp.data;\r\n    setSubmitting(false);\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n      }));\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        passChangeSuccess: true,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newPass: '',\r\n          confirmPass: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          newPass: string().required('New password is required'),\r\n          confirmPass: string()\r\n            .oneOf([ref('newPass')], 'Passwords do not match')\r\n            .required('Password is required'),\r\n        })}\r\n        onSubmit={(\r\n          { newPass, confirmPass },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            newPass,\r\n            confirmPass,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n          return isSubmitting ? (\r\n            <Spinner />\r\n          ) : (\r\n              <Paper className='form form--wrapper' elevation={10}>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin='dense' error={Boolean(touched.newPass && errors.newPass)}>\r\n                    <InputLabel htmlFor='password-new' error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {'New Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='password-new'\r\n                      name='newPass'\r\n                      type='password'\r\n                      autoComplete='off'\r\n                      value={values.newPass}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.newPass && errors.newPass)} />\r\n                    <FormHelperText error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {touched.newPass && errors.newPass ? errors.newPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl fullWidth margin='dense' error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                    <InputLabel htmlFor='password-confirm' error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {'Confirm Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='password-confirm'\r\n                      name='confirmPass'\r\n                      type='password'\r\n                      value={values.confirmPass}\r\n                      autoComplete='off'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.confirmPass && errors.confirmPass)} />\r\n                    <FormHelperText error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {touched.confirmPass && errors.confirmPass ? errors.confirmPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type='submit'\r\n                    variant='raised'\r\n                    color='primary'\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }} >\r\n                    {'Reset Password'}\r\n                  </Button>\r\n                </form>\r\n                {this._renderModal()}\r\n              </Paper>\r\n            )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport FormPasswordReset from './FormPasswordReset';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport api from '../api'\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    passChangeSuccess: false,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    username,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    let resp = await api.checkUsername({ username });\r\n    setSubmitting(false);\r\n    resp = resp.data;\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n        error: true,\r\n        errorMsg: 'Username not found'\r\n      }))\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        username,\r\n        passChangeSuccess: true,\r\n        error: false,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          username: string().required('Please enter a valid email address.'),\r\n        })}\r\n        onSubmit={(\r\n          { username },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            username,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n\r\n          let showData;\r\n          if (isSubmitting) {\r\n            showData = <Spinner />\r\n          } else if (this.state.passChangeSuccess) {\r\n            showData = <div className='ForgotPasswordForm'>\r\n              <Typography variant='title' style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <FormPasswordReset username={this.state.username} />\r\n            </div>\r\n          } else {\r\n            showData = <div className='ForgotPasswordForm'>\r\n              <Typography variant='title' style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <Paper className='form form--wrapper' elevation={10}>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin='dense'>\r\n                    <InputLabel\r\n                      htmlFor='username'\r\n                      error={Boolean(touched.username && errors.username)}>\r\n                      {'Enter your username'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id='username'\r\n                      name='username'\r\n                      type='email'\r\n                      autoComplete='off'\r\n                      value={values.username}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.username && errors.username)}\r\n                    />\r\n                    <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                      {touched.username && errors.username ? errors.username : ''}\r\n                    </FormHelperText>\r\n                    <FormHelperText error={Boolean(this.state.error)}>\r\n                      {this.state.error ? this.state.errorMsg : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type='submit'\r\n                    variant='raised'\r\n                    color='primary'\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }}>\r\n                    {'Check Username'}\r\n                  </Button>\r\n                </form>\r\n              </Paper>\r\n            </div>\r\n          }\r\n          return (\r\n            showData\r\n          )\r\n        }\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../../../css/Admin.css';\r\nimport Select from 'react-select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport api from '../../api';\r\nclass AddNewUser extends Component {\r\n\r\n  userDetails = {\r\n    userName: '',\r\n    companyName: '',\r\n    displayName: '',\r\n    password: '',\r\n    role: '',\r\n    clientType: '',\r\n    success: true,\r\n    errorMsg: '',\r\n    managerRoles: {\r\n      AddUser: false,\r\n      ViewUsers: false,\r\n      EditUser: false,\r\n      AddVessel: false,\r\n      ViewVessels: false,\r\n      EditVessels: false,\r\n      FillVoyage: false,\r\n      ViewVoyage: false,\r\n      EditVoyage: false,\r\n      FillPerformance: false,\r\n      ViewPerformance: false,\r\n      EditPerformance: false,\r\n    },\r\n    clientDisplay: {\r\n      ViewPerformance: false,\r\n      ViewVoyage: false,\r\n      ViewDocuments: false\r\n    }\r\n  };\r\n\r\n  roles = [{ label: 'Client', value: 'Client' }, { label: 'Manager', value: 'Manager' }];\r\n  clientType = [{ label: 'Owner', value: 'Owner' }, { label: 'Charterer', value: 'Charterer' }];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.userDetails };\r\n    this.handleUserDetailsChange = this.handleUserDetailsChange.bind(this);\r\n    this.handleRoleChange = this.handleRoleChange.bind(this);\r\n    this.handleClientTypeChange = this.handleClientTypeChange.bind(this);\r\n    this.handleAddNewUserSubmit = this.handleAddNewUserSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleUserDetailsChange = async e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleMultiSelectManager = (event) => {\r\n    console.log(event);\r\n    this.setState({\r\n      ...this.state, managerRoles: {\r\n        ...this.state.managerRoles,\r\n        [event.target.name]: event.target.checked\r\n      }\r\n    });\r\n  };\r\n\r\n  handleMultiSelectClient = (event) => {\r\n    console.log(event);\r\n    this.setState({\r\n      ...this.state, clientDisplay: {\r\n        ...this.state.clientDisplay,\r\n        [event.target.name]: event.target.checked\r\n      }\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  handleRoleChange = e => {\r\n    this.setState({\r\n      role: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  handleClientTypeChange = e => {\r\n    this.setState({\r\n      clientType: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  async handleAddNewUserSubmit(event) {\r\n    event.preventDefault();\r\n    const { userName, password, displayName, companyName, role, clientType, managerRoles, clientDisplay } = this.state;\r\n    if (!userName || !displayName || !password || !role || !companyName || (role === 'Client' && !clientType)) {\r\n      const { AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance } = managerRoles;\r\n      const error = [AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance].filter((v) => v).length < 1;\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (role === 'Manager') {\r\n      const { AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance } = managerRoles;\r\n      const error = [AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance].filter((v) => v).length < 1;\r\n      if (error) {\r\n        this.setState({\r\n          success: false,\r\n          errorMsg: 'Please select minimum one role'\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (role === 'Client') {\r\n      const { ViewDocuments, ViewPerformance, ViewVoyage } = clientDisplay;\r\n      const error = [ViewDocuments, ViewPerformance, ViewVoyage].filter((v) => v).length < 1;\r\n      if (error) {\r\n        this.setState({\r\n          success: false,\r\n          errorMsg: 'Please select minimum one role'\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!clientType) {\r\n      this.state.clientType = role;\r\n    }\r\n\r\n    let data = await api.insertUserDetails({ ...this.state });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      if (data.data.status.errorMsg.indexOf('duplicate key error') >= 0) {\r\n        data.data.status.errorMsg = 'Username already exits.'\r\n      }\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errorMsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('userDetailsForm').reset();\r\n      this.setState({\r\n        ...this.userDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New user created = ' + userName\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const role = this.state.role;\r\n    let tableData;\r\n    if (role === 'Client') {\r\n      const { ViewDocuments, ViewPerformance, ViewVoyage } = this.state.clientDisplay;\r\n      const error = [ViewDocuments, ViewPerformance, ViewVoyage].filter((v) => v).length < 1;\r\n      tableData = <><tr>\r\n        <td>\r\n          <label>\r\n            Client Type *\r\n        </label>\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.clientType.filter(({ value }) => value === this.state.clientType)}\r\n            onChange={this.handleClientTypeChange}\r\n            options={this.clientType}\r\n            placeholder='Select Client Type'\r\n            name='clientType'\r\n          />\r\n        </td>\r\n      </tr>\r\n        <tr>\r\n          <td>\r\n            <label>\r\n              Select Client Display *\r\n          </label>\r\n          </td>\r\n          <td>\r\n            <FormControl required error={error} component='fieldset' style={{ display: 'flex' }}>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={ViewPerformance} onChange={this.handleMultiSelectClient} name='ViewPerformance' />}\r\n                  label='View Performance'\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={ViewVoyage} onChange={this.handleMultiSelectClient} name='ViewVoyage' />}\r\n                  label='View Voyage Details'\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={ViewDocuments} onChange={this.handleMultiSelectClient} name='ViewDocuments' />}\r\n                  label='View Documents'\r\n                />\r\n              </FormGroup>\r\n              <FormHelperText>Please select minimum one role</FormHelperText>\r\n            </FormControl>\r\n          </td>\r\n        </tr>\r\n      </>\r\n\r\n\r\n    } else if (role === 'Manager') {\r\n      const { AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance } = this.state.managerRoles;\r\n      const error = [AddUser, ViewUsers, EditUser, AddVessel, ViewVessels, EditVessels, FillVoyage, ViewVoyage, EditVoyage, FillPerformance, ViewPerformance, EditPerformance].filter((v) => v).length < 1;\r\n      tableData = <tr>\r\n        <td>\r\n          <label>\r\n            Select Manager Roles *\r\n          </label>\r\n        </td>\r\n        <td>\r\n          <FormControl required error={error} component='fieldset' style={{ display: 'flex' }}>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox checked={AddUser} onChange={this.handleMultiSelectManager} name='AddUser' />}\r\n                label='Add New User'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewUsers} onChange={this.handleMultiSelectManager} name='ViewUsers' />}\r\n                label='View All Users'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditUser} onChange={this.handleMultiSelectManager} name='EditUser' />}\r\n                label='Edit User Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={AddVessel} onChange={this.handleMultiSelectManager} name='AddVessel' />}\r\n                label='Add New Vessel'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewVessels} onChange={this.handleMultiSelectManager} name='ViewVessels' />}\r\n                label='View All Vessels'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditVessels} onChange={this.handleMultiSelectManager} name='EditVessels' />}\r\n                label='Edit Vessel Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={FillVoyage} onChange={this.handleMultiSelectManager} name='FillVoyage' />}\r\n                label='Fill Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewVoyage} onChange={this.handleMultiSelectManager} name='ViewVoyage' />}\r\n                label='View All Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditVoyage} onChange={this.handleMultiSelectManager} name='EditVoyage' />}\r\n                label='Edit Voyage Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={FillPerformance} onChange={this.handleMultiSelectManager} name='FillPerformance' />}\r\n                label='Fill Performance Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewPerformance} onChange={this.handleMultiSelectManager} name='ViewPerformance' />}\r\n                label='View All Performance Details'\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={EditPerformance} onChange={this.handleMultiSelectManager} name='EditPerformance' />}\r\n                label='Edit Performance Details'\r\n              />\r\n            </FormGroup>\r\n            <FormHelperText>Please select minimum one role</FormHelperText>\r\n          </FormControl>\r\n        </td>\r\n      </tr>\r\n    }\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New User</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='userDetailsForm' onSubmit={this.handleAddNewUserSubmit} style={{ margin: '1%' }} autoComplete='off'>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    User Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='email' name='userName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Company Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='companyName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Display Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='displayName' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Password *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='password' name='password' required onChange={this.handleUserDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Role *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Select\r\n                      value={this.roles.filter(({ value }) => value === this.state.role)}\r\n                      onChange={this.handleRoleChange}\r\n                      options={this.roles}\r\n                      placeholder='Select Role'\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              {tableData}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewUser;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Button } from '@material-ui/core';\r\nclass ViewAllUsers extends Component {\r\n\r\n    localState = {\r\n        clientList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    componentDidMount = async e => {\r\n        const res = await api.getAllUserDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                clientList: res.data.clientList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleBackButton = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleViewVesselList = e => {\r\n        const { clientList } = this.state;\r\n        const cl = clientList.find(m => m['id'] === e.target.id);\r\n        if (cl && cl.companyName) {\r\n            this.props.history.push({\r\n                pathname: '/viewVoyageDetails',\r\n                state: { userName: cl.companyName }\r\n            });\r\n        }\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'viewVesselList':\r\n                const { clientList } = this.state;\r\n                const cl = clientList.find(m => m['id'] === rowId);\r\n                if (cl && cl.role === 'Client') {\r\n                    val = <button style={{ color: 'blue', textAlign: 'center', marginLeft: '20%' }} id={rowId} type='button' onClick={this.handleViewVesselList}>View Vessels</button>;\r\n                } else if (cl && cl.role === 'Manager') {\r\n                    val = this.getPopupContent_ManagerRoles(cl);\r\n                } else {\r\n                    val = ''\r\n                }\r\n                break;\r\n            default:\r\n                val = <div style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    getPopupContent_ManagerRoles = (vsl) => {\r\n        let content = <p></p>;\r\n        let active = [];\r\n        if (vsl && vsl.managerRoles && Object.keys(vsl.managerRoles).length) {\r\n            const identifiers = Object.keys(vsl.managerRoles)\r\n            active = identifiers.filter(function (id) {\r\n                return vsl.managerRoles[id]\r\n            })\r\n            if (active && active.length) {\r\n                active = active.map(m => m.replace(/([A-Z])/g, ' $1').trim());\r\n            }\r\n            return content =\r\n                <Popup trigger={\r\n                    <button style={{ color: 'blue', textAlign: 'center', marginLeft: '20%' }} type='button'>View Roles</button>\r\n                }\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'>\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={active} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n    render() {\r\n        let { clientList } = this.state;\r\n        const options = {\r\n            title: 'User List',\r\n            keyColumn: 'id',\r\n            font: 'Arial',\r\n            dimensions: {\r\n                datatable: {\r\n                    width: '90%',\r\n                    height: '648px',\r\n                },\r\n                row: {\r\n                    height: '10px'\r\n                }\r\n            },\r\n            stripped: true,\r\n            features: {\r\n                canSearch: true,\r\n                canDownload: true,\r\n                canPrint: true,\r\n                canOrderColumns: true,\r\n                rowsPerPage: {\r\n                    available: [5, 10, 25, 50, 100],\r\n                    selected: 10\r\n                },\r\n            },\r\n            data: {\r\n                columns: [\r\n                    {\r\n                        id: 'userName',\r\n                        label: 'User Name',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'displayName',\r\n                        label: 'Display Name',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'companyName',\r\n                        label: 'Company Name',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'role',\r\n                        label: 'Role',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'clientType',\r\n                        label: 'User Type',\r\n                        colSize: '50px',\r\n                    },\r\n                    {\r\n                        id: 'viewVesselList',\r\n                        label: 'View',\r\n                        colSize: '50px',\r\n                    },\r\n                ],\r\n                rows: [],\r\n            }\r\n        }\r\n\r\n        if (clientList && clientList.length) {\r\n            options.data.rows = [...clientList.map(({ userName, displayName, companyName, role, clientType, id, viewVesselList }) => ({ userName, displayName, companyName, role, clientType, id, viewVesselList: true }))\r\n            ]\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' className={'tooltipBoundary'} style={{ margin: '2% 0 6% 2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllUsers;\r\n","\r\nimport React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { TextField, Button, IconButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddCircleTwoToneIcon from '@material-ui/icons/AddCircleTwoTone';\r\n\r\nconst AddDynamicField = props => {\r\n    return (\r\n        <>\r\n            <Popup trigger={<IconButton aria-label='Add new field'><AddCircleTwoToneIcon /></IconButton>}>\r\n                <form id='newFieldForm' autoComplete='off' onSubmit={props.submitNewFieldDetails}>\r\n                    <TextField\r\n                        required\r\n                        inputProps={{ maxLength: 25 }}\r\n                        id='fieldLabel'\r\n                        label='Field Label'\r\n                        autoComplete='off'\r\n                    />\r\n                    <TextField\r\n                        required\r\n                        inputProps={{ maxLength: 50 }}\r\n                        id='fieldValue'\r\n                        label='Field Value'\r\n                        autoComplete='off'\r\n                    />\r\n                    <Button\r\n                        type='submit'\r\n                        style={{ marginTop: '10%' }}\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'\r\n                        startIcon={<SaveIcon />}> Save</Button>\r\n                </form>\r\n            </Popup>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddDynamicField","import React, { Component } from 'react';\r\nimport '../../../css/Admin.css';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button';\r\nimport api from '../../api';\r\nimport AddDynamicField from '../common/AddDynamicField';\r\n\r\nclass AddNewVessel extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vesselDetails: {\r\n        otherFields: {}\r\n      },\r\n      success: true,\r\n      errorMsg: '',\r\n      newFields: []\r\n    };\r\n    this.handleVesselDetailsChange = this.handleVesselDetailsChange.bind(this);\r\n    this.handleAddNewVesselSubmit = this.handleAddNewVesselSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.submitNewFieldDetails = this.submitNewFieldDetails.bind(this);\r\n    this.handleNewFieldDetailsChange = this.handleNewFieldDetailsChange.bind(this);\r\n  }\r\n\r\n  handleVesselDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const { vesselDetails } = this.state;\r\n    Object.assign(vesselDetails, { [name]: value });\r\n    this.setState({ success: true, errorMsg: '', vesselDetails });\r\n  }\r\n\r\n  handleBackButton = () => this.props.history.goBack();\r\n\r\n  async handleAddNewVesselSubmit(event) {\r\n    event.preventDefault();\r\n    const { vesselDetails } = this.state;\r\n    const data = await api.insertVesselDetails({ vesselDetails });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status['_message']\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        vesselDetails: {},\r\n        success: false,\r\n        errorMsg: 'Success!! New vessel created = ' + vesselDetails.vesselName,\r\n      });\r\n      document.getElementById('vesselDetailsForm').reset();\r\n      if (document.getElementById('newFieldForm')) {\r\n        document.getElementById('newFieldForm').reset();\r\n      }\r\n    }\r\n  }\r\n\r\n  submitNewFieldDetails = e => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    const inputs = e.target.querySelectorAll('input');\r\n    if (inputs && inputs.length) {\r\n      const { vesselDetails } = this.state;\r\n      const { otherFields } = vesselDetails;\r\n      Object.assign(otherFields, { [inputs[0].value]: inputs[1].value });\r\n      this.setState({ vesselDetails });\r\n      document.getElementById('newFieldForm').reset();\r\n      this.displayOtherFields();\r\n    }\r\n  };\r\n\r\n  handleNewFieldDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    const { vesselDetails } = this.state;\r\n    const { otherFields } = vesselDetails;\r\n    Object.assign(otherFields, { [name]: value });\r\n    this.setState({ vesselDetails });\r\n  }\r\n\r\n  render() {\r\n    const { errorMsg, success, newFields } = this.state;\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' size='small' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}> Back </Button>\r\n        <h2>Add New Vessel</h2>\r\n        <AddDynamicField submitNewFieldDetails={this.submitNewFieldDetails} />\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!success)}>\r\n          {success ? '' : errorMsg}\r\n        </FormHelperText>\r\n\r\n        <form id='vesselDetailsForm' onSubmit={this.handleAddNewVesselSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='vesselName' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IMO *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='IMO' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    DWT (MT) *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='DWT' required onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Flag\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='flag' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Type\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='vesselType' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Built Year\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='built' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Draft (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='draft' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    LOA (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='LOA' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Beam (M)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='beam' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    GRT (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='GRT' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    NRT (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='NRT' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    TPC (MT/CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='TPC' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Holds/Hatches\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='holdsHatches' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grain Capacity (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='grainCapacity' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bale Capacity (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='baleCapacity' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cranes (MT)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cranes' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grabs (CBM)\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='grabs' onChange={this.handleVesselDetailsChange} autoComplete='off' />\r\n                </td>\r\n              </tr>\r\n              {newFields}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayOtherFields() {\r\n    const otherFields = this.state.vesselDetails.otherFields;\r\n    let data = [];\r\n    if (otherFields && Object.keys(otherFields).length) {\r\n      const keys = Object.keys(otherFields);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        data.push(<tr key={i}>\r\n          <td key={keys[i]}>\r\n            <label>\r\n              {keys[i]}\r\n            </label>\r\n          </td>\r\n          <td key={otherFields[keys[i]]}>\r\n            <input type='text' maxLength={50} required name={keys[i]} onChange={this.handleNewFieldDetailsChange} defaultValue={otherFields[keys[i]]} />\r\n          </td>\r\n        </tr>)\r\n      }\r\n    }\r\n    this.setState({ newFields: data });\r\n  }\r\n\r\n}\r\n\r\nexport default AddNewVessel;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Button } from '@material-ui/core';\r\n\r\nclass ViewAllVessels extends Component {\r\n\r\n    localState = {\r\n        vesselList: [],\r\n        isEditPage: false,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (props && props.history && props.history.location.pathname === '/editVesselDetails') {\r\n            this.localState.isEditPage = true;\r\n        }\r\n        this.state = { ...this.localState };\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await api.getAllVesselsDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                vesselList: res.data.vesselList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'otherFields':\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div title={cellVal} style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList, isEditPage } = this.state;\r\n        const options = {\r\n            title: 'Vessel List',\r\n            keyColumn: '_id',\r\n            font: 'Arial',\r\n            dimensions: {\r\n                datatable: {\r\n                    width: '90%',\r\n                    height: '648px',\r\n                },\r\n                row: {\r\n                    height: '10px'\r\n                }\r\n            },\r\n            stripped: true,\r\n            features: {\r\n                canSearch: true,\r\n                canDownload: true,\r\n                canPrint: true,\r\n                canOrderColumns: true,\r\n                canRefreshRows: true,\r\n                rowsPerPage: {\r\n                    available: [5, 10, 25, 50, 100],\r\n                    selected: 10\r\n                },\r\n            },\r\n            data: {\r\n                columns: [\r\n                    {\r\n                        id: 'vesselName',\r\n                        label: 'Vessel Name',\r\n                        colSize: '80px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'IMO',\r\n                        label: 'IMO',\r\n                        colSize: '80px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'DWT',\r\n                        label: ' DWT (MT)',\r\n                        colSize: '80px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'flag',\r\n                        label: 'Flag',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'vesselType',\r\n                        label: 'Vessel Type',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'built',\r\n                        label: 'Built Year',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'draft',\r\n                        label: 'Draft',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'LOA',\r\n                        label: 'LOA (M)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input',\r\n                    }, {\r\n                        id: 'beam',\r\n                        label: 'Beam (M)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'GRT',\r\n                        label: 'GRT (MT)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'NRT',\r\n                        label: 'NRT (MT)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'TPC',\r\n                        label: 'TPC (MT/CBM)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'holdsHatches',\r\n                        label: 'Holds/Hatches',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'grainCapacity',\r\n                        label: 'Grain Capacity (CBM)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'baleCapacity',\r\n                        label: 'Bale Capacity (CBM)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    },\r\n                    {\r\n                        id: 'cranes',\r\n                        label: 'Cranes (MT)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    },\r\n                    {\r\n                        id: 'grabs',\r\n                        label: 'Grabs (CBM)',\r\n                        colSize: '80px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    },\r\n                ],\r\n                rows: [],\r\n            }\r\n        }\r\n\r\n        if (vesselList && vesselList.length) {\r\n            options.data.rows = [\r\n                ...vesselList.map(({ vesselName, IMO, flag, built, DWT, draft, LOA, beam, GRT, NRT, TPC, grainCapacity, baleCapacity, cranes, grabs, holdsHatches, vesselType, _id }) => ({ vesselName, IMO, flag, built, DWT, draft, LOA, beam, GRT, NRT, TPC, grainCapacity, baleCapacity, cranes, grabs, holdsHatches, vesselType, _id, otherFields: true }))\r\n            ]\r\n        }\r\n\r\n        if (isEditPage) {\r\n            options.features.canEdit = true;\r\n            options.features.canDelete = true;\r\n        }\r\n\r\n        if (vesselList && vesselList.some(f => f.otherFields)) {\r\n            options.data.columns.push({\r\n                id: 'otherFields',\r\n                label: 'Other Details',\r\n                colSize: '80px',\r\n            });\r\n            options.dimensions.datatable.width = '90%';\r\n        }\r\n\r\n        this.refreshRows = () => {\r\n            window.location.reload();\r\n        };\r\n\r\n        this.actionsRow = async e => {\r\n            if (!e || !e.type) {\r\n                return;\r\n            }\r\n\r\n            switch (e.type) {\r\n                case 'save':\r\n                    await api.updateVesselDetails(e.payload);\r\n                    break;\r\n                case 'delete':\r\n                    let resp = await api.deleteVesselDetails(e.payload['_id']);\r\n                    if (resp.data.status) {\r\n                        vesselList = vesselList.filter(f => f['_id'] !== e.payload['_id']);\r\n                        options.data.rows = vesselList;\r\n                    } else {\r\n                        this.refreshRows();\r\n                    }\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' className={'tooltipBoundary'} style={{ margin: '2% 0 6% 2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped actions={this.actionsRow} refreshRows={this.refreshRows} CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        if (!vesselList.some(f => f.otherFields)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = vesselList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.otherFields && Object.keys(vsl.otherFields).length) {\r\n            return content =\r\n                <Popup\r\n                    trigger={\r\n                        <Button\r\n                            variant='contained'\r\n                            size='small'\r\n                            color='primary'\r\n                        >\r\n                            Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'\r\n                >\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.otherFields} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ViewAllVessels;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../../../css/Admin.css';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Select from 'react-select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport api from '../../api';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport AddDynamicField from '../common/AddDynamicField';\r\n\r\n\r\nclass FillVoyageDetails extends Component {\r\n\r\n  localState = {\r\n    voyageDetails: {\r\n      chartererName: '',\r\n      vesselName: '',\r\n      vesselSize: '',\r\n      cpDate: new Date(),\r\n      loadPort: '',\r\n      cargo: '',\r\n      cargoIntake: '',\r\n      ownerName: '',\r\n      shipper: '',\r\n      loadPortAgent: '',\r\n      dischargePort: '',\r\n      receiver: '',\r\n      onHireSurveyor: '',\r\n      offHireSurveyor: '',\r\n      bunkerSupplier: '',\r\n      bunkerTrader: '',\r\n      pniInsurance: '',\r\n      weatherRoutingCompany: '',\r\n      fieldVisibility: {},\r\n      otherFields: {}\r\n    },\r\n    clientList: [],\r\n    vesselList: [],\r\n    newFields: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.localState };\r\n    this.handleAdminChange = this.handleAdminChange.bind(this);\r\n    this.handleVesselDetailSubmit = this.handleVesselDetailSubmit.bind(this);\r\n    this.handleChartererNameChange = this.handleChartererNameChange.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAllClientList();\r\n    this.getAllVesselsList();\r\n  }\r\n\r\n  handleChartererNameChange = e => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { chartererName: e.value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleVesselNameChange = e => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { vesselName: e.value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleAdminChange = e => {\r\n    e.preventDefault();\r\n    const { value, name } = e.target;\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { [name]: value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleDateFieldChange = value => {\r\n    const { voyageDetails } = this.state;\r\n    Object.assign(voyageDetails, { cpDate: value });\r\n    this.setState({ voyageDetails });\r\n  };\r\n\r\n  handleCheckBoxChange = e => {\r\n    const { checked, name } = e.target;\r\n    const { voyageDetails } = this.state;\r\n    let { fieldVisibility } = voyageDetails;\r\n    if (!fieldVisibility[name]) {\r\n      Object.assign(fieldVisibility, { [name]: checked });\r\n    } else if (fieldVisibility[name] && !checked) {\r\n      delete fieldVisibility[name];\r\n    }\r\n    this.setState({\r\n      voyageDetails: {\r\n        ...this.state.voyageDetails,\r\n        fieldVisibility\r\n      }\r\n    });\r\n  }\r\n\r\n  handleBackButton = () => this.props.history.goBack();\r\n\r\n  getAllClientList = async () => {\r\n    const res = await api.getAllClientList();\r\n    if (res.data.status) {\r\n      const clientList = res.data.clientList.sort().map(v => ({\r\n        label: v, value: v\r\n      }));\r\n      this.setState({ clientList, error: false });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  getAllVesselsList = async () => {\r\n    const res = await api.getAllVesselsList();\r\n    if (res.data.status) {\r\n      const vesselList = res.data.vesselList.map(m => m.vesselName + '_' + m.DWT).sort().map(v => ({\r\n        label: v, value: v\r\n      }));\r\n      this.setState({ vesselList, error: false });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  submitNewFieldDetails = e => {\r\n    e.preventDefault();\r\n    console.log(e)\r\n    const inputs = e.target.querySelectorAll('input');\r\n    if (inputs && inputs.length) {\r\n      const voyageDetails = this.state.voyageDetails;\r\n      Object.assign(voyageDetails.otherFields, { [inputs[0].value.trim()]: inputs[1].value.trim() });\r\n      this.setState({ voyageDetails });\r\n      document.getElementById('newFieldForm').reset();\r\n      this.displayOtherFields();\r\n    }\r\n  };\r\n\r\n  async handleVesselDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { voyageDetails } = this.state;\r\n    const { chartererName, vesselName, cpDate } = voyageDetails;\r\n    if (!chartererName || !vesselName || !cpDate.toString()) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = await api.insertPerformanceData({ cpDate, vesselName, chartererName, isDetailsFilled: false });\r\n    data = await api.insertVoyageData({ voyageDetails });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errorMsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.localState.voyageDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! Voyage Details saved for = ' + chartererName\r\n      });\r\n      document.getElementById('voyageDetailsForm').reset();\r\n      if (document.getElementById('newFieldForm')) {\r\n        document.getElementById('newFieldForm').reset();\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { clientList, vesselList, newFields } = this.state;\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <h2>Fill Voyage Details</h2>\r\n        <AddDynamicField submitNewFieldDetails={this.submitNewFieldDetails} />\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='voyageDetailsForm' onSubmit={this.handleVesselDetailSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n                <th>Visible</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Charterer Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={clientList.filter(({ value }) => value === this.state.voyageDetails.chartererName)}\r\n                    onChange={this.handleChartererNameChange}\r\n                    options={clientList}\r\n                    placeholder='Select Charterer Name'\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={vesselList.filter(({ value }) => value === this.state.voyageDetails.vesselName)}\r\n                    onChange={this.handleVesselNameChange}\r\n                    options={vesselList}\r\n                    placeholder='Select Vessel Name'\r\n                    required\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    CP Date *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <DatePicker selected={this.state.voyageDetails.cpDate} onChange={this.handleDateFieldChange} value={this.state.voyageDetails.cpDate} required autoComplete='off' maxDate={new Date()}\r\n                    placeholderText='Select a date before 1 day in the future' />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    defaultChecked\r\n                    disabled\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Size\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='vesselSize' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='vesselSize'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' required name='loadPort' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='loadPort'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' required name='dischargePort' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='dischargePort'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cargo' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='cargo'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Intake\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='cargoIntake' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='cargoIntake'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Owner Name\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ownerName' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='ownerName'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Shipper\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='shipper' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='shipper'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='loadPortAgent' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='loadPortAgent'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='dischargePortAgent' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='dischargePortAgent'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Receiver\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='receiver' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='receiver'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    On Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='onHireSurveyor' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='onHireSurveyor'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Off Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='offHireSurveyor' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='offHireSurveyor'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Supplier\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerSupplier' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='bunkerSupplier'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Trader\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerTrader' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='bunkerTrader'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='pniInsurance' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='pniInsurance'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Weather Routing Company\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='weatherRoutingCompany' onChange={this.handleAdminChange} />\r\n                </td>\r\n                <td>\r\n                  <Checkbox\r\n                    name='weatherRoutingCompany'\r\n                    color='primary'\r\n                    onChange={this.handleCheckBoxChange}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              {newFields}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayOtherFields() {\r\n    const otherFields = this.state.voyageDetails.otherFields;\r\n    let data = [];\r\n    if (otherFields && Object.keys(otherFields).length) {\r\n      const keys = Object.keys(otherFields);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        data.push(<tr key={i}>\r\n          <td key={keys[i]}>\r\n            <label>\r\n              {keys[i]}\r\n            </label>\r\n          </td>\r\n          <td key={otherFields[keys[i]]}>\r\n            <input type='text' maxLength={50} required name={keys[i]} onChange={this.handleNewFieldDetailsChange} defaultValue={otherFields[keys[i]]} />\r\n          </td>\r\n          <td>\r\n            <Checkbox name={keys[i]} color='primary' onChange={this.handleCheckBoxChange} />\r\n          </td>\r\n        </tr>)\r\n      }\r\n    }\r\n    this.setState({ newFields: data });\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default FillVoyageDetails;","import React, { Component } from 'react';\r\nimport { Datatable } from '@o2xp/react-datatable';\r\nimport api from '../../api';\r\nimport DisplaySelectedVesselDetails from '../../Client/DisplaySelectedVesselDetails';\r\nimport Popup from 'reactjs-popup';\r\nimport { Button } from '@material-ui/core';\r\nclass ViewVoyageDetails extends Component {\r\n\r\n    localState = {\r\n        voyageList: [],\r\n        isEditPage: false,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        if (props && props.history && props.history.location.pathname === '/editVoyageDetails') {\r\n            this.localState.isEditPage = true;\r\n        }\r\n        if (props && props.history && props.history.location && props.history.location.state) {\r\n            this.localState.userNameFromViewUsers = props.history.location.state.userName\r\n        }\r\n        this.state = { ...this.localState };\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await api.getAllVoyageDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                voyageList: res.data.voyageList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n        }\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case 'otherFields':\r\n                val = this.getPopupContent_OtherFields(cellVal, rowId);\r\n                break;\r\n            case 'fieldVisibility':\r\n                val = this.getPopupContent_FieldVisibility(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div title={cellVal} style={{ color: 'blue' }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { voyageList, isEditPage, userNameFromViewUsers } = this.state;\r\n        if (userNameFromViewUsers) {\r\n            voyageList = voyageList.filter(f => f.chartererName === this.state.userNameFromViewUsers)\r\n        }\r\n        const options = {\r\n            title: 'Client List',\r\n            keyColumn: '_id',\r\n            font: 'Arial',\r\n            dimensions: {\r\n                datatable: {\r\n                    width: '90%',\r\n                    height: '648px',\r\n                },\r\n                row: {\r\n                    height: '10px'\r\n                }\r\n            },\r\n            stripped: true,\r\n            features: {\r\n                canSearch: true,\r\n                canDownload: true,\r\n                canPrint: true,\r\n                canOrderColumns: true,\r\n                canRefreshRows: true,\r\n                rowsPerPage: {\r\n                    available: [5, 10, 25, 50, 100],\r\n                    selected: 10\r\n                },\r\n            },\r\n            data: {\r\n                columns: [\r\n                    {\r\n                        id: 'chartererName',\r\n                        label: 'Charterer Name',\r\n                        colSize: '50px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'vesselName',\r\n                        label: 'Vessel Name',\r\n                        colSize: '50px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'cpDate',\r\n                        label: 'CP Date',\r\n                        colSize: '50px',\r\n                        editable: false,\r\n                    }, {\r\n                        id: 'vesselSize',\r\n                        label: ' Vessel Size',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'loadPort',\r\n                        label: ' Load Port',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'dischargePort',\r\n                        label: 'Discharge Point',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'cargo',\r\n                        label: 'Cargo',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'cargoIntake',\r\n                        label: ' Cargo Intake',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'ownerName',\r\n                        label: 'Owner Name',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'shipper',\r\n                        label: 'Shipper',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'loadPortAgent',\r\n                        label: 'Load Port Agent',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'dischargePortAgent',\r\n                        label: 'Discharge Port Agent',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'receiver',\r\n                        label: 'Receiver',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'onHireSurveyor',\r\n                        label: 'On Hire Surveyor',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'offHireSurveyor',\r\n                        label: 'Off Hire Surveyor',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'bunkerSupplier',\r\n                        label: 'Bunker Supplier',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'bunkerTrader',\r\n                        label: 'Bunker Trader',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'pniInsurance',\r\n                        label: 'PNI Insurance',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }, {\r\n                        id: 'weatherRoutingCompany',\r\n                        label: ' Weather Routing Company',\r\n                        colSize: '50px',\r\n                        editable: true,\r\n                        dataType: 'text',\r\n                        inputType: 'input'\r\n                    }\r\n                ],\r\n                rows: [],\r\n            }\r\n        }\r\n\r\n        if (voyageList && voyageList.length) {\r\n            options.data.rows = [...voyageList.map(({\r\n                shipper, bunkerSupplier, bunkerTrader, cargo, cargoIntake, chartererName, ownerName, cpDate, dischargePort, loadPort, loadPortAgent, dischargePortAgent, offHireSurveyor, onHireSurveyor, pniInsurance, receiver, vesselName, vesselSize, weatherRoutingCompany, _id, otherFields, fieldVisibility\r\n            }) => ({\r\n                shipper, bunkerSupplier, bunkerTrader, cargo, cargoIntake, chartererName, ownerName, cpDate, dischargePort, loadPort, loadPortAgent, dischargePortAgent, offHireSurveyor, onHireSurveyor, pniInsurance, receiver, vesselName, vesselSize, weatherRoutingCompany, _id, edit: true, otherFields, fieldVisibility\r\n            }))\r\n            ]\r\n        }\r\n\r\n        if (isEditPage) {\r\n            options.features.canEdit = true;\r\n            options.features.canDelete = true;\r\n        }\r\n\r\n        if (voyageList && voyageList.some(f => f.otherFields)) {\r\n            options.data.columns.push({\r\n                id: 'otherFields',\r\n                label: 'Other Details',\r\n                colSize: '80px',\r\n            });\r\n        }\r\n\r\n        if (voyageList && voyageList.some(f => f.fieldVisibility)) {\r\n            options.data.columns.push({\r\n                id: 'fieldVisibility',\r\n                label: 'Visible',\r\n                colSize: '80px',\r\n            });\r\n        }\r\n\r\n        this.refreshRows = () => {\r\n            window.location.reload();\r\n        };\r\n\r\n        this.actionsRow = async e => {\r\n            if (!e || !e.type) {\r\n                return;\r\n            }\r\n\r\n            switch (e.type) {\r\n                case 'save':\r\n                    await api.updateVoyageDetails(e.payload);\r\n                    break;\r\n                case 'delete':\r\n                    let resp = await api.deleteVoyageDetails(e.payload['_id']);\r\n                    if (resp.data.status) {\r\n                        voyageList = voyageList.filter(f => f['_id'] !== e.payload['_id']);\r\n                        options.data.rows = voyageList;\r\n                    } else {\r\n                        this.refreshRows();\r\n                    }\r\n\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' className={'tooltipBoundary'} style={{ margin: '2% 0 6% 2%', display: 'flex' }}>\r\n                    <Datatable options={options} actions={this.actionsRow} refreshRows={this.refreshRows} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    getPopupContent_OtherFields = (cellVal, rowId) => {\r\n        const { voyageList } = this.state;\r\n        if (!voyageList.some(f => f.otherFields)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = voyageList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.otherFields && Object.keys(vsl.otherFields).length) {\r\n            return content =\r\n                <Popup trigger={\r\n                    <Button\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'>\r\n                        Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'>\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.otherFields} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n\r\n\r\n    getPopupContent_FieldVisibility = (cellVal, rowId) => {\r\n        const { voyageList } = this.state;\r\n        if (!voyageList.some(f => f.fieldVisibility)) {\r\n            return;\r\n        }\r\n\r\n        let vsl = voyageList.find(m => m['_id'] === rowId);\r\n        let content = <p></p>;\r\n        if (vsl && vsl.fieldVisibility && Object.keys(vsl.fieldVisibility).length) {\r\n            return content =\r\n                <Popup trigger={\r\n                    <Button\r\n                        variant='contained'\r\n                        size='small'\r\n                        color='primary'>\r\n                        Details </Button>}\r\n                    position={['bottom right', 'bottom center', 'left top', 'top center']}\r\n                    on='hover'\r\n                    keepTooltipInside='.tooltipBoundary'>\r\n                    <div className='content'>\r\n                        <DisplaySelectedVesselDetails vesselDetails={vsl.fieldVisibility} />\r\n                    </div>\r\n                </Popup>\r\n        }\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ViewVoyageDetails;\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst ShowDropDownAdmin = props => {\r\n    const clients = props.state.allClients.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const vessels = props.state.allVslForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const dates = props.state.allCpDatesForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    return (\r\n        <div style={{ display: 'flex', marginTop: '2%' }}>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={clients.filter(({ value }) => value === props.state.selectedClient)}\r\n                    onChange={props.handleClientListChange}\r\n                    options={clients}\r\n                    placeholder='Select Client'\r\n                    isDisabled={!clients || !clients.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={vessels.filter(({ value }) => value === props.state.selectedVessel)}\r\n                    onChange={props.handleVesselListChange}\r\n                    options={vessels}\r\n                    placeholder='Select Vessel'\r\n                    isDisabled={!vessels || !vessels.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={dates.filter(({ value }) => value === props.state.selectedCpDate)}\r\n                    onChange={props.handleCpDateChange}\r\n                    options={dates}\r\n                    placeholder='Select CP Date'\r\n                    isDisabled={!dates || !dates.length}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowDropDownAdmin","import React, { Component } from 'react';\r\nexport default class ViewPerformanceModule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...props\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { original, actual, actual$, original$ } = this.state.obj;\r\n        return (\r\n            <>\r\n                <td>\r\n                    <input type='text' disabled value={original || 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={actual || 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={original$ || 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={actual$ || 0} />\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport api from '../../api';\r\nimport { Button } from '@material-ui/core';\r\nimport ShowDropDownAdmin from '../common/ShowDropDownAdmin';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport '../../../css/Admin.css';\r\nimport ViewPerformanceModule from './ViewPerformanceModule';\r\n\r\nclass ViewPerformanceDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            vesselList: [],\r\n            selectedClient: '',\r\n            selectedVessel: '',\r\n            selectedCpDate: '',\r\n            allClients: [],\r\n            allVslForSelectedClient: [],\r\n            allCpDatesForSelectedClient: [],\r\n            error: false,\r\n            performanceDetails: {\r\n                tcHire: 0,\r\n                addressCommission: 0,\r\n            },\r\n        }\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n    async componentDidMount() {\r\n        const res = await api.getAllVesselsPerformance({ isDetailsFilled: true });\r\n        if (res.data.status) {\r\n            const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n            this.setState({\r\n                vesselList: res.data.vesselList,\r\n                allClients,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n        }\r\n    }\r\n\r\n    handleCpDateChange = async e => {\r\n        const { vesselList, selectedVessel, selectedClient, selectedCpDate } = this.state;\r\n        if (selectedCpDate && e.value === selectedCpDate) return;\r\n        const performanceDetails = vesselList.find(m => m.vesselName === selectedVessel && m.chartererName === selectedClient && m.cpDate === e.value);\r\n        const res = await api.getPortDetails({ userName: selectedClient, vesselName: selectedVessel, cpDate: e.value });\r\n        if (res.data.status) {\r\n            this.setState({\r\n                portDetails: res.data.portDetails,\r\n                performanceDetails,\r\n                selectedCpDate: e.value,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n        }\r\n\r\n\r\n        // const res = await api.getCompletePerformanceDetailsForView({ userName: selectedClient, vesselName: selectedVessel, cpDate: e.value });\r\n        // if (res.data.status) {\r\n        //   this.setState({\r\n        //     performanceDetails: res.data.performanceDetails,\r\n        //     vesselDetails,\r\n        //     selectedCpDate: e.value,\r\n        //     error: false,\r\n        //     performanceDetails: {}\r\n        //   });\r\n        // } else {\r\n        //   this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n        // }\r\n        this.setState({\r\n            performanceDetails,\r\n            selectedCpDate: e.value,\r\n            error: false\r\n        });\r\n\r\n    };\r\n\r\n    handleVesselListChange = async e => {\r\n        const { selectedVessel, vesselList, selectedClient } = this.state;\r\n        if (selectedVessel && e.value === selectedVessel) return;\r\n        const allCpDates = vesselList.filter(f => f.vesselName === e.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n        if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n            this.setState({\r\n                allCpDatesForSelectedClient: [],\r\n                selectedVessel: e.value,\r\n                selectedCpDate: '',\r\n                error: true,\r\n                errorMsg: 'Failed to fetch data'\r\n            });\r\n            return;\r\n        }\r\n        this.setState({\r\n            allCpDatesForSelectedClient: allCpDates,\r\n            selectedVessel: e.value,\r\n            selectedCpDate: '',\r\n            error: false,\r\n            performanceDetails: {}\r\n        });\r\n    }\r\n\r\n    handleClientListChange = e => {\r\n        const { selectedClient, vesselList } = this.state;\r\n        if (selectedClient && e.value === selectedClient) return;\r\n        const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.value).map(m => m.vesselName))];\r\n        if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n            this.setState({\r\n                allVslForSelectedClient: [],\r\n                selectedClient: e.value,\r\n                selectedVessel: '',\r\n                selectedCpDate: '',\r\n                error: true,\r\n                errorMsg: 'Failed to fetch data'\r\n            });\r\n            return;\r\n        }\r\n        this.setState({\r\n            allVslForSelectedClient: allVessels,\r\n            selectedClient: e.value,\r\n            selectedVessel: '',\r\n            selectedCpDate: '',\r\n            error: false,\r\n            performanceDetails: {}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { selectedCpDate, error, performanceDetails, portDetails } = this.state;\r\n        const { addressCommission, bunkerIFOAct, bunkerIFOOrg, bunkerMDOAct, bunkerMDOOrg, dischargePortDAAct$, dischargePortDAOrg$,\r\n            dischargePortDelay, intermediatePortDelay, loadPortDAAct$, loadPortDAOrg$, loadPortDelay, tcHire, freightAct, freightOrg,\r\n            totalAct, totalOrg, voyageDays, CargoQuantityAct, CargoQuantityOrg, ILOHCandCVEAct$, ILOHCandCVEOrg$, PNIInsuranceAct$, PNIInsuranceOrg$,\r\n            bunkerSurveyCostBendsAct$, bunkerSurveyCostBendsOrg$, despatchPaidAct$, despatchPaidOrg$, otherExpenseOrg$, otherExpenseAct$, wXRoutingExpenseAct$, wXRoutingExpenseOrg$,\r\n            demmurrageReceivedOrg$, demmurrageReceivedAct$, HraWarRiskOrg$, HraWarRiskAct$, remarks, loadPort, dischargePort } = performanceDetails;\r\n        let showTable;\r\n        if (selectedCpDate) {\r\n            showTable = <div>\r\n                <form style={{ margin: '1%' }}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Load Port</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={portDetails ? portDetails.loadPort : ''} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Discharge Port</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={portDetails ? portDetails.dischargePort : ''} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>  TC Hire (Per day)</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={tcHire || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>   Address Commission</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={addressCommission || 0} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n                <br />\r\n                <form style={{ margin: '1%' }}>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Field</th>\r\n                                <th>Original</th>\r\n                                <th>Actual</th>\r\n                                <th>Original ($)</th>\r\n                                <th>Actual ($)</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Voyage Days</label>\r\n                                </td>\r\n                                <ViewPerformanceModule obj={voyageDays} />\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Delays at Port</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Load Port Delay</label>\r\n                                </td>\r\n                                <ViewPerformanceModule obj={loadPortDelay} />\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Discharge Port Delay</label>\r\n                                </td>\r\n                                <ViewPerformanceModule obj={dischargePortDelay} />\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Intermediate Port Delays</label>\r\n                                </td>\r\n                                <ViewPerformanceModule obj={intermediatePortDelay} />\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Bunker Consumption (MT)</label>\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>IFO</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.consumption ? bunkerIFOOrg.consumption : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOAct && bunkerIFOAct.consumption ? bunkerIFOAct.consumption : 0} />\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> MDO</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.consumption ? bunkerMDOOrg.consumption : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOAct && bunkerMDOAct.consumption ? bunkerMDOAct.consumption : 0} />\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Bunker Price (USD)</label>\r\n                                </td>\r\n                                <td></td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>IFO</label></td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.price ? bunkerIFOOrg.price : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOAct && bunkerIFOAct.price ? bunkerIFOAct.price : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$ ? bunkerIFOOrg.bunkerIFOOrg$ : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$ ? bunkerIFOAct.bunkerIFOAct$ : 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>MDO</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.price ? bunkerMDOOrg.price : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOAct && bunkerMDOAct.price ? bunkerMDOAct.price : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$ ? bunkerMDOOrg.bunkerMDOOrg$ : 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$ ? bunkerMDOAct.bunkerMDOAct$ : 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label> Load Port DA</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={loadPortDAOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={loadPortDAAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Discharge Port DA</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={dischargePortDAOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={dischargePortDAAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>ILOHC and CVE</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={ILOHCandCVEOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={ILOHCandCVEAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Bunker Survey Cost Bends</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerSurveyCostBendsOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={bunkerSurveyCostBendsAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>WX Routing Expense</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={wXRoutingExpenseOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={wXRoutingExpenseAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>PNI Insurance</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={PNIInsuranceOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={PNIInsuranceAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Despatch Paid</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={despatchPaidOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={despatchPaidAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Other Expense</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={otherExpenseOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={otherExpenseAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>HRA/WAR Risk</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={HraWarRiskOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={HraWarRiskAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Demmurrage Received</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={demmurrageReceivedOrg$ || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={demmurrageReceivedAct$ || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Cargo Quantity (MT)</label>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={CargoQuantityOrg || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={CargoQuantityAct || 0} />\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Total</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={totalOrg || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={totalAct || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Freight (USD/MT)</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={freightOrg || 0} />\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={freightAct || 0} />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>Remark</label>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                </td>\r\n                                <td>\r\n                                    <input type='text' disabled value={remarks || ''} />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n            </div >\r\n        }\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <h2>View Performance Details</h2>\r\n                <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={error}>\r\n                    {error ? this.state.errorMsg : ''}\r\n                </FormHelperText>\r\n                <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n                    Back\r\n            </Button>\r\n                <ShowDropDownAdmin\r\n                    handleClientListChange={this.handleClientListChange}\r\n                    handleVesselListChange={this.handleVesselListChange}\r\n                    handleCpDateChange={this.handleCpDateChange}\r\n                    state={this.state}\r\n                />\r\n                <br />\r\n                {showTable}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewPerformanceDetails;\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        localStorage.getItem('userRole') === 'Admin' ||\r\n        localStorage.getItem('userRole') === 'Manager' ||\r\n        localStorage.getItem('userRole') === 'Client'\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/login',\r\n            state: { from: props.location }\r\n          }} />\r\n    )} />\r\n  )\r\n\r\n  export default PrivateRoute;","import React, { Component } from 'react';\r\nexport default class PerformanceModule extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getOriginalValue = this.getOriginalValue.bind(this);\r\n        this.getActualValue = this.getActualValue.bind(this);\r\n        this.state = {\r\n            original: 0,\r\n            actual: 0,\r\n            original$: 0,\r\n            actual$: 0\r\n        }\r\n    }\r\n\r\n    updateAndNotify() {\r\n        const { original, actual } = this.state;\r\n        const updateOriginal$ = this.commonFunction(original);\r\n        const updateActual$ = this.commonFunction(actual);\r\n        const localObj = {\r\n            original: original ? original : (this.props.voyageDays ? this.props.voyageDays.original : 0),\r\n            original$: updateOriginal$ ? updateOriginal$ : (this.props.voyageDays ? this.props.voyageDays.original$ : 0),\r\n            actual: actual ? actual : (this.props.voyageDays ? this.props.voyageDays.actual : 0),\r\n            actual$: updateActual$ ? updateActual$ : (this.props.voyageDays ? this.props.voyageDays.actual$ : 0)\r\n        }\r\n        this.setState({ ...localObj });\r\n\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        return { notifyRequired: (prevProps.tcHire !== this.props.tcHire || prevProps.addressCommission !== this.props.addressCommission) };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (snapshot.notifyRequired) {\r\n            this.updateAndNotify();\r\n        }\r\n    }\r\n\r\n    commonFunction(e) {\r\n        let { tcHire, addressCommission } = this.props\r\n        const value = parseFloat(e);\r\n        tcHire = parseFloat(tcHire);\r\n        addressCommission = parseFloat(addressCommission);\r\n        if (value >= 0 && tcHire >= 0 && addressCommission >= 0) {\r\n            const muitpleItem = tcHire * value;\r\n            return (muitpleItem - (addressCommission * (muitpleItem / 100)));\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    getOriginalValue(e) {\r\n        const value = e.target.value ? e.target.value : 0;\r\n        const updateOriginal$ = this.commonFunction(value);\r\n        const { actual, actual$ } = this.state;\r\n        const localObj = {\r\n            original: this.getValue(value),\r\n            original$: updateOriginal$ ? updateOriginal$ : 0,\r\n            actual,\r\n            actual$\r\n        }\r\n        this.setState({ ...localObj });\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getActualValue(e) {\r\n        const value = e.target.value ? e.target.value : 0;\r\n        const updateActual$ = this.commonFunction(value);\r\n        const { original, original$ } = this.state;\r\n        const localObj = {\r\n            original,\r\n            original$,\r\n            actual: this.getValue(value),\r\n            actual$: updateActual$\r\n        }\r\n\r\n        this.setState({ ...localObj });\r\n        this.props.onOriginalActualChange(localObj);\r\n    }\r\n\r\n    getValue(value) {\r\n        if (!value) return 0;\r\n        if (value[value.length - 1] === '.') return value;\r\n        let v = parseFloat(value);\r\n        return v ? v : 0;\r\n    }\r\n\r\n    render() {\r\n        const { actual$, original$ } = this.state;\r\n        return (\r\n            <>\r\n                <td>\r\n                    <input type='text' required={this.props.required} onChange={this.getOriginalValue} autoComplete='off' value={this.props.voyageDays ? this.props.voyageDays.original : 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' required={this.props.required} onChange={this.getActualValue} autoComplete='off' value={this.props.voyageDays ? this.props.voyageDays.actual : 0} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={original$ ? original$ : (this.props.voyageDays ? this.props.voyageDays.original$ : 0)} />\r\n                </td>\r\n                <td>\r\n                    <input type='text' disabled value={actual$ ? actual$ : (this.props.voyageDays ? this.props.voyageDays.actual$ : 0)} />\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShowDropDownAdmin from '../common/ShowDropDownAdmin';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport '../../../css/Admin.css';\r\nimport api from '../../api';\r\nimport PerformanceModule from './PerformanceModule';\r\n\r\nclass FillPerformanceDetails extends Component {\r\n  localState = {\r\n    isEditPage: false,\r\n    isEditContinue: true\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    if (props && props.history && props.history.location.pathname === '/editPerformanceDetails') {\r\n      this.localState.isEditPage = true;\r\n    }\r\n    this.handleVesselListChange = this.handleVesselListChange.bind(this);\r\n    this.handleClientListChange = this.handleClientListChange.bind(this);\r\n    this.handleCpDateChange = this.handleCpDateChange.bind(this);\r\n    this.handlePerformanceDetailSubmit = this.handlePerformanceDetailSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.tcHireChange = this.tcHireChange.bind(this);\r\n    this.addressCommissionChange = this.addressCommissionChange.bind(this);\r\n    this.onVoyageDaysChange = this.onVoyageDaysChange.bind(this);\r\n    this.onLoadPortDelayChange = this.onLoadPortDelayChange.bind(this);\r\n    this.onDischargePortDelayChange = this.onDischargePortDelayChange.bind(this);\r\n    this.onIntermediatePortDelayChange = this.onIntermediatePortDelayChange.bind(this);\r\n    this.handleIFOchange = this.handleIFOChange.bind(this);\r\n    this.handleMDOChange = this.handleMDOChange.bind(this);\r\n    this.getTotalOrg = this.getTotalOrg.bind(this);\r\n    this.getTotalAct = this.getTotalAct.bind(this);\r\n\r\n    this.state = {\r\n      vesselList: [],\r\n      selectedClient: '',\r\n      selectedVessel: '',\r\n      selectedCpDate: '',\r\n      allClients: [],\r\n      allVslForSelectedClient: [],\r\n      allCpDatesForSelectedClient: [],\r\n      error: false,\r\n      performanceDetails: {\r\n        tcHire: 0,\r\n        addressCommission: 0,\r\n      },\r\n    }\r\n  }\r\n\r\n  tcHireChange(e) {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    const { performanceDetails } = this.state;\r\n    Object.assign(performanceDetails, { tcHire: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  addressCommissionChange(e) {\r\n    const value = e.target.value ? e.target.value : 0;\r\n    const { performanceDetails } = this.state;\r\n    Object.assign(performanceDetails, { addressCommission: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handlePerformanceDetailsChange = e => {\r\n    e.preventDefault();\r\n    let { name, value } = e.target;\r\n    const { performanceDetails } = this.state;\r\n    value = value ? value : 0;\r\n    if (name === 'remarks') {\r\n      Object.assign(performanceDetails, { [name]: value });\r\n      this.setState({ performanceDetails });\r\n      return;\r\n    }\r\n\r\n    Object.assign(performanceDetails, { [name]: this.getValue(value) });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let res = {};\r\n    if (this.localState.isEditPage) {\r\n      res = await api.getAllVesselsPerformance({ isDetailsFilled: true });\r\n    }\r\n    else {\r\n      res = await api.getAllVesselsPerformance({ isDetailsFilled: false });\r\n    }\r\n    if (res.data.status) {\r\n      const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n      this.setState({\r\n        vesselList: res.data.vesselList,\r\n        allClients,\r\n        error: false,\r\n      });\r\n    } else {\r\n      this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n    }\r\n  }\r\n\r\n  handleCpDateChange = async e => {\r\n    const { vesselList, selectedVessel, selectedClient, selectedCpDate } = this.state;\r\n    if (selectedCpDate && e.value === selectedCpDate) return;\r\n    let vesselDetails = vesselList.find(m => m.vesselName === selectedVessel && m.cpDate === e.value);\r\n    this.resetForm();\r\n    const res = await api.getPortDetails({ userName: selectedClient, vesselName: selectedVessel, cpDate: e.value });\r\n    if (res && res.data && res.data.status) {\r\n      this.setState({\r\n        portDetails: res.data.portDetails,\r\n        vesselDetails,\r\n        selectedCpDate: e.value,\r\n        error: false,\r\n        performanceDetails: {}\r\n      });\r\n    } else {\r\n      this.setState({ error: true, errorMsg: 'Failed to fetch data' });\r\n    }\r\n\r\n    if (this.localState.isEditPage && selectedClient && selectedVessel && e.value) {\r\n      this.setState({performanceDetails:vesselDetails});\r\n      // const response = await api.getPerformanceDetails({ cpDate: e.value, vesselName: selectedVessel, chartererName: selectedClient });\r\n      // if (response && response.data && response.data.status) {\r\n      //   this.localState.isEditContinue = false;\r\n      //   this.setState({\r\n      //     performanceDetails: response.data.performanceDetails\r\n      //   })\r\n      // }\r\n    }\r\n  };\r\n\r\n  handleVesselListChange = async e => {\r\n    const { selectedVessel, vesselList, selectedClient } = this.state;\r\n    if (selectedVessel && e.value === selectedVessel) return;\r\n    const allCpDates = vesselList.filter(f => f.vesselName === e.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n    if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n      this.setState({\r\n        allCpDatesForSelectedClient: [],\r\n        selectedVessel: e.value,\r\n        selectedCpDate: '',\r\n        error: true,\r\n        errorMsg: 'Failed to fetch data'\r\n      });\r\n      return;\r\n    }\r\n    this.resetForm();\r\n    this.setState({\r\n      allCpDatesForSelectedClient: allCpDates,\r\n      selectedVessel: e.value,\r\n      selectedCpDate: '',\r\n      error: false,\r\n      performanceDetails: {}\r\n    });\r\n  }\r\n\r\n  handleClientListChange = e => {\r\n    const { selectedClient, vesselList } = this.state;\r\n    if (selectedClient && e.value === selectedClient) return;\r\n    const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.value).map(m => m.vesselName))];\r\n    if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n      this.setState({\r\n        allVslForSelectedClient: [],\r\n        selectedClient: e.value,\r\n        selectedVessel: '',\r\n        selectedCpDate: '',\r\n        error: true,\r\n        errorMsg: 'Failed to fetch data'\r\n      });\r\n      return;\r\n    }\r\n    this.resetForm();\r\n    this.setState({\r\n      allVslForSelectedClient: allVessels,\r\n      selectedClient: e.value,\r\n      selectedVessel: '',\r\n      selectedCpDate: '',\r\n      error: false,\r\n      performanceDetails: {}\r\n    });\r\n  }\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handlePerformanceDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { selectedClient, selectedVessel, selectedCpDate, vesselList } = this.state;\r\n    const vessel = vesselList.find(f => f.chartererName === selectedClient && f.vesselName === selectedVessel && f.cpDate === selectedCpDate)\r\n    const vId = vessel ? vessel['_id'] : '';\r\n    let data = await api.fillPerformanceDetails({ ...this.state.performanceDetails, vId });\r\n    if (data.data.status.errors || data.data.status.errorMsg) {\r\n      this.setState({\r\n        error: false,\r\n        errorMsg: data.data.status.errorMsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.resetForm();\r\n      this.setState({\r\n        performanceDetails: {\r\n          voyageDays: {},\r\n          loadPortDelay: {},\r\n          dischargePortDelay: {},\r\n          intermediatePortDelay: {}\r\n        },\r\n        error: true,\r\n        errorMsg: 'Success!! Performance Details saved for = ' + this.state.selectedClient\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  onVoyageDaysChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.voyageDays) {\r\n      performanceDetails.voyageDays = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.voyageDays, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onLoadPortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.loadPortDelay) {\r\n      performanceDetails.loadPortDelay = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.loadPortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onDischargePortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.dischargePortDelay) {\r\n      performanceDetails.dischargePortDelay = {};\r\n    }\r\n\r\n    Object.assign(performanceDetails.dischargePortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handleIFOChange(e) {\r\n    const { performanceDetails } = this.state;\r\n    let { name, value } = e.target;\r\n    value = value ? value : 0\r\n    const str = name.split('IFO');\r\n    if (str && str.length >= 2 && str[1] === 'Act') {\r\n      if (!performanceDetails.bunkerIFOAct) {\r\n        performanceDetails.bunkerIFOAct = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerIFOAct, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerIFOAct;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerIFOAct, { bunkerIFOAct$: (consumption * price) });\r\n      }\r\n    } else {\r\n      if (!performanceDetails.bunkerIFOOrg) {\r\n        performanceDetails.bunkerIFOOrg = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerIFOOrg, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerIFOOrg;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerIFOOrg, { bunkerIFOOrg$: (consumption * price) });\r\n      }\r\n    }\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  handleMDOChange(e) {\r\n    const { performanceDetails } = this.state;\r\n    let { name, value } = e.target;\r\n    value = value ? value : 0\r\n    const str = name.split('MDO');\r\n    if (str && str.length >= 2 && str[1] === 'Act') {\r\n      if (!performanceDetails.bunkerMDOAct) {\r\n        performanceDetails.bunkerMDOAct = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerMDOAct, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerMDOAct;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerMDOAct, { bunkerMDOAct$: (consumption * price) });\r\n      }\r\n    } else {\r\n      if (!performanceDetails.bunkerMDOOrg) {\r\n        performanceDetails.bunkerMDOOrg = {};\r\n      }\r\n      Object.assign(performanceDetails.bunkerMDOOrg, { [str[0]]: this.getValue(value) });\r\n      const { consumption, price } = performanceDetails.bunkerMDOOrg;\r\n      if (parseFloat(consumption) >= 0 && parseFloat(price) >= 0) {\r\n        Object.assign(performanceDetails.bunkerMDOOrg, { bunkerMDOOrg$: (consumption * price) });\r\n      }\r\n    }\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    if (totalOrg >= 0 && parseFloat(performanceDetails.CargoQuantityOrg) > 0) {\r\n      let freightOrg = parseFloat(totalOrg / parseFloat(performanceDetails.CargoQuantityOrg));\r\n      freightOrg = freightOrg ? parseFloat(freightOrg.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightOrg });\r\n    }\r\n\r\n    if (totalAct >= 0 && parseFloat(performanceDetails.CargoQuantityAct) > 0) {\r\n      let freightAct = parseFloat(totalAct / parseFloat(performanceDetails.CargoQuantityAct));\r\n      freightAct = freightAct ? parseFloat(freightAct.toFixed(2)) : 0;\r\n      Object.assign(performanceDetails, { freightAct });\r\n    }\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  onIntermediatePortDelayChange(obj) {\r\n    const { performanceDetails } = this.state;\r\n    if (!performanceDetails.intermediatePortDelay) {\r\n      performanceDetails.intermediatePortDelay = {};\r\n    }\r\n    Object.assign(performanceDetails.intermediatePortDelay, { ...obj });\r\n    const totalOrg = this.getTotalOrg(performanceDetails);\r\n    const totalAct = this.getTotalAct(performanceDetails);\r\n    Object.assign(performanceDetails, { totalAct, totalOrg });\r\n    this.setState({ performanceDetails });\r\n  }\r\n\r\n  getTotalOrg(performanceDetails) {\r\n    const { voyageDays, intermediatePortDelay, dischargePortDelay, loadPortDelay, bunkerIFOOrg, bunkerMDOOrg } = performanceDetails;\r\n    let total = 0;\r\n    const keys = Object.keys(performanceDetails).filter(m => m.substr(m.length - 4) === 'Org$');\r\n    if (keys && keys.length) {\r\n      keys.forEach(e => {\r\n        if (parseFloat(performanceDetails[e])) {\r\n          total += parseFloat(performanceDetails[e]);\r\n        }\r\n      });\r\n    }\r\n    if (voyageDays) {\r\n      total += parseFloat(voyageDays.original$);\r\n    }\r\n    if (intermediatePortDelay) {\r\n      total += parseFloat(intermediatePortDelay.original$);\r\n    }\r\n    if (dischargePortDelay) {\r\n      total += parseFloat(dischargePortDelay.original$);\r\n    }\r\n    if (loadPortDelay) {\r\n      total += parseFloat(loadPortDelay.original$);\r\n    }\r\n    if (bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$) {\r\n      total += parseFloat(bunkerIFOOrg.bunkerIFOOrg$);\r\n    }\r\n    if (bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$) {\r\n      total += parseFloat(bunkerMDOOrg.bunkerMDOOrg$);\r\n    }\r\n\r\n    return total;\r\n  }\r\n\r\n  getTotalAct(performanceDetails) {\r\n    const { voyageDays, intermediatePortDelay, dischargePortDelay, loadPortDelay, bunkerIFOAct, bunkerMDOAct } = performanceDetails;\r\n    let total = 0;\r\n    const keys = Object.keys(performanceDetails).filter(m => m.substr(m.length - 4) === 'Act$');\r\n    if (keys && keys.length) {\r\n      keys.forEach(e => {\r\n        if (parseFloat(performanceDetails[e]) >= 0) {\r\n          total += parseFloat(performanceDetails[e]);\r\n        }\r\n      });\r\n    }\r\n    if (voyageDays) {\r\n      total += parseFloat(voyageDays.actual$);\r\n    }\r\n    if (intermediatePortDelay) {\r\n      total += parseFloat(intermediatePortDelay.actual$);\r\n    }\r\n    if (dischargePortDelay) {\r\n      total += parseFloat(dischargePortDelay.actual$);\r\n    }\r\n    if (loadPortDelay) {\r\n      total += parseFloat(loadPortDelay.actual$);\r\n    }\r\n    if (bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$) {\r\n      total += parseFloat(bunkerIFOAct.bunkerIFOAct$);\r\n    }\r\n    if (bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$) {\r\n      total += parseFloat(bunkerMDOAct.bunkerMDOAct$);\r\n    }\r\n    return parseFloat(total);\r\n  }\r\n\r\n  resetForm() {\r\n    if (!document.getElementById('performanceDetailsForm')) {\r\n      return;\r\n    }\r\n    document.getElementById('performanceDetailsForm').reset();\r\n    document.getElementById('portDetailsForm').reset();\r\n  }\r\n\r\n  getValue(value) {\r\n    if (!value) return 0;\r\n    if (value[value.length - 1] === '.') return value;\r\n    let v = parseFloat(value);\r\n    return v ? v : 0;\r\n  }\r\n\r\n  render() {\r\n    const { selectedCpDate, error, portDetails, performanceDetails } = this.state;\r\n    const { tcHire, addressCommission, bunkerMDOAct, bunkerIFOOrg, bunkerIFOAct, bunkerMDOOrg, totalAct, totalOrg, freightOrg, freightAct, voyageDays, loadPortDelay,\r\n      dischargePortDelay, intermediatePortDelay, loadPortDAAct$, loadPortDAOrg$, dischargePortDAOrg$, dischargePortDAAct$, bunkerSurveyCostBendsOrg$, bunkerSurveyCostBendsAct$, ILOHCandCVEAct$,\r\n      ILOHCandCVEOrg$, wXRoutingExpenseOrg$, wXRoutingExpenseAct$, despatchPaidAct$, despatchPaidOrg$, PNIInsuranceAct$, PNIInsuranceOrg$, demmurrageReceivedAct$, demmurrageReceivedOrg$,\r\n      otherExpenseAct$, otherExpenseOrg$, HraWarRiskAct$, HraWarRiskOrg$, remarks, CargoQuantityAct, CargoQuantityOrg } = performanceDetails;\r\n    let showTable;\r\n    if (selectedCpDate) {\r\n      showTable = <div>\r\n        <form id='portDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled name='loadPort' value={portDetails.loadPort || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled name='dischargePort' value={portDetails.dischargePort || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    TC Hire (Per day) *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='tcHire' required onChange={this.tcHireChange} autoComplete='off' value={tcHire || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Address Commission *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='addressCommission' required onChange={this.addressCommissionChange} autoComplete='off' value={addressCommission || 0} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n        <br />\r\n        <form id='performanceDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: '1%' }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Original</th>\r\n                <th>Actual</th>\r\n                <th>Original ($)</th>\r\n                <th>Actual ($)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Voyage Days*\r\n                  </label>\r\n                </td>\r\n                <PerformanceModule voyageDays={voyageDays} required={true} tcHire={tcHire} addressCommission={addressCommission} onOriginalActualChange={this.onVoyageDaysChange} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Delays at Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port Delay\r\n                </label>\r\n                </td>\r\n                <PerformanceModule voyageDays={loadPortDelay} required={false} tcHire={tcHire} addressCommission={addressCommission} onOriginalActualChange={this.onLoadPortDelayChange} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port Delay\r\n                </label>\r\n                </td>\r\n                <PerformanceModule voyageDays={dischargePortDelay} required={false} tcHire={tcHire} addressCommission={addressCommission} onOriginalActualChange={this.onDischargePortDelayChange} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Intermediate Port Delays\r\n                </label>\r\n                </td>\r\n                <PerformanceModule voyageDays={intermediatePortDelay} required={false} tcHire={tcHire} addressCommission={addressCommission} onOriginalActualChange={this.onIntermediatePortDelayChange} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Consumption (MT) *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='consumptionIFOOrg' required onChange={this.handleIFOchange} autoComplete='off' value={bunkerIFOOrg && bunkerIFOOrg.consumption ? bunkerIFOOrg.consumption : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='consumptionIFOAct' required onChange={this.handleIFOchange} autoComplete='off' value={bunkerIFOAct && bunkerIFOAct.consumption ? bunkerIFOAct.consumption : 0} />\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='consumptionMDOOrg' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOOrg ? bunkerMDOOrg.consumption : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='consumptionMDOAct' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOAct ? bunkerMDOAct.consumption : 0} />\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Price (USD) *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='priceIFOOrg' required onChange={this.handleIFOchange} autoComplete='off' value={bunkerIFOOrg && bunkerIFOOrg.price ? bunkerIFOOrg.price : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='priceIFOAct' required onChange={this.handleIFOchange} autoComplete='off' value={bunkerIFOAct && bunkerIFOAct.price ? bunkerIFOAct.price : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled value={bunkerIFOOrg && bunkerIFOOrg.bunkerIFOOrg$ ? bunkerIFOOrg.bunkerIFOOrg$ : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled value={bunkerIFOAct && bunkerIFOAct.bunkerIFOAct$ ? bunkerIFOAct.bunkerIFOAct$ : 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='priceMDOOrg' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOOrg ? bunkerMDOOrg.price : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='priceMDOAct' required onChange={this.handleMDOChange} autoComplete='off' value={bunkerMDOAct ? bunkerMDOAct.price : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled value={bunkerMDOOrg && bunkerMDOOrg.bunkerMDOOrg$ ? bunkerMDOOrg.bunkerMDOOrg$ : 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' disabled value={bunkerMDOAct && bunkerMDOAct.bunkerMDOAct$ ? bunkerMDOAct.bunkerMDOAct$ : 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='loadPortDAOrg$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={loadPortDAOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='loadPortDAAct$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={loadPortDAAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='dischargePortDAOrg$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={dischargePortDAOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='dischargePortDAAct$' required onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={dischargePortDAAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    ILOHC and CVE\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ILOHCandCVEOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={ILOHCandCVEOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='ILOHCandCVEAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={ILOHCandCVEAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Survey Cost Bends\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerSurveyCostBendsOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={bunkerSurveyCostBendsOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='bunkerSurveyCostBendsAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={bunkerSurveyCostBendsAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    WX Routing Expense\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='wXRoutingExpenseOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={wXRoutingExpenseOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='wXRoutingExpenseAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={wXRoutingExpenseAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='PNIInsuranceOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={PNIInsuranceOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='PNIInsuranceAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={PNIInsuranceAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Despatch Paid\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='despatchPaidOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={despatchPaidOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='despatchPaidAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={despatchPaidAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Other Expense\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='otherExpenseOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={otherExpenseOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='otherExpenseAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={otherExpenseAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    HRA/WAR Risk\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='HraWarRiskOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={HraWarRiskOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='HraWarRiskAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={HraWarRiskAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Demmurrage Received\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='demmurrageReceivedOrg$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={demmurrageReceivedOrg$ || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='demmurrageReceivedAct$' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={demmurrageReceivedAct$ || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Quantity (MT)\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='CargoQuantityOrg' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={CargoQuantityOrg || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='CargoQuantityAct' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={CargoQuantityAct || 0} />\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Total\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='totalOrg' disabled value={totalOrg || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='totalAct' disabled value={totalAct || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Freight (USD/MT)\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='freightOrg' disabled value={freightOrg || 0} />\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='freightAct' disabled value={freightAct || 0} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Remarks\r\n              </label>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                </td>\r\n                <td>\r\n                  <input type='text' name='remarks' onChange={this.handlePerformanceDetailsChange} autoComplete='off' value={remarks || ''} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            size='small'\r\n            color='primary'\r\n            style={{ margin: '16px' }}>\r\n            Submit </Button>\r\n        </form>\r\n      </div >\r\n    }\r\n    return (\r\n      <div className='about_us_2 about_us_2_animated'>\r\n        {\r\n          this.localState.isEditPage ? (<h2>Edit Performance Details</h2>) : (<h2>Fill Performance Details</h2>)\r\n        }\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={error}>\r\n          {error ? this.state.errorMsg : ''}\r\n        </FormHelperText>\r\n        <Button variant='contained' color='primary' onClick={this.handleBackButton} style={{ top: '4%', left: '10%', position: 'fixed' }}>\r\n          Back\r\n        </Button>\r\n        <ShowDropDownAdmin\r\n          handleClientListChange={this.handleClientListChange}\r\n          handleVesselListChange={this.handleVesselListChange}\r\n          handleCpDateChange={this.handleCpDateChange}\r\n          state={this.state}\r\n        />\r\n        <br />\r\n        {showTable}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FillPerformanceDetails;","import React from 'react';\r\nimport './css/App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport About from './components/Others/About';\r\nimport Location from './components/Others/Location';\r\nimport LoginHome from './components/Login/LoginHome';\r\nimport Home from './components/Others/Home';\r\nimport Header from './components/Others/Header';\r\nimport Footer from './components/Others/Footer';\r\nimport PieCharts from './components/Others/PieCharts';\r\nimport CheckPerformance from './components/Client/CheckPerformance';\r\nimport FirstComponentStateFul from './components/FirstComponentStateFul'\r\nimport ForgotPassword from './components/Login/ForgotPassword';\r\nimport AddNewUser from './components/Admin/user/AddNewUser';\r\nimport ViewAllUsers from './components/Admin/user/ViewAllUsers';\r\nimport AddNewVessel from './components/Admin/vessel/AddNewVessel';\r\nimport ViewAllVessels from './components/Admin/vessel/ViewAllVessels';\r\nimport FillVoyageDetails from './components/Admin/voyage/FillVoyageDetails'\r\nimport ViewVoyageDetails from './components/Admin/voyage/ViewVoyageDetails'\r\nimport ViewPerformanceDetails from './components/Admin/performance/ViewPerformanceDetails';\r\nimport PrivateRoute from './components/Admin/common/PrivateRoute';\r\nimport FillPerformanceDetails from './components/Admin/performance/FillPerformanceDetails';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className='App main-wrapper'>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/about' component={About}></Route>\r\n          <Route path='/location' component={Location}></Route>\r\n          <Route path='/login' component={LoginHome}></Route>\r\n\r\n          <PrivateRoute path='/addNewUser' component={AddNewUser}></PrivateRoute>\r\n          <PrivateRoute path='/viewAllUsers' component={ViewAllUsers}></PrivateRoute>\r\n          <PrivateRoute path='/editUserDetails' component={ViewAllUsers}></PrivateRoute>\r\n\r\n\r\n          <PrivateRoute path='/addNewVessel' component={AddNewVessel}></PrivateRoute>\r\n          <PrivateRoute path='/viewAllVessels' component={ViewAllVessels}></PrivateRoute>\r\n          <PrivateRoute path='/editVesselDetails' component={ViewAllVessels}></PrivateRoute>\r\n\r\n\r\n          <PrivateRoute path='/fillVoyageDetails' component={FillVoyageDetails}></PrivateRoute>\r\n          <PrivateRoute path='/viewVoyageDetails' component={ViewVoyageDetails}></PrivateRoute>\r\n          <PrivateRoute path='/editVoyageDetails' component={ViewVoyageDetails}></PrivateRoute>\r\n\r\n          <PrivateRoute path='/fillPerformanceDetails' component={FillPerformanceDetails}></PrivateRoute>\r\n          <PrivateRoute path='/viewPerformanceDetails' component={ViewPerformanceDetails}></PrivateRoute>\r\n          <PrivateRoute path='/editPerformanceDetails' component={FillPerformanceDetails}></PrivateRoute>\r\n         \r\n          <PrivateRoute path='/checkPerformance' component={CheckPerformance}></PrivateRoute>\r\n          <Route path='/pieChart' component={PieCharts}></Route>\r\n          <Route path='/forgotPassword' component={ForgotPassword}></Route>\r\n          <Route path='/' component={Home}></Route>\r\n        </Switch>\r\n      </div>\r\n      <Footer/>\r\n      {/* <FirstComponentStateFul/> */}\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/index\";\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n   <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}