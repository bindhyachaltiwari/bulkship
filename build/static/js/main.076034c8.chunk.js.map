{"version":3,"sources":["reducers/reducer.js","sagas/saga.js","js/index.js","components/Others/About.js","components/Others/Location.js","components/Others/Spinner.js","components/Client/DisplaySelectedVesselDetails.js","components/Admin/PieCharts.js","components/Client/ClientHome.js","components/Admin/AdminHome.js","components/Manager/ManagerHome.js","components/Others/Page.js","components/Login/LoginHome.js","components/Admin/ShowDropDownAdmin.js","components/Admin/FillPerformanceDetails.js","components/Admin/AddNewClient.js","components/Admin/AddNewVessel.js","components/Admin/FillVoyageDetails.js","components/Others/SlideShow.js","components/Others/Home.js","components/Others/Header.js","components/Others/Footer.js","components/FirstComponentStateFul.js","action/action.js","components/Others/Alert.js","components/Login/FormPasswordReset.js","components/Login/ForgotPassword.js","components/Manager/ViewAllVessels.js","components/Manager/ViewAllClients.js","components/Admin/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","apiData","watcherSaga","workerFunction","takeEvery","call","getAPIData","finalData","put","type","fetch","then","response","json","initializeMiddleware","createSagaMiddleware","store","createStore","state","action","Object","assign","concat","payload","applyMiddleware","run","About","className","AnyReactComponent","text","Location","style","height","width","bootstrapURLKeys","key","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","Spinner","display","flexDirection","justifyContent","alignItems","color","DisplaySelectedVesselDetails","pairs","getDisplayKey","charAt","toUpperCase","slice","replace","trim","vesselDetails","push","marginTop","PieCharts","options","chart","labels","keys","responsive","breakpoint","legend","position","series","values","ClientHome","getAllVoyage","a","async","axios","post","headers","data","localStorage","getItem","res","status","setState","vesselList","companyName","error","handlePerformanceClick","e","c","find","m","target","id","console","log","vesselName","history","pathname","detail","buildCustomTableBodyCell","val","cellVal","column","rowId","textAlign","onClick","getPopupContent","capitalize","s","vesselSize","cpDate","loadPort","cargo","cargoIntake","onwerName","trigger","textDecoration","cursor","modal","closeOnDocumentClick","dischargePoint","tableData","performanceDetails","isPeformancePage","userName","showData","length","title","keyColumn","font","dimensions","datatable","row","stripped","features","canSearch","canDownload","canPrint","canOrderColumns","columns","label","colSize","dataType","rows","map","_id","checkPerformance","ourCount","previousYearDate","Date","pastYear","getFullYear","setFullYear","forEach","v","getTime","parseInt","marginLeft","CustomTableBodyCell","withRouter","AdminHome","marginRight","to","ManagerHome","isAdmin","Page","toLowerCase","LoginHome","isLoggedIn","role","errorMsg","_handleSubmit","username","password","setSubmitting","resetForm","resp","err","setItem","token","displayName","initialValues","validationSchema","object","shape","string","required","onSubmit","render","touched","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","userRole","variant","margin","elevation","fullWidth","htmlFor","Boolean","name","autoComplete","value","onChange","onBlur","disabled","ShowDropDownAdmin","clients","allClients","sort","vessels","allVslForSelectedClient","dates","allCpDatesForSelectedClient","filter","selectedClient","handleClientListChange","placeholder","isDisabled","selectedVessel","handleVesselListChange","selectedCpDate","handleCpDateChange","FillPerformanceDetails","handlePerformanceDetailsChange","preventDefault","success","getAllVessels","Set","chartererName","allCpDates","f","allVessels","bind","handlePerformanceDetailSubmit","handleBackButton","goBack","event","vessel","vId","errmsg","document","getElementById","reset","showTable","top","left","fontSize","AddNewClient","userDetails","clientType","roles","handleUserDetailsChange","handleRoleChange","handleClientTypeChange","handleAddNewUserSubmit","indexOf","AddNewVessel","IMO","DWT","built","LOA","beam","cranes","grabs","handleVesselDetailsChange","handleAddNewVesselSubmit","FillVoyageDetails","localState","Shipper","loadPortAgent","receiver","onHireSurveyor","offHireSurveyor","bunkerSupplier","bunkerTrader","pniInsurance","weatherRoutingCompany","clientList","handleChartererNameChange","handleVesselNameChange","handleAdminChange","handleDateFieldChange","V","getAllClients","cl","vl","handleVesselDetailSubmit","toString","isDetailsFilled","selected","maxDate","placeholderText","images","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","SlideShow","each","index","src","alt","Home","Header","handleClick","showHeader","toggleHeaderState","logoutAndToggleState","toggleState","clear","scroll","Footer","FirstComponentStateFul","count","itemList","incrementCounter","addItemTo","addItems","getApiCall","addItem","getApiCallData","item","connect","dispatch","Transition","direction","Alert","handleClose","isOpen","hasTwoButtons","submitButtonText","open","transition","keepMounted","onClose","aria-labelledby","aria-describedby","FormPasswordReset","passChangeSuccess","user","_handleModalClose","_renderModal","_handleClose","confirmPass","newPass","oneOf","ref","ForgotPassword","ViewAllVessels","canClick","ViewAllClients","handleEditClick","edit","PrivateRoute","component","rest","from","location","App","path","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.076034c8.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    items: [],\r\n    apiData: [],\r\n};\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD': {\r\n            return Object.assign({}, state, {\r\n                items: state.items.concat(action.payload)\r\n            });\r\n        }\r\n        case 'DATA-LOADED': {\r\n            return Object.assign({}, state, {\r\n                apiData: state.apiData.concat(action.finalData)\r\n            });\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nexport default function* watcherSaga() {\r\n    yield takeEvery('APICALL', workerFunction)\r\n}\r\nfunction* workerFunction() {\r\n    try {\r\n        const finalData = yield call(getAPIData);\r\n        //const finalResponse = yield finalData.json();\r\n        yield put({ type: 'DATA-LOADED', finalData });\r\n    }\r\n    catch (e) {\r\n        yield put({ type: 'DATA-ERROR', finalData: e });\r\n    }\r\n}\r\nfunction getAPIData() {\r\n    return fetch('https://jsonplaceholder.typicode.com/posts').then((response) =>\r\n        response.json()\r\n    );\r\n    // return fetch('https://jsonplaceholder.typicode.com/posts').then(function(response) {\r\n    // response.json();\r\n    // })\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers/reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport watcherSaga from '../sagas/saga';\r\n\r\nconst initializeMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(initializeMiddleware));\r\ninitializeMiddleware.run(watcherSaga);\r\nexport default store;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <section className=\"about_us_2 about_us_2_animated\">\r\n                <div className=\"about_text\">\r\n                    <p className=\"main anim animated\">about bulkcom shipping</p>\r\n                    <div className=\"pic_cont anim animated\">\r\n                    </div>\r\n                    <p className=\"sub anim4 animated\">WE'VE BUILT OUR REPUTATION ON EXCELLENCE IN SHIP CHARTERING BOTH VOYAGE AND TIME CHARTER, WITH A CONSTANT FOCUS ON SERVING OUR CUSTOMERS.<br />\r\n                        We are experts in planning, executing and handling any dry cargo movement in bulk across the globe.\r\n                        We have booked over 5Million MT of dry bulk cargo on all kinds of vessel ranging from handy to cape size with special focus on supramax category.<br />\r\n                        When trust us to charter vessels exclusively through us, you'll know that your shipments are in the hands of skilled, qualified professionals with decades of experience in shipping.<br /><br />\r\n                        Contact us today to discuss your current and future chartering needs. We have trained friendly staff to provide the best customer service in the industry.\r\n\r\n                        <br /><br /><b>WHY CHOOSE US?</b><br />\r\n                        WE AIM TO PROVIDE LEVERAGE TO YOUR BUSINESS BACKED BY OUR MARKET INFORMATION<br />\r\n                        Your freight is too important to trust to amateur and most important aspect for a trade deal to conclude. We deliver every time, and that's a promise.<br /><br />\r\n\r\n                        WE KNOW THE INS AND OUTS OF SHIPPING<br />\r\n                        The difference, in one word, is experience. Our team is fully capable to provide you the best service in industry.<br /><br />\r\n\r\n                        WE'RE NOT JUST A BROKER, WE'RE YOUR PARTNER<br />\r\n                        Shipping needs fluctuate, grow, and evolve in ways you might not be able to anticipate. We can help create not just a solution, but a entire shipping strategy.<br /><br />\r\n                        {/* <span className=\"more_btn\">\r\n                            more\r\n                        <img src=\"https://aegisuae.com/resources/img/arrow_down_white.svg\" alt=\"arrow\" className=\"arrow\" />\r\n                        </span> */}\r\n                        {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                        <span className=\"sub_more\">Our Trading efforts are currently focused on Bulk, Limestone, Dolomite, Gypsum, and Coal. We also have our own fleet of Chartered in tonnage and Dry Bulk Vessels to provide end to end solutions to our Clients.\r\n                        Our business endeavours tirelessly to create strong foundations of trust with all stake holders of the organisation.\r\n                        The company specializes in Value Addition with the supply chain. Our primary objective is to cater to and exceed our clients expectations in a timely and professional manner.\r\n                The Group is on the cusp of massive expansions and business growth and has been growing from strength to strength supported with the faith our customers, suppliers and employees repose on the organisation.</span>\r\n                    </p>\r\n                    {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link_2\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass Location extends Component {\r\n    static defaultProps = {\r\n        center: {\r\n          lat: 59.95,\r\n          lng: 30.33\r\n        },\r\n        zoom: 11\r\n      };\r\n      render() {\r\n        return (\r\n            <div>\r\n                <section className=\"about_us_2 about_us_2_animated\">\r\n                    <div className=\"about_text\">\r\n                    <div style={{ height: '100vh', width: '100%' }}>\r\n                            <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: 'AIzaSyAtqgKhqfCi91s3GL1SM5HEt9pfqQvnZDw' }}\r\n                            defaultCenter={this.props.center}\r\n                            defaultZoom={this.props.zoom}\r\n                            >\r\n                            <AnyReactComponent\r\n                                lat={59.955413}\r\n                                lng={30.337844}\r\n                                text=\"My Marker\"\r\n                            />\r\n                            </GoogleMapReact>\r\n                        </div>\r\n                    </div>\r\n                    </section>\r\n            </div>\r\n        )\r\n      }\r\n}\r\nexport default Location;","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nexport default function Spinner() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <CircularProgress color=\"primary\" />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst DisplaySelectedVesselDetails = props => {\r\n    var pairs = [];\r\n    const getDisplayKey = key => {\r\n        key = key.charAt(0).toUpperCase() + key.slice(1)\r\n        return key.replace(/([A-Z])/g, ' $1').trim()\r\n    }\r\n\r\n    for (var key in props.vesselDetails) {\r\n        pairs.push(\r\n            <tr>\r\n                <td>\r\n                    <label>\r\n                        {getDisplayKey(key)}\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    {props.vesselDetails[key]}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <table style={{marginTop:'5%'}}>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    {pairs}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplaySelectedVesselDetails","import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nclass PieCharts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: 'pie',\r\n        },\r\n        labels: Object.keys(props.vesselDetails),\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }]\r\n},\r\n      series: Object.values(props.vesselDetails),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\" />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col percentage-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"pie\"\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PieCharts;\r\n\r\n/*import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {},\r\n      series: [44, 55, 41, 17, 15],\r\n      labels: [\"A\", \"B\", \"C\", \"D\", \"E\"]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\" />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col percentage-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"pie\"\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n */","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\nimport Popup from \"reactjs-popup\";\r\nimport DisplaySelectedVesselDetails from './DisplaySelectedVesselDetails';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    withRouter\r\n  } from 'react-router-dom'\r\n  \r\nimport PieCharts from '../../components/Admin/PieCharts';\r\n\r\nclass ClientHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getAllVoyage();\r\n        this.state = {\r\n            vesselList: [],\r\n            vesselDetails: {\r\n                vesselName: '',\r\n                vesselSize: '',\r\n                cpDate: '',\r\n                loadPort: '',\r\n                dischargePoint: '',\r\n                cargo: '',\r\n                cargoIntake: '',\r\n                onwerName: ''\r\n            },\r\n            tableData: [],\r\n            performanceDetails: {},\r\n            isPeformancePage: false,\r\n            error: false,\r\n            userName: '',\r\n        }\r\n    }\r\n\r\n    getAllVoyage = async () => {\r\n        await axios.post('/voyageDetails/getAllVoyage', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: { 'companyName': localStorage.getItem('companyName')},\r\n        }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    vesselList: res.data.vesselList,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                    error: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    error: true,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handlePerformanceClick = e => {\r\n        const { vesselList } = this.state;\r\n        const c = vesselList.find(m => m['_id'] === e.target.id);\r\n        console.log(c.vesselName);\r\n        //let history = useHistory();\r\n        // history.push('/DisplaySelectedVesselPerformance');\r\n        this.props.history.push({\r\n            pathname: '/CheckPerformance',\r\n        state: { detail: c }\r\n        })\r\n        //alert(c.vesselName)\r\n    }\r\n\r\n\r\n    // handleVesselClick = e => {\r\n    //     const { vesselList } = this.state;\r\n    //     const c = vesselList.find(m => m['_id'] === e.target.id);\r\n    //     console.log(c.vesselName);\r\n    //     alert(c.vesselName)\r\n    // }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case \"checkPerformance\":\r\n                val = <button style={{ color: \"blue\", textAlign: \"center\" }} id={rowId} type=\"button\" onClick={this.handlePerformanceClick}>Check Performance</button>;\r\n                break;\r\n            case \"vesselName\":\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div style={{ color: \"blue\" }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        let showData;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Fixture List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"vesselName\",\r\n                            label: \"Vessel Name\",\r\n                            colSize: \"50px\",\r\n                            dataType: ''\r\n                        },\r\n                        {\r\n                            id: \"cpDate\",\r\n                            label: \"CP Date\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"checkPerformance\",\r\n                            label: \"Performance\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList.map(({ vesselName, cpDate, _id }) => ({ vesselName, cpDate, id: _id, checkPerformance: true }))\r\n                    ],\r\n                }\r\n            }\r\n\r\n            const ourCount = {};\r\n            let previousYearDate = new Date();\r\n            const pastYear = previousYearDate.getFullYear() - 1;\r\n            previousYearDate.setFullYear(pastYear);\r\n            vesselList.forEach(v => {\r\n                if (!ourCount[v.cargo]) {\r\n                    ourCount[v.cargo] = 0;\r\n                }\r\n                if(new Date(v.cpDate).getTime() <= new Date().getTime() && new Date(v.cpDate).getTime() > previousYearDate.getTime()) {\r\n                    ourCount[v.cargo] += parseInt(v.cargoIntake);\r\n                }\r\n            });\r\n\r\n\r\n            showData = < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                <div style={{ marginTop: '15%', marginLeft: '0%' }}>\r\n                    {/* <DisplaySelectedVesselDetails vesselDetails={ourCount} /> */}\r\n                    <PieCharts vesselDetails={ourCount}/>\r\n\r\n                </div>\r\n            </div >\r\n        } else {\r\n            showData = <div style={{ marginTop: '15%' }}> Oops!! There are no business details for you.</div>\r\n        }\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n            <span>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                {showData}\r\n            </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        let vesselDetails = vesselList.find(m => m['_id'] === rowId);\r\n        vesselDetails = (({ vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }) => (\r\n            { vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }))(vesselDetails);\r\n\r\n        const content = <div>\r\n            <Popup trigger={<a id={rowId} style={{ color: \"blue\", textAlign: \"center\", textDecoration: 'underline', cursor: 'pointer' }}> {cellVal} </a>}\r\n                modal closeOnDocumentClick >\r\n                <div className=\"content\">\r\n                    <DisplaySelectedVesselDetails vesselDetails={vesselDetails} />\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientHome);\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass AdminHome extends Component {\r\n\r\n    history;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"about_us_2 about_us_2_animated\">\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/addNewClient\">Add New Client </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/addNewVessel\">Add New Vessel</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/fillVoyageDetails\">Fill Voyage Details </Link>\r\n                    <Link style={{ width: '300px', height: '40px',marginRight: '80px' }} to=\"/fillPerformanceDetails\">Fill Performance Details</Link>\r\n                    <Link style={{ width: '300px', height: '40px' }} to=\"/addRightsToManager\">Add Rights to Manager</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminHome);","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass ManagerHome extends Component {\r\n\r\n    render() {\r\n        let isAdmin = localStorage.getItem('isAdmin');\r\n        if(isAdmin === 'true') {\r\n            isAdmin = true;                \r\n        }\r\n        else {\r\n            isAdmin = false;\r\n        }\r\n        return (\r\n            <div className=\"about_us_2 about_us_2_animated\">\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/viewAllClients\">View All Clients </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/viewAllVessels\">View All Vessels</Link>\r\n                    {/* <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/fillVoyageDetails\">Fill Voyage Details </Link>\r\n                    <Link style={{ width: '300px', height: '40px' }} to=\"/fillPerformanceDetails\">Fill Performance Details</Link> */}\r\n                    {\r\n                        isAdmin ? (\r\n                            <div>\r\n                            <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/addNewClient\">Add New Client </Link>\r\n                            <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/addNewVessel\">Add New Vessel</Link>\r\n                            <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/fillVoyageDetails\">Fill Voyage Details </Link>\r\n                            <Link style={{ width: '300px', height: '40px',marginRight: '80px' }} to=\"/fillPerformanceDetails\">Fill Performance Details</Link>\r\n                            </div>\r\n                        ) : ''\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default withRouter(ManagerHome);","import React from 'react';\r\nimport LoginHome from '../Login/LoginHome';\r\nimport ClientHome from '../Client/ClientHome';\r\nimport AdminHome from '../Admin/AdminHome';\r\nimport ManagerHome from '../Manager/ManagerHome';\r\n\r\nfunction Page(props) {\r\n    if (localStorage.getItem('authToken')) {\r\n        switch (localStorage.getItem('userRole').toLowerCase()) {\r\n            case 'admin':\r\n                return <AdminHome/>;\r\n            case 'manager':\r\n                return <ManagerHome/>;\r\n            case 'client':\r\n                return <ClientHome/>;\r\n            default:\r\n                return <LoginHome />;\r\n        }\r\n    }\r\n    return <LoginHome />;\r\n}\r\nexport default Page","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport axios from 'axios';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../Others/Page'\r\n\r\nexport default class LoginHome extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: localStorage.getItem('authToken') ? true : false,\r\n        role: localStorage.getItem('userRole') ? localStorage.getItem('userRole') : '',\r\n        errorMsg: '',\r\n        error: localStorage.getItem('authToken') ? false : true\r\n    }\r\n\r\n    // handleLogoutClick = (e) => {\r\n    //     localStorage.setItem('authToken', '');\r\n    //     localStorage.setItem('userRole', '');\r\n    //     localStorage.setItem('userName', '');\r\n    //     this.setState({\r\n    //         isLoggedIn: false,\r\n    //         role: '',\r\n    //         errorMsg: '',\r\n    //         error: false,\r\n    //     });\r\n    // }\r\n\r\n    _handleSubmit = async ({\r\n        username,\r\n        password,\r\n        setSubmitting,\r\n        resetForm,\r\n    }) => {\r\n        this.setState(() => ({\r\n            isLoggedIn: false,\r\n            error: false,\r\n            role: '',\r\n        }));\r\n        let resp = (await axios.post('/userDetails/login', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: {\r\n                username,\r\n                password,\r\n            }\r\n        }));\r\n\r\n        resp = resp.data;\r\n        setSubmitting(false);\r\n        if (!resp.status) {\r\n            this.setState(() => ({\r\n                isLoggedIn: false,\r\n                errorMsg: resp.err,\r\n                error: true,\r\n                role: '',\r\n            }))\r\n            return;\r\n        } else {\r\n            this.setState(() => ({\r\n                isLoggedIn: true,\r\n                error: false,\r\n                errorMsg: '',\r\n            }))\r\n            localStorage.setItem('authToken', resp.token);\r\n            localStorage.setItem('userRole', resp.role);\r\n            localStorage.setItem('displayName', resp.displayName);\r\n            localStorage.setItem('userName', resp.userName);\r\n            localStorage.setItem('companyName', resp.companyName);\r\n            localStorage.setItem('isAdmin',resp.isAdmin);\r\n        }\r\n\r\n        resetForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                }}\r\n                validationSchema={object().shape({\r\n                    username: string().required('Please enter a valid email address.'),\r\n                    password: string().required('Password is required'),\r\n                })}\r\n                onSubmit={(\r\n                    { username, password },\r\n                    { setSubmitting, resetForm }\r\n                ) =>\r\n                    this._handleSubmit({\r\n                        username,\r\n                        password,\r\n                        setSubmitting,\r\n                        resetForm,\r\n                    })\r\n                }\r\n                render={props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isValid,\r\n                        isSubmitting,\r\n                    } = props\r\n\r\n                    const { error } = this.state;\r\n                    const authToken = localStorage.getItem('authToken');\r\n                    const userRole = localStorage.getItem('userRole');\r\n                    let showData;\r\n                    if (isSubmitting) {\r\n                        showData = <Spinner />\r\n                    } else if (userRole && !error) {\r\n                        showData = <div>\r\n                            <Page />\r\n                            {/* <LogoutButton onClick={this.handleLogoutClick} ></LogoutButton> */}\r\n                        </div>\r\n                    } else {\r\n                        showData = <div className=\"ForgotPasswordForm\">\r\n                            <Typography variant=\"title\" style={{ margin: '16px 0' }}> Login </Typography>\r\n                            <Paper className=\"form form--wrapper\" elevation={10}>\r\n                                <form className=\"form\" onSubmit={handleSubmit}>\r\n                                    <FormControl fullWidth margin=\"dense\">\r\n                                        <InputLabel htmlFor=\"username\" error={Boolean(touched.username && errors.username)}>\r\n                                            {'Enter your username'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id=\"username\"\r\n                                            name=\"username\"\r\n                                            type=\"email\"\r\n                                            required\r\n                                            autoComplete=\"off\"\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.username && errors.username)} />\r\n                                        <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                                            {touched.username && errors.username ? errors.username : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        fullWidth\r\n                                        margin=\"dense\"\r\n                                        error={Boolean(touched.password && errors.password)}>\r\n                                        <InputLabel htmlFor=\"password\" error={Boolean(touched.password && errors.password)}>\r\n                                            {'Enter your password'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            type=\"password\"\r\n                                            autoComplete=\"off\"\r\n                                            value={values.password}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.password && errors.password)}\r\n                                        />\r\n                                        <FormHelperText error={Boolean(touched.password && errors.password)}>\r\n                                            {touched.password && errors.password ? errors.password : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormHelperText error={Boolean(this.state.error)}>\r\n                                        {this.state.error ? this.state.errorMsg : ''}\r\n                                    </FormHelperText>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"raised\"\r\n                                        color=\"primary\"\r\n                                        disabled={Boolean(!isValid || isSubmitting)}\r\n                                        style={{ margin: '16px' }}>\r\n                                        {'Login'}\r\n                                    </Button>\r\n                                    <Link style={{ color: 'black' }} to=\"/forgotPassword\">Forgot Password !!</Link>\r\n                                </form>\r\n                            </Paper>\r\n                        </div>\r\n                    }\r\n                    return (\r\n                        showData\r\n                    )\r\n                }\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst ShowDropDownAdmin = props => {\r\n    const clients = props.state.allClients.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const vessels = props.state.allVslForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const dates = props.state.allCpDatesForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    return (\r\n        <div style={{ display: 'flex', marginTop: '2%' }}>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={clients.filter(({ value }) => value === props.state.selectedClient)}\r\n                    onChange={props.handleClientListChange}\r\n                    options={clients}\r\n                    placeholder='Select Client'\r\n                    isDisabled={!clients || !clients.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={vessels.filter(({ value }) => value === props.state.selectedVessel)}\r\n                    onChange={props.handleVesselListChange}\r\n                    options={vessels}\r\n                    placeholder='Select Vessel'\r\n                    isDisabled={!vessels || !vessels.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={dates.filter(({ value }) => value === props.state.selectedCpDate)}\r\n                    onChange={props.handleCpDateChange}\r\n                    options={dates}\r\n                    placeholder='Select CP Date'\r\n                    isDisabled={!dates || !dates.length}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowDropDownAdmin","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport ShowDropDownAdmin from './ShowDropDownAdmin';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nclass FillPerformanceDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getAllVessels();\r\n    this.handleVesselListChange = this.handleVesselListChange.bind(this);\r\n    this.handleClientListChange = this.handleClientListChange.bind(this);\r\n    this.handleCpDateChange = this.handleCpDateChange.bind(this);\r\n    this.handlePerformanceDetailSubmit = this.handlePerformanceDetailSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.state = {\r\n      vesselList: [],\r\n      selectedClient: 'SelectClient',\r\n      selectedVessel: 'SelectVessel',\r\n      selectedCpDate: 'SelectCpDate',\r\n      allClients: [],\r\n      allVslForSelectedClient: [],\r\n      allCpDatesForSelectedClient: [],\r\n      error: false,\r\n      performanceDetails: {\r\n\r\n      },\r\n    }\r\n  }\r\n\r\n  handlePerformanceDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      ...this.state,\r\n      performanceDetails: {\r\n        ...this.state.performanceDetails,\r\n        [name]: value.trim(),\r\n      },\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  getAllVessels = async () => {\r\n    await axios.post('/performanceDetails/getAllVessels', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        'isDetailsFilled': false,\r\n      }\r\n    }).then(res => {\r\n      if (res.data.status) {\r\n        const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n        this.setState({\r\n          vesselList: res.data.vesselList,\r\n          allClients: allClients,\r\n          error: false,\r\n        });\r\n      } else {\r\n        this.setState({ error: true });\r\n        return;\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCpDateChange = e => {\r\n    const { vesselList, selectedVessel } = this.state;\r\n    let vesselDetails = vesselList.find(m => m.vesselName === selectedVessel && m.cpDate === e.value);\r\n    vesselDetails = (({ chartererName, vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }) => (\r\n      { chartererName, vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }))(vesselDetails);\r\n    this.setState({\r\n      vesselDetails: vesselDetails,\r\n      selectedCpDate: e.value,\r\n      isPeformancePage: false,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleVesselListChange = async e => {\r\n    const { selectedVessel, vesselList, selectedClient } = this.state;\r\n    if (e.value !== selectedVessel) {\r\n      this.setState({ selectedCpDate: 'SelectCpDate' });\r\n    }\r\n\r\n    const allCpDates = vesselList.filter(f => f.vesselName === e.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n    if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n      this.setState({\r\n        allCpDatesForSelectedClient: [],\r\n        selectedVessel: e.value,\r\n        selectedCpDate: 'SelectCpDate',\r\n        isPeformancePage: false,\r\n        error: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allCpDatesForSelectedClient: allCpDates,\r\n      selectedVessel: e.value,\r\n      selectedCpDate: 'SelectCpDate',\r\n      isPeformancePage: false,\r\n      error: false,\r\n    });\r\n  }\r\n\r\n  handleClientListChange = e => {\r\n    const { selectedClient, vesselList } = this.state;\r\n    if (e.value !== selectedClient) {\r\n      this.setState({ selectedCpDate: 'SelectCpDate', selectedVessel: 'SelectVessel' });\r\n    }\r\n\r\n    const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.value).map(m => m.vesselName))];\r\n    if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n      this.setState({\r\n        allVslForSelectedClient: [],\r\n        selectedClient: e.value,\r\n        selectedVessel: 'SelectVessel',\r\n        selectedCpDate: 'SelectCpDate',\r\n        error: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allVslForSelectedClient: allVessels,\r\n      selectedClient: e.value,\r\n      selectedVessel: 'SelectVessel',\r\n      selectedCpDate: 'SelectCpDate',\r\n      error: false\r\n    });\r\n  }\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handlePerformanceDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { selectedClient, selectedVessel, selectedCpDate, vesselList } = this.state;\r\n    const vessel = vesselList.find(f => f.chartererName === selectedClient && f.vesselName === selectedVessel && f.cpDate === selectedCpDate)\r\n    const vId = vessel ? vessel['_id'] : '';\r\n\r\n    let data = (await axios.post('/performanceDetails/fillPerformanceDetails', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        ...this.state.performanceDetails,\r\n        vId\r\n      }\r\n    }));\r\n\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('performanceDetailsForm').reset();\r\n      this.setState({\r\n        performanceDetails: {},\r\n        success: false,\r\n        errorMsg: 'Success!! Performance Details saved for = ' + this.state.selectedClient\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedCpDate } = this.state;\r\n    let showTable;\r\n    if (selectedCpDate !== 'SelectCpDate') {\r\n      showTable = <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <form id='performanceDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Original Value</th>\r\n                <th>Actual Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Number of Days *\r\n                  </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"NumberOfDaysOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"NumberOfDaysAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Consumption (MT) *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionIFOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionIFOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionMDOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionMDOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Price *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceIFOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceIFOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceMDOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceMDOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LoadPortDAOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LoadPortDAAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DischargePortDAOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DischargePortDAAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    ILOHC and CVE\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"ILOHCandCVEOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"ILOHCandCVEAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Survey Cost Bends *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerSurveyCostBendsOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerSurveyCostBendsAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    WX Routing Expense *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"WXRoutingExpenseOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"WXRoutingExpenseAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"PNIInsuranceOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"PNIInsuranceAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Despatch Paid\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DespatchPaidOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DespatchPaidAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Other Expense\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"OtherExpenseOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"OtherExpenseAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    HRA/WAR Risk\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"HRA_WARRiskOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"HRA_WARRiskAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Demmurrage Received\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DemmurrageReceivedOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DemmurrageReceivedAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Quantity (MT)\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"CargoQuantityOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"CargoQuantityAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    }\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <h2>Fill Performance Details</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <ShowDropDownAdmin\r\n          handleClientListChange={this.handleClientListChange}\r\n          handleVesselListChange={this.handleVesselListChange}\r\n          handleCpDateChange={this.handleCpDateChange}\r\n          state={this.state}\r\n        />\r\n        <br />\r\n        {showTable}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FillPerformanceDetails;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport '../../css/Admin.css';\r\nimport Select from 'react-select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nclass AddNewClient extends Component {\r\n\r\n  userDetails = {\r\n    userName: '',\r\n    companyName: '',\r\n    displayName: '',\r\n    password: '',\r\n    role: '',\r\n    clientType: '',\r\n    success: true,\r\n    errorMsg: ''\r\n  };\r\n\r\n  roles = [{ label: \"Admin\", value: \"Admin\" }, { label: \"Client\", value: \"Client\" }, { label: \"Manager\", value: \"Manager\" }];\r\n  clientType = [{ label: \"Owner\", value: \"Owner\" }, { label: \"Charterer\", value: \"Charterer\" }];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.userDetails };\r\n    this.handleUserDetailsChange = this.handleUserDetailsChange.bind(this);\r\n    this.handleRoleChange = this.handleRoleChange.bind(this);\r\n    this.handleClientTypeChange = this.handleClientTypeChange.bind(this);\r\n    this.handleAddNewUserSubmit = this.handleAddNewUserSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleUserDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  handleRoleChange = e => {\r\n    this.setState({\r\n      role: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  handleClientTypeChange = e => {\r\n    this.setState({\r\n      clientType: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  async handleAddNewUserSubmit(event) {\r\n    event.preventDefault();\r\n    const { userName, password, displayName, companyName, role, clientType } = this.state;\r\n    if (!userName || !displayName || !password || !role || !companyName || (role === 'Client' && !clientType)) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!clientType) {\r\n      this.state.clientType = role;\r\n    }\r\n\r\n    let data = (await axios.post('/userDetails/insertUserDetails', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        ...this.state\r\n      }\r\n    }));\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      if (data.data.status.errmsg.indexOf('duplicate key error') >= 0) {\r\n        data.data.status.errmsg = 'Username already exits.'\r\n      }\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('userDetailsForm').reset();\r\n      this.setState({\r\n        ...this.userDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New user created = ' + userName\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const role = this.state.role;\r\n    let tableData;\r\n    if (role === 'Client') {\r\n      tableData = <tr>\r\n        <td>\r\n          <label>\r\n            Client Type *\r\n        </label>\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.clientType.filter(({ value }) => value === this.state.clientType)}\r\n            onChange={this.handleClientTypeChange}\r\n            options={this.clientType}\r\n            placeholder='Select Client Type'\r\n            name=\"clientType\"\r\n          />\r\n        </td>\r\n      </tr>\r\n    }\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New User</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='userDetailsForm' onSubmit={this.handleAddNewUserSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    User Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"email\" name=\"userName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Company Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"companyName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Display Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"displayName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Password *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"password\" name=\"password\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Role *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Select\r\n                      value={this.roles.filter(({ value }) => value === this.state.role)}\r\n                      onChange={this.handleRoleChange}\r\n                      options={this.roles}\r\n                      placeholder='Select Role'\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              {tableData}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewClient;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../../css/Admin.css';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass AddNewVessel extends Component {\r\n\r\n  vesselDetails = {\r\n    vesselName: '',\r\n    IMO: '',\r\n    DWT: '',\r\n    built: '',\r\n    LOA: '',\r\n    beam: '',\r\n    cranes: '',\r\n    grabs: '',\r\n    success: true,\r\n    errorMsg: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.vesselDetails };\r\n    this.handleVesselDetailsChange = this.handleVesselDetailsChange.bind(this);\r\n    this.handleAddNewVesselSubmit = this.handleAddNewVesselSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleVesselDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handleAddNewVesselSubmit(event) {\r\n    event.preventDefault();\r\n    const { vesselName, IMO, DWT } = this.state;\r\n    if (!vesselName || !DWT || !IMO) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = (await axios.post('/vesselDetails/insertVesselDetails', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        ...this.state\r\n      }\r\n    }));\r\n\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.vesselDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New vessel created = ' + vesselName,\r\n      });\r\n      document.getElementById('vesselDetailsForm').reset();\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New Vessel</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='vesselDetailsForm' onSubmit={this.handleAddNewVesselSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"vesselName\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IMO *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"IMO\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    DWT *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DWT\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Built\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"built\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    LOA\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LOA\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Beam\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"beam\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cranes\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cranes\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grabs\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"grabs\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewVessel;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport '../../css/Admin.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\n\r\nclass FillVoyageDetails extends Component {\r\n\r\n  localState = {\r\n    vesselDetails: {\r\n      chartererName: '',\r\n      vesselName: '',\r\n      vesselSize: '',\r\n      cpDate: new Date(),\r\n      loadPort: '',\r\n      cargo: '',\r\n      cargoIntake: '',\r\n      onwerName: '',\r\n      Shipper: '',\r\n      loadPortAgent: '',\r\n      dischargePoint: '',\r\n      receiver: '',\r\n      onHireSurveyor: '',\r\n      offHireSurveyor: '',\r\n      bunkerSupplier: '',\r\n      bunkerTrader: '',\r\n      pniInsurance: '',\r\n      weatherRoutingCompany: '',\r\n    },\r\n    clientList: [],\r\n    vesselList: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.localState };\r\n    this.handleAdminChange = this.handleAdminChange.bind(this);\r\n    this.handleVesselDetailSubmit = this.handleVesselDetailSubmit.bind(this);\r\n    this.handleChartererNameChange = this.handleChartererNameChange.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAllClients();\r\n    this.getAllVessels();\r\n  }\r\n\r\n  handleChartererNameChange = e => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        chartererName: e.value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleVesselNameChange = e => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        vesselName: e.value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleAdminChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        [name]: value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDateFieldChange = (V) => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        cpDate: V\r\n      }\r\n    })\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  getAllClients = async () => {\r\n    await axios.post('/userDetails/getAllClients', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n    }).then(res => {\r\n      if (res.data.status) {\r\n        const cl = res.data.clientList.sort().map(v => ({\r\n          label: v,\r\n          value: v\r\n        }));\r\n        this.setState({\r\n          clientList: cl,\r\n          error: false,\r\n        });\r\n      } else {\r\n        this.setState({ error: true });\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllVessels = async () => {\r\n    await axios.post('/vesselDetails/getAllVessels', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n    }).then(res => {\r\n      if (res.data.status) {\r\n        const vl = res.data.vesselList.map(m => m.vesselName + '_' + m.DWT).sort().map(v => ({\r\n          label: v,\r\n          value: v\r\n        }));\r\n        this.setState({\r\n          vesselList: vl,\r\n          error: false,\r\n        });\r\n\r\n      } else {\r\n        this.setState({ error: true });\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  async handleVesselDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { chartererName, vesselName, cpDate } = this.state.vesselDetails;\r\n    if (!chartererName || !vesselName || !cpDate.toString()) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = (await axios.post('/performanceDetails/insertPerformanceData', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        cpDate: this.state.vesselDetails.cpDate,\r\n        vesselName: this.state.vesselDetails.vesselName,\r\n        chartererName: this.state.vesselDetails.chartererName,\r\n        isDetailsFilled: false,\r\n      }\r\n    }));\r\n\r\n    data = (await axios.post('/voyageDetails/insertVoyageData', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        ...this.state.vesselDetails\r\n      }\r\n    }));\r\n\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.localState.vesselDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! Voyage Details saved for = ' + chartererName\r\n      });\r\n      document.getElementById('voyageDetailsForm').reset();\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { clientList, vesselList } = this.state;\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Fill Voyage Details</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='voyageDetailsForm' onSubmit={this.handleVesselDetailSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Charterer Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={clientList.filter(({ value }) => value === this.state.vesselDetails.chartererName)}\r\n                    onChange={this.handleChartererNameChange}\r\n                    options={clientList}\r\n                    placeholder='Select Charterer Name'\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={vesselList.filter(({ value }) => value === this.state.vesselDetails.vesselName)}\r\n                    onChange={this.handleVesselNameChange}\r\n                    options={vesselList}\r\n                    placeholder='Select Vessel Name'\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Size\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"vesselSize\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    CP Date *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <DatePicker selected={this.state.vesselDetails.cpDate} onChange={this.handleDateFieldChange} value={this.state.vesselDetails.cpDate} required autoComplete=\"off\" maxDate={new Date()}\r\n      placeholderText='Select a date before 1 day in the future'/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"loadPort\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Point\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"dischargePoint\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cargo\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Intake\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cargoIntake\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Owner Name\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"onwerName\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Shipper\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"Shipper\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"loadPortAgent\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"dischargePortAgent\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Receiver\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"receiver\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    On Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"onHireSurveyor\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Off Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"offHireSurveyor\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Supplier\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"bunkerSupplier\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Trader\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"bunkerTrader\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"pniInsurance\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Weather Routing Company\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"weatherRoutingCompany\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FillVoyageDetails;","import React from 'react';\r\nimport { Zoom } from 'react-slideshow-image';\r\n\r\nconst images = [\r\n  '/assests/images/ship1.jpg',\r\n  '/assests/images/ship2.jpg',\r\n  '/assests/images/ship3.jpg',\r\n];\r\n\r\nconst zoomOutProperties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n  scale: 2,\r\n  arrows: true\r\n}\r\n\r\nconst SlideShow = () => {\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <Zoom {...zoomOutProperties}>\r\n        {\r\n          images.map((each, index) => <img key={index} style={{ width: \"100%\" }} src={each} alt={each} />)\r\n        }\r\n      </Zoom>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SlideShow;","import React from 'react';\r\nimport Slideshow from './SlideShow';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"\">\r\n            <h2>Welcome to Bulkcom Shipping</h2>\r\n            <Slideshow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.toggleHeaderState = this.toggleHeaderState.bind(this);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n    this.state = {\r\n      showHeader: props.toggleState,\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      showHeader: !this.state.showHeader,\r\n    })\r\n  }\r\n\r\n  toggleHeaderState() {\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.showHeader ? 'menu_open menu' : 'menu'} id=\"main_menu\">\r\n        <div className=\"header_right\">\r\n          <div className=\"explore\" id=\"menu_label\">explore</div>\r\n          <img src=\"https://aegisuae.com/resources/img/arrow_white.svg\" alt=\"arrow\" className=\"arrow\" />\r\n          <button className=\"js-toggle-nav c-btn-nav -inited\" id=\"menu_button\" onClick={this.handleClick} >\r\n            <div className=\"c-btn-nav_burger\">\r\n              <span className=\"c-burger_top\"></span>\r\n              <span className=\"c-burger_middle\"></span>\r\n              <span className=\"c-burger_bottom\"></span>\r\n              <div className=\"c-close-burger_top\"></div>\r\n              <div className=\"c-close-burger_bottom\"></div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div className={this.state.showHeader ? 'left_menu_open left_menu' : 'left_menu'} id=\"left_menu\" scroll=\"no\">\r\n          <ul className={this.state.showHeader ? 'opened main_nav' : 'main_nav'} id=\"navigation\">\r\n            <li>\r\n              <Link className=\"\" to=\"/\" onClick={this.toggleHeaderState}>\r\n                Home\r\n              <span className=\"menu_line\"></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"\" to=\"/about\" onClick={this.toggleHeaderState}>\r\n                About\r\n            <span className=\"menu_line\"></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"\" to=\"/location\" onClick={this.toggleHeaderState}>\r\n                Locations\r\n            <span className=\"menu_line\"></span>\r\n              </Link>\r\n            </li>\r\n            {localStorage.getItem('authToken') ? (\r\n              <li>\r\n                <Link className=\"\" to=\"/login\" onClick={this.logoutAndToggleState}>\r\n                  Logout\r\n             <span className=\"menu_line\"></span>\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n                <li>\r\n                  <Link className=\"\" to=\"/login\" onClick={this.toggleHeaderState}>\r\n                    Login\r\n              <span className=\"menu_line\"></span>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Footer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer className=\"navbar navbar-dark bg-primary fixed-top\">\r\n        <div className=\"bottom_footer\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Home\r\n            </Link>\r\n          <Link className=\"navbar-brand\" to=\"/about\">\r\n            About\r\n            </Link>\r\n          <Link className=\"navbar-brand\" to=\"/location\">\r\n            Locations\r\n            </Link>\r\n          {localStorage.getItem('authToken') ? (\r\n            <Link className=\"navbar-brand\" to=\"/login\" onClick={this.logoutAndToggleState}>\r\n              Logout\r\n             </Link>) : (\r\n              <Link className=\"navbar-brand\" to=\"/login\">\r\n                Login\r\n                </Link>\r\n            )}\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem, getApiActionCal } from '../action/action';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addItem: item => {\r\n            dispatch(addItem(item))\r\n        },\r\n        getApiCallData: () => {\r\n            dispatch(getApiActionCal())\r\n        }\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        apiData: state.apiData\r\n    };\r\n}\r\n\r\nclass FirstComponentStateFul extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 1,\r\n            items: ['bunty', 'babli'],\r\n            apiData: []\r\n        }\r\n        this.itemList = '';\r\n        this.incrementCounter = this.incrementCounter.bind(this);\r\n        this.addItemTo = this.addItemTo.bind(this);\r\n        this.addItems = this.addItems.bind(this);\r\n        this.getApiCall = this.getApiCall.bind(this);\r\n    }\r\n    addItemTo(event) {\r\n        this.itemList = event.target.value;\r\n    }\r\n    addItems() {\r\n        this.props.addItem(this.itemList)\r\n    }\r\n    incrementCounter() {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n\r\n    }\r\n    getApiCall() {\r\n        this.props.getApiCallData();\r\n    }\r\n    componentDidUpdate() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    componentDidMount() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>you clicked it {this.state.count} times</p>\r\n                <button onClick={this.incrementCounter}></button>\r\n                <input type=\"text\" onChange={this.addItemTo} />\r\n                <button onClick={this.addItems}></button>\r\n                <ul>\r\n                    {\r\n                        this.props.items.map(item =>\r\n                            <li key={item}>{item}</li>)\r\n                    }\r\n\r\n                </ul>\r\n                <button onClick={this.getApiCall}>get API call</button>\r\n                <ul>\r\n                    {\r\n                        this.props.apiData.map(item =>\r\n                            <li key={item.id}>{item.title}</li>)\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Form = connect(mapStatetoProps, mapDispatchToProps)(FirstComponentStateFul)\r\nexport default Form;","export function addItem(payload) {\r\n    return {\r\n        type: 'ADD',\r\n        payload\r\n    }\r\n}\r\nexport function getApiActionCal() {\r\n    return {\r\n        type: 'APICALL'\r\n    }\r\n}\r\nexport function getDataLoaded(payload) {\r\n    return {\r\n        type: 'DATA-LOADED',\r\n        payload\r\n    }\r\n}\r\nexport function getDataError() {\r\n    return {\r\n        type: 'DATA-ERROR'\r\n    }\r\n}","import React from 'react'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nexport default function Alert({\r\n  handleClose,\r\n  handleSubmit,\r\n  isOpen,\r\n  hasTwoButtons = false,\r\n  submitButtonText,\r\n  title,\r\n  text,\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      transition={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{text}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {hasTwoButtons ? (\r\n          <Button onClick={handleClose} variant=\"raised\" color=\"primary\">\r\n            {'CANCEL'}\r\n          </Button>\r\n        ) : null}\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          {submitButtonText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, ref, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Alert from '../Others/Alert'\r\nimport axios from 'axios';\r\n\r\nexport default class FormPasswordReset extends Component {\r\n\r\n  state = {\r\n    passChangeSuccess: false,\r\n    user: this.props.username,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _renderModal = () => {\r\n    const onClick = () => {\r\n      this.setState(() => ({ passChangeSuccess: false }))\r\n    }\r\n\r\n    return (\r\n      <Alert\r\n        isOpen={this.state.passChangeSuccess}\r\n        onClose={this._handleClose}\r\n        handleSubmit={onClick}\r\n        title=\"Password Reset\"\r\n        text=\"Your password was changed successfully\"\r\n        submitButtonText=\"Done\"\r\n      />\r\n    )\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    confirmPass,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    let resp = (await axios.post('/userDetails/updatePassword', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        user: this.state.user,\r\n        confirmPass,\r\n      }\r\n    }));\r\n\r\n    resp = resp.data;\r\n    setSubmitting(false);\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n      }));\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        passChangeSuccess: true,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newPass: '',\r\n          confirmPass: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          newPass: string().required('New password is required'),\r\n          confirmPass: string()\r\n            .oneOf([ref('newPass')], 'Passwords do not match')\r\n            .required('Password is required'),\r\n        })}\r\n        onSubmit={(\r\n          { newPass, confirmPass },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            newPass,\r\n            confirmPass,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n          return isSubmitting ? (\r\n            <Spinner />\r\n          ) : (\r\n              <Paper className=\"form form--wrapper\" elevation={10}>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin=\"dense\" error={Boolean(touched.newPass && errors.newPass)}>\r\n                    <InputLabel htmlFor=\"password-new\" error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {'New Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"password-new\"\r\n                      name=\"newPass\"\r\n                      type=\"password\"\r\n                      autoComplete=\"off\"\r\n                      value={values.newPass}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.newPass && errors.newPass)} />\r\n                    <FormHelperText error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {touched.newPass && errors.newPass ? errors.newPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl fullWidth margin=\"dense\" error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                    <InputLabel htmlFor=\"password-confirm\" error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {'Confirm Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"password-confirm\"\r\n                      name=\"confirmPass\"\r\n                      type=\"password\"\r\n                      value={values.confirmPass}\r\n                      autoComplete=\"off\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.confirmPass && errors.confirmPass)} />\r\n                    <FormHelperText error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {touched.confirmPass && errors.confirmPass ? errors.confirmPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"raised\"\r\n                    color=\"primary\"\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }} >\r\n                    {'Reset Password'}\r\n                  </Button>\r\n                </form>\r\n                {this._renderModal()}\r\n              </Paper>\r\n            )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport axios from 'axios';\r\nimport FormPasswordReset from './FormPasswordReset';\r\nimport Typography from '@material-ui/core/Typography'\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    passChangeSuccess: false,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    username,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    let resp = (await axios.post('/userDetails/checkUsername', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        'userName': username,\r\n      }\r\n    }));\r\n    setSubmitting(false);\r\n    resp = resp.data;\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n        error: true,\r\n        errorMsg: 'Username not found'\r\n      }))\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        username,\r\n        passChangeSuccess: true,\r\n        error: false,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          username: string().required('Please enter a valid email address.'),\r\n        })}\r\n        onSubmit={(\r\n          { username },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            username,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n\r\n          let showData;\r\n          if (isSubmitting) {\r\n            showData = <Spinner />\r\n          } else if (this.state.passChangeSuccess) {\r\n            showData = <div className=\"ForgotPasswordForm\">\r\n              <Typography variant=\"title\" style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <FormPasswordReset username={this.state.username} />\r\n            </div>\r\n          } else {\r\n            showData = <div className=\"ForgotPasswordForm\">\r\n              <Typography variant=\"title\" style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <Paper className=\"form form--wrapper\" elevation={10}>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin=\"dense\">\r\n                    <InputLabel\r\n                      htmlFor=\"username\"\r\n                      error={Boolean(touched.username && errors.username)}>\r\n                      {'Enter your username'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"username\"\r\n                      name=\"username\"\r\n                      type=\"email\"\r\n                      autoComplete=\"off\"\r\n                      value={values.username}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.username && errors.username)}\r\n                    />\r\n                    <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                      {touched.username && errors.username ? errors.username : ''}\r\n                    </FormHelperText>\r\n                    <FormHelperText error={Boolean(this.state.error)}>\r\n                      {this.state.error ? this.state.errorMsg : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"raised\"\r\n                    color=\"primary\"\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }}>\r\n                    {'Check Username'}\r\n                  </Button>\r\n                </form>\r\n              </Paper>\r\n            </div>\r\n          }\r\n          return (\r\n            showData\r\n          )\r\n        }\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\n\r\nclass ViewAllVessels extends Component {\r\n\r\n    localState = {\r\n        vesselList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.getAllVessels();\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    getAllVessels = async () => {\r\n        await axios.post('/vesselDetails/getAllVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    vesselList: res.data.vesselList,\r\n                    error: false,\r\n                });\r\n\r\n            } else {\r\n                this.setState({ error: true });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Vessel List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                    canClick: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"vesselName\",\r\n                            label: \"Vessel Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"IMO\",\r\n                            label: \"IMO\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"DWT\",\r\n                            label: \"DWT\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"built\",\r\n                            label: \"Built\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"LOA\",\r\n                            label: \"LOA\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"beam\",\r\n                            label: \"Beam\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"cranes\",\r\n                            label: \"cranes\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"grabs\",\r\n                            label: \"grabs\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList\r\n                    ],\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllVessels;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\n\r\nclass ViewAllClients extends Component {\r\n\r\n    localState = {\r\n        clientList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.getAllClients();\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    getAllClients = async () => {\r\n        await axios.post('/userDetails/getAllClientDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    clientList: res.data.clientList,\r\n                    error: false,\r\n                });\r\n            } else {\r\n                this.setState({ error: true });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleEditClick = e => {\r\n        const { clientList } = this.state;\r\n        const c = clientList.find(m => m['id'] === e.target.id);\r\n        console.log(c);\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case \"edit\":\r\n                val = <button style={{ color: \"blue\", textAlign: \"center\", marginLeft:'20%' }} id={rowId} type=\"button\" onClick={this.handleEditClick}>Edit</button>;\r\n                break;\r\n            default:\r\n                val = <div style={{ color: \"blue\" }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { clientList } = this.state;\r\n        let options;\r\n        if (clientList.length) {\r\n            options = {\r\n                title: 'Client List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"edit\",\r\n                            label: \"Edit\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"userName\",\r\n                            label: \"User Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"displayName\",\r\n                            label: \"Display Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"companyName\",\r\n                            label: \"Company Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"role\",\r\n                            label: \"Role\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"clientType\",\r\n                            label: \"Client Type\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...clientList.map(({ userName, displayName, companyName, role, clientType, id}) => ({ userName, displayName, companyName, role, clientType, id, edit:true}))\r\n                    ],\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell}/>\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllClients;\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        localStorage.getItem('userRole') === 'Admin' ||\r\n        localStorage.getItem('userRole') === 'Manager' ||\r\n        localStorage.getItem('userRole') === 'Client'\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/login',\r\n            state: { from: props.location }\r\n          }} />\r\n    )} />\r\n  )\r\n\r\n  export default PrivateRoute;","import React from 'react';\r\nimport './css/App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport About from './components/Others/About';\r\nimport Location from './components/Others/Location';\r\nimport LoginHome from './components/Login/LoginHome';\r\nimport FillPerformanceDetails from './components/Admin/FillPerformanceDetails';\r\nimport AddNewClient from './components/Admin/AddNewClient';\r\nimport AddNewVessel from './components/Admin/AddNewVessel';\r\nimport FillVoyageDetails from './components/Admin/FillVoyageDetails';\r\nimport Home from './components/Others/Home';\r\nimport Header from './components/Others/Header';\r\nimport Footer from './components/Others/Footer';\r\nimport FirstComponentStateFul from './components/FirstComponentStateFul'\r\nimport ForgotPassword from './components/Login/ForgotPassword';\r\nimport ViewAllVessels from './components/Manager/ViewAllVessels';\r\nimport ViewAllClients from './components/Manager/ViewAllClients';\r\nimport PrivateRoute from './components/Admin/PrivateRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App main-wrapper\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/about\" component={About}></Route>\r\n          <Route path=\"/location\" component={Location}></Route>\r\n          <Route path=\"/login\" component={LoginHome}></Route>\r\n          <Route path=\"/fillVoyageDetails\" component={FillVoyageDetails}></Route>\r\n          <Route path=\"/fillPerformanceDetails\" component={FillPerformanceDetails}></Route>\r\n          <Route path=\"/addNewVessel\" component={AddNewVessel}></Route>\r\n          <PrivateRoute path=\"/addNewClient\" component={AddNewClient}></PrivateRoute>\r\n          <Route path=\"/viewAllVessels\" component={ViewAllVessels}></Route>\r\n          <Route path=\"/viewAllClients\" component={ViewAllClients}></Route>\r\n          <Route path=\"/forgotPassword\" component={ForgotPassword}></Route>\r\n          <Route path=\"/\" component={Home}></Route>\r\n        </Switch>\r\n      </div>\r\n      <Footer localStorage = {localStorage.getItem('authToken')}/>\r\n      {/* <FirstComponentStateFul/> */}\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/index\";\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n   <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}