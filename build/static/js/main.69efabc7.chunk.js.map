{"version":3,"sources":["reducers/reducer.js","sagas/saga.js","js/index.js","components/Others/About.js","components/Others/Location.js","components/Others/Spinner.js","components/Client/DisplaySelectedVesselDetails.js","components/Client/ClientHome.js","components/Admin/AdminHome.js","components/Manager/ManagerHome.js","components/Others/Page.js","components/Login/LoginHome.js","components/Admin/ShowDropDownAdmin.js","components/Admin/FillPerformanceDetails.js","components/Admin/AddNewClient.js","components/Admin/AddNewVessel.js","components/Admin/FillVoyageDetails.js","components/Others/SlideShow.js","components/Others/Home.js","components/Others/Header.js","components/Others/Footer.js","components/FirstComponentStateFul.js","action/action.js","components/Others/Alert.js","components/Login/FormPasswordReset.js","components/Login/ForgotPassword.js","components/Manager/ViewAllVessels.js","components/Manager/ViewAllClients.js","components/Admin/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","apiData","watcherSaga","workerFunction","takeEvery","call","getAPIData","finalData","put","type","fetch","then","response","json","initializeMiddleware","createSagaMiddleware","store","createStore","state","action","Object","assign","concat","payload","applyMiddleware","run","About","className","AnyReactComponent","text","Location","style","height","width","bootstrapURLKeys","key","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","Spinner","display","flexDirection","justifyContent","alignItems","color","DisplaySelectedVesselDetails","pairs","getDisplayKey","charAt","toUpperCase","slice","replace","trim","vesselDetails","push","marginTop","ClientHome","getAllVoyage","a","async","axios","post","headers","data","companyName","res","status","setState","vesselList","error","handlePerformanceClick","e","c","find","m","target","id","console","log","vesselName","handleVesselClick","buildCustomTableBodyCell","val","cellVal","column","rowId","textAlign","onClick","getPopupContent","capitalize","s","vesselSize","cpDate","loadPort","cargo","cargoIntake","onwerName","trigger","textDecoration","cursor","modal","closeOnDocumentClick","dischargePoint","tableData","performanceDetails","isPeformancePage","userName","options","showData","length","title","keyColumn","font","dimensions","datatable","row","stripped","features","canSearch","canDownload","canPrint","canOrderColumns","columns","label","colSize","dataType","rows","map","_id","checkPerformance","ourCount","forEach","v","parseInt","marginLeft","CustomTableBodyCell","localStorage","getItem","AdminHome","marginRight","to","withRouter","ManagerHome","Page","displayName","isLoggedIn","role","toLowerCase","LoginHome","errorMsg","_handleSubmit","username","password","setSubmitting","resetForm","resp","err","setItem","token","initialValues","validationSchema","object","shape","string","required","onSubmit","render","values","touched","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","userRole","variant","margin","elevation","fullWidth","htmlFor","Boolean","name","autoComplete","value","onChange","onBlur","disabled","ShowDropDownAdmin","clients","allClients","sort","vessels","allVslForSelectedClient","dates","allCpDatesForSelectedClient","filter","selectedClient","handleClientListChange","placeholder","isDisabled","selectedVessel","handleVesselListChange","selectedCpDate","handleCpDateChange","FillPerformanceDetails","handlePerformanceDetailsChange","preventDefault","success","getAllVessels","Set","chartererName","allCpDates","f","allVessels","bind","handlePerformanceDetailSubmit","handleBackButton","history","goBack","event","toString","isDetailsFilled","errmsg","document","getElementById","reset","localState","showTable","top","left","position","fontSize","AddNewClient","userDetails","clientType","roles","handleUserDetailsChange","handleRoleChange","handleClientTypeChange","handleAddNewUserSubmit","indexOf","AddNewVessel","IMO","DWT","built","LOA","beam","cranes","grabs","handleVesselDetailsChange","handleAddNewVesselSubmit","FillVoyageDetails","Date","Shipper","loadPortAgent","receiver","onHireSurveyor","offHireSurveyor","bunkerSupplier","bunkerTrader","pniInsurance","weatherRoutingCompany","clientList","handleChartererNameChange","handleVesselNameChange","handleAdminChange","handleDateFieldChange","V","getAllClients","cl","vl","handleVesselDetailSubmit","selected","images","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","SlideShow","each","index","src","alt","Home","Header","handleClick","showHeader","toggleHeaderState","logoutAndToggleState","toggleState","scroll","Footer","FirstComponentStateFul","count","itemList","incrementCounter","addItemTo","addItems","getApiCall","addItem","getApiCallData","item","connect","dispatch","Transition","direction","Alert","handleClose","isOpen","hasTwoButtons","submitButtonText","open","transition","keepMounted","onClose","aria-labelledby","aria-describedby","FormPasswordReset","passChangeSuccess","user","_handleModalClose","_renderModal","_handleClose","confirmPass","newPass","oneOf","ref","ForgotPassword","ViewAllVessels","canClick","ViewAllClients","PrivateRoute","component","rest","pathname","from","location","App","path","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wRACMA,EAAe,CACjBC,MAAO,GACPC,QAAS,I,mDCAYC,G,WAGfC,GAHK,SAAUD,IAAV,iEACX,OADW,SACLE,YAAU,UAAWD,GADhB,uCAGf,SAAUA,IAAV,uEAE0B,OAF1B,kBAEgCE,YAAKC,GAFrC,OAIQ,OAFMC,EAFd,gBAIcC,YAAI,CAAEC,KAAM,cAAeF,cAJzC,8BAOQ,OAPR,mCAOcC,YAAI,CAAEC,KAAM,aAAcF,UAAU,EAAD,KAPjD,qDAUA,SAASD,IACL,OAAOI,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OAC5DA,EAASC,UCbjB,IAAMC,EAAuBC,cACvBC,EAAQC,uBFDC,WAAoD,IAA/BC,EAA8B,uDAAtBnB,EAAcoB,EAAQ,uCAC9D,OAAQA,EAAOV,MACX,IAAK,MACD,OAAOW,OAAOC,OAAO,GAAIH,EAAO,CAC5BlB,MAAOkB,EAAMlB,MAAMsB,OAAOH,EAAOI,WAGzC,IAAK,cACD,OAAOH,OAAOC,OAAO,GAAIH,EAAO,CAC5BjB,QAASiB,EAAMjB,QAAQqB,OAAOH,EAAOZ,aAG7C,QACI,OAAOW,KEZoBM,0BAAgBV,IACvDA,EAAqBW,IAAIvB,GACVc,Q,mCCkCAU,MAxCf,WACI,OACI,6BACI,6BAASC,UAAU,kCACf,yBAAKA,UAAU,cACX,uBAAGA,UAAU,sBAAb,0BACA,yBAAKA,UAAU,2BAEf,uBAAGA,UAAU,sBAAb,4IAA2K,6BAA3K,wPAEqJ,6BAFrJ,wLAGyL,6BAAM,6BAH/L,6JAMI,6BAAM,6BAAM,6CAAqB,6BANrC,+EAOgF,6BAPhF,yJAQ0J,6BAAM,6BARhK,uCAUwC,6BAVxC,qHAWsH,6BAAM,6BAX5H,8CAa+C,6BAb/C,kKAcmK,6BAAM,6BAMrK,0BAAMA,UAAU,YAAhB,4sB,2DC1BlBC,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,6BAAMA,IAExCC,E,iLASE,OACI,6BACI,6BAASH,UAAU,kCACf,yBAAKA,UAAU,cACf,yBAAKI,MAAO,CAAEC,OAAQ,QAASC,MAAO,SAC9B,kBAAC,IAAD,CACAC,iBAAkB,CAAEC,IAAK,2CACzBC,cAAeC,KAAKC,MAAMC,OAC1BC,YAAaH,KAAKC,MAAMG,MAExB,kBAAC,EAAD,CACIC,IAAK,UACLC,IAAK,UACLd,KAAK,uB,GAtBde,aAAjBd,EACKe,aAAe,CAClBN,OAAQ,CACNG,IAAK,MACLC,IAAK,OAEPF,KAAM,IA0BCX,Q,2ICpCA,SAASgB,IACtB,OACE,yBACEf,MAAO,CACLgB,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZlB,OAAQ,UAGV,kBAAC,IAAD,CAAkBmB,MAAM,a,uECyBfC,GApCsB,SAAAd,GACjC,IAAIe,EAAQ,GACNC,EAAgB,SAAAnB,GAElB,OADAA,EAAMA,EAAIoB,OAAO,GAAGC,cAAgBrB,EAAIsB,MAAM,IACnCC,QAAQ,WAAY,OAAOC,QAG1C,IAAK,IAAIxB,KAAOG,EAAMsB,cAClBP,EAAMQ,KACF,4BACI,4BACI,+BACKP,EAAcnB,KAGvB,4BACKG,EAAMsB,cAAczB,MAMrC,OACI,8BACI,2BAAOJ,MAAO,CAAC+B,UAAU,OACrB,gCAEA,+BACKT,MCyJNU,G,YAhLX,WAAYzB,GAAQ,IAAD,8BACf,4CAAMA,KAsBV0B,aAAe,oBAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACLE,IAAMC,KAAK,8BAA+B,CAC5CC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,CAAE,YAAe,EAAKhC,MAAMiC,eACnC5D,MAAK,SAAA6D,GACAA,EAAIF,KAAKG,OACT,EAAKC,SAAS,CACVC,WAAYH,EAAIF,KAAKK,WACrBJ,YAAa,EAAKjC,MAAMiC,YACxBK,OAAO,IAGX,EAAKF,SAAS,CACVE,OAAO,EACPL,YAAa,EAAKjC,MAAMiC,kBAdzB,sCAvBI,EA4CnBM,uBAAyB,SAAAC,GAAM,IAErBC,EADiB,EAAK7D,MAApByD,WACaK,MAAK,SAAAC,GAAC,OAAIA,EAAC,MAAYH,EAAEI,OAAOC,MACrDC,QAAQC,IAAIN,EAAEO,aA/CC,EAmDnBC,kBAAoB,SAAAT,GAAM,IAEhBC,EADiB,EAAK7D,MAApByD,WACaK,MAAK,SAAAC,GAAC,OAAIA,EAAC,MAAYH,EAAEI,OAAOC,MACrDC,QAAQC,IAAIN,EAAEO,aAtDC,EAyDnBE,yBAA2B,YAAiC,IACpDC,EADsBC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAE3C,OAAQD,EAAOR,IACX,IAAK,mBACDM,EAAM,4BAAQ1D,MAAO,CAAEoB,MAAO,OAAQ0C,UAAW,UAAYV,GAAIS,EAAOnF,KAAK,SAASqF,QAAS,EAAKjB,wBAA9F,qBACN,MACJ,IAAK,aACDY,EAAM,EAAKM,gBAAgBL,EAASE,GACpC,MACJ,QACIH,EAAM,yBAAK1D,MAAO,CAAEoB,MAAO,SAAWuC,GAG9C,OAAOD,GAtEQ,EAuJnBO,WAAa,SAAAC,GACT,MAAiB,kBAANA,EAAuB,GAC3BA,EAAE1C,OAAO,GAAGC,cAAgByC,EAAExC,MAAM,IAzJ5B,EA6JnBsC,gBAAkB,SAACL,EAASE,GAAW,IAGlB,EADbhC,EADmB,EAAK1C,MAApByD,WACuBK,MAAK,SAAAC,GAAC,OAAIA,EAAC,MAAYW,KAatD,OAZAhC,EACI,CAAE0B,YADW,EACiE1B,GAD9D0B,WACFY,WADD,EAAeA,WACFC,OADb,EAA2BA,OACNC,SADrB,EAAmCA,SACJC,MAD/B,EAA6CA,MACPC,YADtC,EAAoDA,YACDC,UADnD,EAAiEA,WAGlE,6BACZ,kBAAC,KAAD,CAAOC,QAAS,uBAAGrB,GAAIS,EAAO7D,MAAO,CAAEoB,MAAO,OAAQ0C,UAAW,SAAUY,eAAgB,YAAaC,OAAQ,YAAhG,IAA+GhB,EAA/G,KACZiB,OAAK,EAACC,sBAAoB,GAC1B,yBAAKjF,UAAU,WACX,kBAAC,GAAD,CAA8BiC,cAAeA,QArKzD,EAAKI,eACL,EAAK9C,MAAQ,CACTyD,WAAY,GACZf,cAAe,CACX0B,WAAY,GACZY,WAAY,GACZC,OAAQ,GACRC,SAAU,GACVS,eAAgB,GAChBR,MAAO,GACPC,YAAa,GACbC,UAAW,IAEfO,UAAW,GACXC,mBAAoB,GACpBC,kBAAkB,EAClBpC,OAAO,EACPqC,SAAU,IAnBC,E,sEAyET,IAEFC,EACAC,EAFExC,EAAetC,KAAKnB,MAApByD,WAGN,GAAIA,EAAWyC,OAAQ,CACnBF,EAAU,CACNG,MAAO,eACPC,UAAW,KACXC,KAAM,QACNC,WAAY,CACRC,UAAW,CACPxF,MAAO,MACPD,OAAQ,SAEZ0F,IAAK,CACD1F,OAAQ,SAGhB2F,UAAU,EACVC,SAAU,CACNC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,iBAAiB,GAErB1D,KAAM,CACF2D,QAAS,CACL,CACI9C,GAAI,aACJ+C,MAAO,cACPC,QAAS,OACTC,SAAU,IAEd,CACIjD,GAAI,SACJ+C,MAAO,UACPC,QAAS,QAEb,CACIhD,GAAI,mBACJ+C,MAAO,cACPC,QAAS,SAGjBE,KAAK,aACE1D,EAAW2D,KAAI,kBAAkC,CAAEhD,WAApC,EAAGA,WAA6Ca,OAAhD,EAAeA,OAAyChB,GAAxD,EAAuBoD,IAA0CC,kBAAkB,SAKjH,IAAMC,EAAW,GACjB9D,EAAW+D,SAAQ,SAAAC,GACVF,EAASE,EAAEtC,SACZoC,EAASE,EAAEtC,OAAS,GAExBoC,EAASE,EAAEtC,QAAUuC,SAASD,EAAErC,gBAIpCa,EAAW,yBAAMhC,GAAG,QAAQpD,MAAO,CAAE+B,UAAW,KAAM+E,WAAY,KAAM9F,QAAS,SAC7E,kBAAC,aAAD,CAAWmE,QAASA,EAASS,UAAQ,EAACmB,oBAAqBzG,KAAKmD,2BAChE,yBAAKzD,MAAO,CAAE+B,UAAW,MAAO+E,WAAY,QACxC,kBAAC,GAAD,CAA8BjF,cAAe6E,WAIrDtB,EAAW,yBAAKpF,MAAO,CAAE+B,UAAW,QAAzB,kDAEf,OACI,yBAAKnC,UAAU,kCACf,8BACI,4CAAkBU,KAAK2D,WAAW+C,aAAaC,QAAQ,iBACtD7B,Q,GAlJQvE,aCHnBqG,G,YAIF,WAAY3G,GAAQ,IAAD,8BACf,4CAAMA,KAgBV0D,WAAa,SAAAC,GACT,MAAiB,kBAANA,EAAuB,GAC3BA,EAAE1C,OAAO,GAAGC,cAAgByC,EAAExC,MAAM,IAnB5B,E,sEAKf,OACI,yBAAK9B,UAAU,kCACX,4CAAkBU,KAAK2D,WAAW+C,aAAaC,QAAQ,iBACvD,yBAAKjH,MAAO,CAAEgB,QAAS,eAAgBe,UAAW,QAC9C,kBAAC,IAAD,CAAM/B,MAAO,CAAEE,MAAO,QAASD,OAAQ,OAAQkH,YAAa,QAAUC,GAAG,iBAAzE,mBACA,kBAAC,IAAD,CAAMpH,MAAO,CAAEE,MAAO,QAASD,OAAQ,OAAQkH,YAAa,QAAUC,GAAG,iBAAzE,kBACA,kBAAC,IAAD,CAAMpH,MAAO,CAAEE,MAAO,QAASD,OAAQ,OAAQkH,YAAa,QAAUC,GAAG,sBAAzE,wBACA,kBAAC,IAAD,CAAMpH,MAAO,CAAEE,MAAO,QAASD,OAAQ,QAAUmH,GAAG,2BAApD,kC,GAhBIvG,aA2BTwG,eAAWH,IC3BpBI,G,2MAeFrD,WAAa,SAAAC,GACT,MAAiB,kBAANA,EAAuB,GAC3BA,EAAE1C,OAAO,GAAGC,cAAgByC,EAAExC,MAAM,I,wEAd3C,OACI,yBAAK9B,UAAU,kCACX,4CAAkBU,KAAK2D,WAAW+C,aAAaC,QAAQ,iBACvD,yBAAKjH,MAAO,CAAEgB,QAAS,eAAgBe,UAAW,QAC9C,kBAAC,IAAD,CAAM/B,MAAO,CAAEE,MAAO,QAASD,OAAQ,OAAQkH,YAAa,QAAUC,GAAG,mBAAzE,qBACA,kBAAC,IAAD,CAAMpH,MAAO,CAAEE,MAAO,QAASD,OAAQ,OAAQkH,YAAa,QAAUC,GAAG,mBAAzE,0B,GARMvG,aAqBXwG,eAAWC,ICFXC,OAhBf,SAAchH,GAAQ,IAAD,EACgDA,EAAMpB,MAA/DqI,EADS,EACTA,YAAaC,EADJ,EACIA,WAAYC,EADhB,EACgBA,KAAMlF,EADtB,EACsBA,YAAa0C,EADnC,EACmCA,SACpD,GAAIuC,EACA,OAAQC,EAAKC,eACT,IAAK,QACD,OAAO,kBAAC,GAAD,CAAWnF,YAAaA,EAAagF,YAAaA,EAAatC,SAAUA,IACpF,IAAK,UACD,OAAO,kBAAC,GAAD,CAAa1C,YAAaA,EAAagF,YAAaA,EAAatC,SAAUA,IACtF,IAAK,SACD,OAAO,kBAAC,GAAD,CAAY1C,YAAaA,EAAagF,YAAaA,EAAatC,SAAUA,IACrF,QACI,OAAO,kBAAC,GAAD,MAGnB,OAAO,kBAAC,GAAD,OCLU0C,G,2MAEjBzI,MAAQ,CACJsI,aAAYT,aAAaC,QAAQ,aACjCS,KAAMV,aAAaC,QAAQ,YAAcD,aAAaC,QAAQ,YAAc,GAC5EY,SAAU,GACVhF,OAAOmE,aAAaC,QAAQ,c,EAkBhCa,cAAgB,mCAAA5F,EAAAC,OAAA,uDACZ4F,EADY,EACZA,SACAC,EAFY,EAEZA,SACAC,EAHY,EAGZA,cACAC,EAJY,EAIZA,UAEA,EAAKvF,UAAS,iBAAO,CACjB8E,YAAY,EACZ5E,OAAO,EACP6E,KAAM,OATE,WAAAxF,EAAA,MAWME,IAAMC,KAAK,qBAAsB,CAC/CC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,CACFwF,WACAC,eAfI,UAmBZG,GARIA,EAXQ,QAmBA5F,KACZ0F,GAAc,GACTE,EAAKzF,OArBE,wBAsBR,EAAKC,UAAS,iBAAO,CACjB8E,YAAY,EACZI,SAAUM,EAAKC,IACfvF,OAAO,EACP6E,KAAM,OA1BF,2BA8BR,EAAK/E,UAAS,iBAAO,CACjB8E,YAAY,EACZ5E,OAAO,EACPgF,SAAU,GACV3C,SAAUiD,EAAKjD,SACf1C,YAAa2F,EAAK3F,YAClBgF,YAAaW,EAAKX,YAClBE,KAAMS,EAAKT,SAEfV,aAAaqB,QAAQ,YAAaF,EAAKG,OACvCtB,aAAaqB,QAAQ,WAAYF,EAAKT,MACtCV,aAAaqB,QAAQ,cAAeF,EAAKX,aAzCjC,QA4CZU,IA5CY,uC,wEA+CN,IAAD,OACL,OACI,kBAAC,IAAD,CACIK,cAAe,CACXR,SAAU,GACVC,SAAU,IAEdQ,iBAAkBC,mBAASC,MAAM,CAC7BX,SAAUY,mBAASC,SAAS,uCAC5BZ,SAAUW,mBAASC,SAAS,0BAEhCC,SAAU,kBACJd,EADI,EACJA,SAAUC,EADN,EACMA,SACVC,EAFI,EAEJA,cAAeC,EAFX,EAEWA,UAFX,OAIN,EAAKJ,cAAc,CACfC,WACAC,WACAC,gBACAC,eAGRY,OAAQ,SAAAvI,GAAU,IAEVwI,EAQAxI,EARAwI,OACAC,EAOAzI,EAPAyI,QACAC,EAMA1I,EANA0I,OACAC,EAKA3I,EALA2I,aACAC,EAIA5I,EAJA4I,WACAC,EAGA7I,EAHA6I,aACAC,EAEA9I,EAFA8I,QACAC,EACA/I,EADA+I,aAGIzG,EAAU,EAAK1D,MAAf0D,MAEF0G,GADYvC,aAAaC,QAAQ,aACtBD,aAAaC,QAAQ,aAqEtC,OAnEIqC,EACW,kBAACvI,EAAD,MACJwI,IAAa1G,EACT,6BACP,kBAAC,GAAD,CAAM1D,MAAO,EAAKA,SAIX,yBAAKS,UAAU,sBACtB,kBAAC,KAAD,CAAY4J,QAAQ,QAAQxJ,MAAO,CAAEyJ,OAAQ,WAA7C,WACA,kBAAC,IAAD,CAAO7J,UAAU,qBAAqB8J,UAAW,IAC7C,0BAAM9J,UAAU,OAAOiJ,SAAUO,GAC7B,kBAAC,IAAD,CAAaO,WAAS,EAACF,OAAO,SAC1B,kBAAC,IAAD,CAAYG,QAAQ,WAAW/G,MAAOgH,QAAQb,EAAQjB,UAAYkB,EAAOlB,WACpE,uBAEL,kBAAC,IAAD,CACI3E,GAAG,WACH0G,KAAK,WACLpL,KAAK,QACLkK,UAAQ,EACRmB,aAAa,MACbC,MAAOjB,EAAOhB,SACdkC,SAAUf,EACVgB,OAAQf,EACRtG,MAAOgH,QAAQb,EAAQjB,UAAYkB,EAAOlB,YAC9C,kBAAC,IAAD,CAAgBlF,MAAOgH,QAAQb,EAAQjB,UAAYkB,EAAOlB,WACrDiB,EAAQjB,UAAYkB,EAAOlB,SAAWkB,EAAOlB,SAAW,KAGjE,kBAAC,IAAD,CACI4B,WAAS,EACTF,OAAO,QACP5G,MAAOgH,QAAQb,EAAQhB,UAAYiB,EAAOjB,WAC1C,kBAAC,IAAD,CAAY4B,QAAQ,WAAW/G,MAAOgH,QAAQb,EAAQhB,UAAYiB,EAAOjB,WACpE,uBAEL,kBAAC,IAAD,CACI5E,GAAG,WACH0G,KAAK,WACLpL,KAAK,WACLqL,aAAa,MACbC,MAAOjB,EAAOf,SACdiC,SAAUf,EACVgB,OAAQf,EACRtG,MAAOgH,QAAQb,EAAQhB,UAAYiB,EAAOjB,YAE9C,kBAAC,IAAD,CAAgBnF,MAAOgH,QAAQb,EAAQhB,UAAYiB,EAAOjB,WACrDgB,EAAQhB,UAAYiB,EAAOjB,SAAWiB,EAAOjB,SAAW,KAGjE,kBAAC,IAAD,CAAgBnF,MAAOgH,QAAQ,EAAK1K,MAAM0D,QACrC,EAAK1D,MAAM0D,MAAQ,EAAK1D,MAAM0I,SAAW,IAE9C,kBAAC,IAAD,CACInJ,KAAK,SACL8K,QAAQ,SACRpI,MAAM,UACN+I,SAAUN,SAASR,GAAWC,GAC9BtJ,MAAO,CAAEyJ,OAAQ,SAChB,SAEL,kBAAC,IAAD,CAAMzJ,MAAO,CAAEoB,MAAO,SAAWgG,GAAG,mBAApC,gC,GA3KGvG,a,kCCmCxBuJ,GA/CW,SAAA7J,GACtB,IAAM8J,EAAU9J,EAAMpB,MAAMmL,WAAWC,OAAOhE,KAAI,SAAAK,GAAC,MAAK,CACpDT,MAAOS,EACPoD,MAAOpD,MAGL4D,EAAUjK,EAAMpB,MAAMsL,wBAAwBF,OAAOhE,KAAI,SAAAK,GAAC,MAAK,CACjET,MAAOS,EACPoD,MAAOpD,MAGL8D,EAAQnK,EAAMpB,MAAMwL,4BAA4BJ,OAAOhE,KAAI,SAAAK,GAAC,MAAK,CACnET,MAAOS,EACPoD,MAAOpD,MAGX,OACI,yBAAK5G,MAAO,CAAEgB,QAAS,OAAQe,UAAW,OACtC,yBAAKnC,UAAU,4BACX,kBAAC,KAAD,CACIoK,MAAOK,EAAQO,QAAO,qBAAGZ,QAAsBzJ,EAAMpB,MAAM0L,kBAC3DZ,SAAU1J,EAAMuK,uBAChB3F,QAASkF,EACTU,YAAY,gBACZC,YAAaX,IAAYA,EAAQhF,UAEzC,yBAAKzF,UAAU,4BACX,kBAAC,KAAD,CACIoK,MAAOQ,EAAQI,QAAO,qBAAGZ,QAAsBzJ,EAAMpB,MAAM8L,kBAC3DhB,SAAU1J,EAAM2K,uBAChB/F,QAASqF,EACTO,YAAY,gBACZC,YAAaR,IAAYA,EAAQnF,UAEzC,yBAAKzF,UAAU,4BACX,kBAAC,KAAD,CACIoK,MAAOU,EAAME,QAAO,qBAAGZ,QAAsBzJ,EAAMpB,MAAMgM,kBACzDlB,SAAU1J,EAAM6K,mBAChBjG,QAASuF,EACTK,YAAY,iBACZC,YAAaN,IAAUA,EAAMrF,YCialCgG,G,YArcb,WAAY9K,GAAQ,IAAD,8BACjB,4CAAMA,KAsBR+K,+BAAiC,SAAAvI,GAC/BA,EAAEwI,iBADkC,MAEZxI,EAAEI,OAAlB2G,EAF4B,EAE5BA,KAAME,EAFsB,EAEtBA,MACd,EAAKrH,SAAL,gBACK,EAAKxD,MADV,CAEE6F,mBAAmB,gBACd,EAAK7F,MAAM6F,mBADE,gBAEf8E,EAAOE,EAAMpI,SAEhB4J,SAAS,EACT3D,SAAU,OAjCK,EAqCnB4D,cAAgB,oBAAAvJ,EAAAC,OAAA,kEAAAD,EAAA,MACRE,IAAMC,KAAK,oCAAqC,CACpDC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,CACJ,iBAAmB,KAEpB3D,MAAK,SAAA6D,GACN,GAAIA,EAAIF,KAAKG,OAAb,CACE,IAAM4H,EAAU,aAAO,IAAIoB,IAAIjJ,EAAIF,KAAKK,WAAW2D,KAAI,SAAArD,GAAC,OAAIA,EAAEyI,mBAC9D,EAAKhJ,SAAS,CACZC,WAAYH,EAAIF,KAAKK,WACrB0H,WAAYA,EACZzH,OAAO,SAGT,EAAKF,SAAS,CAAEE,OAAO,QAfb,sCArCG,EA0DnBuI,mBAAqB,SAAArI,GAAM,IAGR,EAHO,EACe,EAAK5D,MAApCyD,EADgB,EAChBA,WAAYqI,EADI,EACJA,eAChBpJ,EAAgBe,EAAWK,MAAK,SAAAC,GAAC,OAAIA,EAAEK,aAAe0H,GAAkB/H,EAAEkB,SAAWrB,EAAEiH,SAC3FnI,EACE,CAAE8J,eADa,EAC8E9J,GAD3E8J,cACDpI,WADF,EAAkBA,WACJY,WADd,EAA8BA,WACJC,OAD1B,EAA0CA,OACRC,SADlC,EAAkDA,SACNC,MAD5C,EAA4DA,MACTC,YADnD,EAAmEA,YACHC,UADhE,EAAgFA,WAEjG,EAAK7B,SAAS,CACZd,cAAeA,EACfsJ,eAAgBpI,EAAEiH,MAClB/E,kBAAkB,EAClBuG,SAAS,EACT3D,SAAU,MApEK,EAwEnBqD,uBAAyB,SAAMnI,GAAN,qBAAAb,EAAAC,OAAA,qDACgB,EAAKhD,MAApC8L,EADe,EACfA,eAAgBrI,EADD,EACCA,WACpBG,EAAEiH,QAAUiB,EAFO,oDAMnBlI,EAAEiH,QAAUiB,GACd,EAAKtI,SAAS,CAAEwI,eAAgB,kBAG5BS,EAAahJ,EAAWgI,QAAO,SAAAiB,GAAC,OAAIA,EAAEtI,aAAeR,EAAEiH,SAAOzD,KAAI,SAAArD,GAAC,OAAIA,EAAEkB,WAC/DiB,SAAiC,IAAtBuG,EAAWvG,QAAkC,KAAlBuG,EAAW,IAX1C,uBAYrB,EAAKjJ,SAAS,CACZgI,4BAA6B,GAC7BM,eAAgBlI,EAAEiH,MAClBmB,eAAgB,eAChBlG,kBAAkB,EAClBpC,OAAO,IAjBY,0BAsBvB,EAAKF,SAAS,CACZgI,4BAA6BiB,EAC7BX,eAAgBlI,EAAEiH,MAClBmB,eAAgB,eAChBlG,kBAAkB,EAClBpC,OAAO,IA3Bc,sCAxEN,EAuGnBiI,uBAAyB,SAAA/H,GAAM,IAAD,EACW,EAAK5D,MAApC0L,EADoB,EACpBA,eAAgBjI,EADI,EACJA,WACxB,GAAIG,EAAEiH,QAAUa,EAAhB,CAII9H,EAAEiH,QAAUa,GACd,EAAKlI,SAAS,CAAEwI,eAAgB,eAAgBF,eAAgB,iBAGlE,IAAMa,EAAU,aAAO,IAAIJ,IAAI9I,EAAWgI,QAAO,SAAA1H,GAAC,OAAIA,EAAEyI,gBAAkB5I,EAAEiH,SAAOzD,KAAI,SAAArD,GAAC,OAAIA,EAAEK,iBACzFuI,EAAWzG,QAAiC,IAAtByG,EAAWzG,QAAkC,KAAlByG,EAAW,GAC/D,EAAKnJ,SAAS,CACZ8H,wBAAyB,GACzBI,eAAgB9H,EAAEiH,MAClBiB,eAAgB,eAChBE,eAAgB,eAChBtI,OAAO,IAKX,EAAKF,SAAS,CACZ8H,wBAAyBqB,EACzBjB,eAAgB9H,EAAEiH,MAClBiB,eAAgB,eAChBE,eAAgB,eAChBtI,OAAO,MAhIT,EAAK4I,gBACL,EAAKP,uBAAyB,EAAKA,uBAAuBa,KAA5B,iBAC9B,EAAKjB,uBAAyB,EAAKA,uBAAuBiB,KAA5B,iBAC9B,EAAKX,mBAAqB,EAAKA,mBAAmBW,KAAxB,iBAC1B,EAAKC,8BAAgC,EAAKA,8BAA8BD,KAAnC,iBACrC,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,iBACxB,EAAK5M,MAAQ,CACXyD,WAAY,GACZiI,eAAgB,eAChBI,eAAgB,eAChBE,eAAgB,eAChBb,WAAY,GACZG,wBAAyB,GACzBE,4BAA6B,GAC7B9H,OAAO,EACPmC,mBAAoB,IAjBL,E,gFAuIjB1E,KAAKC,MAAM2L,QAAQC,W,oDAGeC,G,mFAClCA,EAAMb,iB,EACwCjL,KAAKnB,MAAM6F,mBAAjD2G,E,EAAAA,cAAepI,E,EAAAA,WAAYa,E,EAAAA,OAE9BuH,GAAkBpI,GAAea,EAAOiI,W,uBAC3C/L,KAAKqC,SAAS,CACZ6I,SAAS,EACT3D,SAAU,qC,oDAKIzF,IAAMC,KAAK,4CAA6C,CACxEC,QAAS,CAAE,eAAgB,oBAC3BC,KAAK,gBACAjC,KAAKnB,MAAM6F,mBADZ,CAEFsH,iBAAiB,O,YAJjB/J,E,QAQKA,KAAKG,OAAOuG,SAAU1G,EAAKA,KAAKG,OAAO6J,O,wBAC9CjM,KAAKqC,SAAS,CACZ6I,SAAS,EACT3D,SAAUtF,EAAKA,KAAKG,OAAO6J,S,kCAI7BC,SAASC,eAAe,0BAA0BC,QAClDpM,KAAKqC,SAAL,gBACKrC,KAAKqM,WAAW9K,cADrB,CAEE2J,SAAS,EACT3D,SAAU,6CAA+CvH,KAAKnB,MAAM0L,kB,oGAMhE,IAEJ+B,EA8PJ,MA7PuB,iBAFItM,KAAKnB,MAAxBgM,iBAGNyB,EAAY,6BACV,kBAAC,IAAD,CAAQpD,QAAQ,YAAYpI,MAAM,UAAU2C,QAASzD,KAAK2L,iBAAkBjM,MAAO,CAAE6M,IAAK,KAAMC,KAAM,MAAOC,SAAU,UAAvH,QAGA,0BAAM3J,GAAG,yBAAyByF,SAAUvI,KAAK0L,8BAA+BhM,MAAO,CAAEyJ,OAAQ,OAC/F,+BACE,+BACE,4BACE,qCACA,8CACA,8CAGJ,+BACE,4BACE,4BACE,oDAIF,4BACE,2BAAO/K,KAAK,OAAOoL,KAAK,kBAAkBlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEjH,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,kBAAkBlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAGnH,4BACE,4BACE,6DAIF,6BACA,8BAEF,4BACE,4BACE,uCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,0BAA0BlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEzH,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,0BAA0BlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAG3H,4BACE,4BACE,uCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,0BAA0BlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEzH,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,0BAA0BlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAG3H,4BACE,4BACE,kDAIF,6BACA,8BAEF,4BACE,4BACE,uCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,oBAAoBlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEnH,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,oBAAoBlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAGrH,4BACE,4BACE,uCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,uBAAuBlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEtH,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,oBAAoBlB,UAAQ,EAACqB,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAGrH,4BACE,4BACE,kDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,gBAAgBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEtG,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,gBAAgBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAGxG,4BACE,4BACE,uDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,qBAAqBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAE3G,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,qBAAqBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAG7G,4BACE,4BACE,iDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,iBAAiBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEvG,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,iBAAiBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAGzG,4BACE,4BACE,8DAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,2BAA2BG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEjH,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,2BAA2BG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAGnH,4BACE,4BACE,wDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,sBAAsBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAE5G,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,sBAAsBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAG9G,4BACE,4BACE,mDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,kBAAkBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAExG,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,kBAAkBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAG1G,4BACE,4BACE,iDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,kBAAkBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAExG,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,kBAAkBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAG1G,4BACE,4BACE,iDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,kBAAkBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAExG,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,kBAAkBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAG1G,4BACE,4BACE,gDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,iBAAiBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEvG,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,iBAAiBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAGzG,4BACE,4BACE,uDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,wBAAwBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAE9G,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,wBAAwBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,UAGhH,4BACE,4BACE,uDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,mBAAmBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,SAEzG,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,mBAAmBG,SAAU3J,KAAKgL,+BAAgCvB,aAAa,YAK/G,kBAAC,IAAD,CACErL,KAAK,SACL8K,QAAQ,SACRpI,MAAM,UACNpB,MAAO,CAAEyJ,OAAQ,SAChB,aAMP,yBAAK7J,UAAU,kCACb,wDACA,kBAAC,IAAD,CAAgBI,MAAO,CAAE8D,UAAW,SAAUkJ,SAAU,SAAWnK,MAAOgH,SAASvJ,KAAKnB,MAAMqM,UAC3FlL,KAAKnB,MAAMqM,QAAU,GAAKlL,KAAKnB,MAAM0I,UAExC,kBAAC,IAAD,CAAQ2B,QAAQ,YAAYpI,MAAM,UAAU2C,QAASzD,KAAK2L,iBAAkBjM,MAAO,CAAE6M,IAAK,KAAMC,KAAM,MAAOC,SAAU,UAAvH,QAGA,kBAAC,GAAD,CACEjC,uBAAwBxK,KAAKwK,uBAC7BI,uBAAwB5K,KAAK4K,uBAC7BE,mBAAoB9K,KAAK8K,mBACzBjM,MAAOmB,KAAKnB,QAEd,6BACCyN,O,GAjc4B/L,aCkNtBoM,I,mBAjMb,WAAY1M,GAAQ,IAAD,8BACjB,4CAAMA,KAfR2M,YAAc,CACZhI,SAAU,GACV1C,YAAa,GACbgF,YAAa,GACbQ,SAAU,GACVN,KAAM,GACNyF,WAAY,GACZ3B,SAAS,EACT3D,SAAU,IAMO,EAHnBuF,MAAQ,CAAC,CAAEjH,MAAO,QAAS6D,MAAO,SAAW,CAAE7D,MAAO,SAAU6D,MAAO,UAAY,CAAE7D,MAAO,UAAW6D,MAAO,YAG3F,EAFnBmD,WAAa,CAAC,CAAEhH,MAAO,QAAS6D,MAAO,SAAW,CAAE7D,MAAO,YAAa6D,MAAO,cAE5D,EAUnBqD,wBAA0B,SAAAtK,GAAM,IAAD,EAC7BA,EAAEwI,iBAD2B,MAELxI,EAAEI,OAAlB2G,EAFqB,EAErBA,KAAME,EAFe,EAEfA,MACd,EAAKrH,UAAL,oBACGmH,EAAOE,GADV,0BAEW,GAFX,0BAGY,IAHZ,KAbiB,EAwBnBsD,iBAAmB,SAAAvK,GACjB,EAAKJ,SAAS,CACZ+E,KAAM3E,EAAEiH,MACRwB,SAAS,EACT3D,SAAU,MA5BK,EAgCnB0F,uBAAyB,SAAAxK,GACvB,EAAKJ,SAAS,CACZwK,WAAYpK,EAAEiH,MACdwB,SAAS,EACT3D,SAAU,MAlCZ,EAAK1I,MAAL,gBAAkB,EAAK+N,aACvB,EAAKG,wBAA0B,EAAKA,wBAAwBtB,KAA7B,iBAC/B,EAAKuB,iBAAmB,EAAKA,iBAAiBvB,KAAtB,iBACxB,EAAKwB,uBAAyB,EAAKA,uBAAuBxB,KAA5B,iBAC9B,EAAKyB,uBAAyB,EAAKA,uBAAuBzB,KAA5B,iBAC9B,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,iBAPP,E,gFAqBjBzL,KAAKC,MAAM2L,QAAQC,W,6CAmBQC,G,yFAC3BA,EAAMb,iB,EACqEjL,KAAKnB,MAAxE+F,E,EAAAA,SAAU8C,E,EAAAA,SAAUR,E,EAAAA,YAAahF,E,EAAAA,YAAakF,E,EAAAA,KAAMyF,E,EAAAA,WACvDjI,GAAasC,GAAgBQ,GAAaN,GAASlF,IAAyB,WAATkF,GAAsByF,G,uBAC5F7M,KAAKqC,SAAS,CACZ6I,SAAS,EACT3D,SAAU,qC,iCAKTsF,IACH7M,KAAKnB,MAAMgO,WAAazF,G,mBAGRtF,IAAMC,KAAK,iCAAkC,CAC7DC,QAAS,CAAE,eAAgB,oBAC3BC,KAAK,gBACAjC,KAAKnB,U,YAHRoD,E,QAMKA,KAAKG,OAAOuG,SAAU1G,EAAKA,KAAKG,OAAO6J,O,wBAC1ChK,EAAKA,KAAKG,OAAO6J,OAAOkB,QAAQ,wBAA0B,IAC5DlL,EAAKA,KAAKG,OAAO6J,OAAS,2BAE5BjM,KAAKqC,SAAS,CACZ6I,SAAS,EACT3D,SAAUtF,EAAKA,KAAKG,OAAO6J,S,kCAI7BC,SAASC,eAAe,mBAAmBC,QAC3CpM,KAAKqC,SAAL,gBACKrC,KAAK4M,YADV,CAEE1B,SAAS,EACT3D,SAAU,gCAAkC3C,K,oGAMxC,IAEJH,EAFG,OAqBP,MAlBa,WAFAzE,KAAKnB,MAAMuI,OAGtB3C,EAAY,4BACV,4BACE,iDAIF,4BACE,kBAAC,KAAD,CACEiF,MAAO1J,KAAK6M,WAAWvC,QAAO,qBAAGZ,QAAsB,EAAK7K,MAAMgO,cAClElD,SAAU3J,KAAKiN,uBACfpI,QAAS7E,KAAK6M,WACdpC,YAAY,qBACZjB,KAAK,kBAMX,yBAAKlK,UAAU,kCACb,kBAAC,IAAD,CAAQ4J,QAAQ,YAAYpI,MAAM,UAAU2C,QAASzD,KAAK2L,iBAAkBjM,MAAO,CAAE6M,IAAK,KAAMC,KAAM,MAAOC,SAAU,UAAvH,QAGA,4CACA,kBAAC,IAAD,CAAgB/M,MAAO,CAAE8D,UAAW,SAAUkJ,SAAU,SAAWnK,MAAOgH,SAASvJ,KAAKnB,MAAMqM,UAC3FlL,KAAKnB,MAAMqM,QAAU,GAAKlL,KAAKnB,MAAM0I,UAExC,0BAAMzE,GAAG,kBAAkByF,SAAUvI,KAAKkN,uBAAwBxN,MAAO,CAAEyJ,OAAQ,OACjF,+BACE,+BACE,4BACE,qCACA,uCAGJ,+BACE,4BACE,4BACE,+CAIF,4BACE,2BAAO/K,KAAK,QAAQoL,KAAK,WAAWlB,UAAQ,EAACqB,SAAU3J,KAAK+M,wBAAyBtD,aAAa,UAGtG,4BACE,4BACE,kDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,cAAclB,UAAQ,EAACqB,SAAU3J,KAAK+M,wBAAyBtD,aAAa,UAGxG,4BACE,4BACE,kDAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,cAAclB,UAAQ,EAACqB,SAAU3J,KAAK+M,wBAAyBtD,aAAa,UAGxG,4BACE,4BACE,8CAIF,4BACE,2BAAOrL,KAAK,WAAWoL,KAAK,WAAWlB,UAAQ,EAACqB,SAAU3J,KAAK+M,wBAAyBtD,aAAa,UAGzG,4BACE,4BACE,0CAIF,4BACE,6BACE,kBAAC,KAAD,CACEC,MAAO1J,KAAK8M,MAAMxC,QAAO,qBAAGZ,QAAsB,EAAK7K,MAAMuI,QAC7DuC,SAAU3J,KAAKgN,iBACfnI,QAAS7E,KAAK8M,MACdrC,YAAY,mBAKnBhG,IAGL,kBAAC,IAAD,CACErG,KAAK,SACL8K,QAAQ,SACRpI,MAAM,UACNpB,MAAO,CAAEyJ,OAAQ,SAChB,gB,GAzMc5I,cC0LZ6M,G,YA3Kb,WAAYnN,GAAQ,IAAD,8BACjB,4CAAMA,KAdRsB,cAAgB,CACd0B,WAAY,GACZoK,IAAK,GACLC,IAAK,GACLC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,OAAQ,GACRC,MAAO,GACPzC,SAAS,EACT3D,SAAU,IAGO,EAQnBqG,0BAA4B,SAAAnL,GAAM,IAAD,EAC/BA,EAAEwI,iBAD6B,MAEPxI,EAAEI,OAAlB2G,EAFuB,EAEvBA,KAAME,EAFiB,EAEjBA,MACd,EAAKrH,UAAL,oBACGmH,EAAOE,GADV,0BAEW,GAFX,0BAGY,IAHZ,KATA,EAAK7K,MAAL,gBAAkB,EAAK0C,eACvB,EAAKqM,0BAA4B,EAAKA,0BAA0BnC,KAA/B,iBACjC,EAAKoC,yBAA2B,EAAKA,yBAAyBpC,KAA9B,iBAChC,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,iBALP,E,gFAmBjBzL,KAAKC,MAAM2L,QAAQC,W,+CAGUC,G,mFAC7BA,EAAMb,iB,EAC2BjL,KAAKnB,MAA9BoE,E,EAAAA,WAAYoK,E,EAAAA,IAAKC,E,EAAAA,IACpBrK,GAAeqK,GAAQD,E,uBAC1BrN,KAAKqC,SAAS,CACZ6I,SAAS,EACT3D,SAAU,qC,oDAKIzF,IAAMC,KAAK,qCAAsC,CACjEC,QAAS,CAAE,eAAgB,oBAC3BC,KAAK,gBACAjC,KAAKnB,U,YAHRoD,E,QAOKA,KAAKG,OAAOuG,SAAU1G,EAAKA,KAAKG,OAAO6J,O,wBAC9CjM,KAAKqC,SAAS,CACZ6I,SAAS,EACT3D,SAAUtF,EAAKA,KAAKG,OAAO6J,S,kCAI7BjM,KAAKqC,SAAL,gBACKrC,KAAKuB,cADV,CAEE2J,SAAS,EACT3D,SAAU,kCAAoCtE,KAEhDiJ,SAASC,eAAe,qBAAqBC,Q,oGAM/C,OACE,yBAAK9M,UAAU,kCACb,kBAAC,IAAD,CAAQ4J,QAAQ,YAAYpI,MAAM,UAAU2C,QAASzD,KAAK2L,iBAAkBjM,MAAO,CAAE6M,IAAK,KAAMC,KAAM,MAAOC,SAAU,UAAvH,QAGA,8CACA,kBAAC,IAAD,CAAgB/M,MAAO,CAAE8D,UAAW,SAAUkJ,SAAU,SAAWnK,MAAOgH,SAASvJ,KAAKnB,MAAMqM,UAC3FlL,KAAKnB,MAAMqM,QAAU,GAAKlL,KAAKnB,MAAM0I,UAExC,0BAAMzE,GAAG,oBAAoByF,SAAUvI,KAAK6N,yBAA0BnO,MAAO,CAAEyJ,OAAQ,OACrF,+BACE,+BACE,4BACE,qCACA,uCAGJ,+BACE,4BACE,4BACE,iDAIF,4BACE,2BAAO/K,KAAK,OAAOoL,KAAK,aAAalB,UAAQ,EAACqB,SAAU3J,KAAK4N,0BAA2BnE,aAAa,UAGzG,4BACE,4BACE,yCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,MAAMlB,UAAQ,EAACqB,SAAU3J,KAAK4N,0BAA2BnE,aAAa,UAGlG,4BACE,4BACE,yCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,MAAMlB,UAAQ,EAACqB,SAAU3J,KAAK4N,0BAA2BnE,aAAa,UAGlG,4BACE,4BACE,yCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,QAAQG,SAAU3J,KAAK4N,0BAA2BnE,aAAa,UAG3F,4BACE,4BACE,uCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,MAAMG,SAAU3J,KAAK4N,0BAA2BnE,aAAa,UAGzF,4BACE,4BACE,wCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,OAAOG,SAAU3J,KAAK4N,0BAA2BnE,aAAa,UAG1F,4BACE,4BACE,0CAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,SAASG,SAAU3J,KAAK4N,0BAA2BnE,aAAa,UAG5F,4BACE,4BACE,yCAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,QAAQG,SAAU3J,KAAK4N,0BAA2BnE,aAAa,YAK/F,kBAAC,IAAD,CACErL,KAAK,SACL8K,QAAQ,SACRpI,MAAM,UACNpB,MAAO,CAAEyJ,OAAQ,SAChB,gB,GAlLc5I,a,sBCyZZuN,I,oBA3Xb,WAAY7N,GAAQ,IAAD,8BACjB,4CAAMA,KA1BRoM,WAAa,CACX9K,cAAe,CACb8J,cAAe,GACfpI,WAAY,GACZY,WAAY,GACZC,OAAQ,IAAIiK,KACZhK,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,UAAW,GACX8J,QAAS,GACTC,cAAe,GACfzJ,eAAgB,GAChB0J,SAAU,GACVC,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,GAChBC,aAAc,GACdC,aAAc,GACdC,sBAAuB,IAEzBC,WAAY,GACZnM,WAAY,IAGK,EAcnBoM,0BAA4B,SAAAjM,GAC1B,EAAKJ,SAAS,CACZd,cAAc,gBACT,EAAK1C,MAAM0C,cADH,CAEX8J,cAAe5I,EAAEiH,WAlBJ,EAuBnBiF,uBAAyB,SAAAlM,GACvB,EAAKJ,SAAS,CACZd,cAAc,gBACT,EAAK1C,MAAM0C,cADH,CAEX0B,WAAYR,EAAEiH,WA3BD,EAgCnBkF,kBAAoB,SAACnM,GACnBA,EAAEwI,iBADuB,MAEDxI,EAAEI,OAAlB2G,EAFiB,EAEjBA,KAAME,EAFW,EAEXA,MACd,EAAKrH,SAAS,CACZd,cAAc,gBACT,EAAK1C,MAAM0C,cADH,gBAEViI,EAAOE,OAtCK,EA2CnBmF,sBAAwB,SAACC,GACvB,EAAKzM,SAAS,CACZd,cAAc,gBACT,EAAK1C,MAAM0C,cADH,CAEXuC,OAAQgL,OA/CK,EAwDnBC,cAAgB,oBAAAnN,EAAAC,OAAA,kEAAAD,EAAA,MACRE,IAAMC,KAAK,6BAA8B,CAC7CC,QAAS,CAAE,eAAgB,sBAC1B1D,MAAK,SAAA6D,GACN,GAAIA,EAAIF,KAAKG,OAAb,CACE,IAAM4M,EAAK7M,EAAIF,KAAKwM,WAAWxE,OAAOhE,KAAI,SAAAK,GAAC,MAAK,CAC9CT,MAAOS,EACPoD,MAAOpD,MAET,EAAKjE,SAAS,CACZoM,WAAYO,EACZzM,OAAO,SAGT,EAAKF,SAAS,CAAEE,OAAO,QAdb,sCAxDG,EA4EnB4I,cAAgB,oBAAAvJ,EAAAC,OAAA,kEAAAD,EAAA,MACRE,IAAMC,KAAK,+BAAgC,CAC/CC,QAAS,CAAE,eAAgB,sBAC1B1D,MAAK,SAAA6D,GACN,GAAIA,EAAIF,KAAKG,OAAb,CACE,IAAM6M,EAAK9M,EAAIF,KAAKK,WAAW2D,KAAI,SAAArD,GAAC,OAAIA,EAAEK,WAAa,IAAML,EAAE0K,OAAKrD,OAAOhE,KAAI,SAAAK,GAAC,MAAK,CACnFT,MAAOS,EACPoD,MAAOpD,MAET,EAAKjE,SAAS,CACZC,WAAY2M,EACZ1M,OAAO,SAIT,EAAKF,SAAS,CAAEE,OAAO,QAfb,sCA1Ed,EAAK1D,MAAL,gBAAkB,EAAKwN,YACvB,EAAKuC,kBAAoB,EAAKA,kBAAkBnD,KAAvB,iBACzB,EAAKyD,yBAA2B,EAAKA,yBAAyBzD,KAA9B,iBAChC,EAAKiD,0BAA4B,EAAKA,0BAA0BjD,KAA/B,iBACjC,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,iBANP,E,kFAUjBzL,KAAK+O,gBACL/O,KAAKmL,kB,yCA0CLnL,KAAKC,MAAM2L,QAAQC,W,+CA4CUC,G,mFAC7BA,EAAMb,iB,EACwCjL,KAAKnB,MAAM0C,cAAjD8J,E,EAAAA,cAAepI,E,EAAAA,WAAYa,E,EAAAA,OAC9BuH,GAAkBpI,GAAea,EAAOiI,W,uBAC3C/L,KAAKqC,SAAS,CACZ6I,SAAS,EACT3D,SAAU,qC,oDAKIzF,IAAMC,KAAK,4CAA6C,CACxEC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,CACJ6B,OAAQ9D,KAAKnB,MAAM0C,cAAcuC,OACjCb,WAAYjD,KAAKnB,MAAM0C,cAAc0B,WACrCoI,cAAerL,KAAKnB,MAAM0C,cAAc8J,cACxCW,iBAAiB,M,cANjB/J,E,2BAUUH,IAAMC,KAAK,kCAAmC,CAC1DC,QAAS,CAAE,eAAgB,oBAC3BC,KAAK,gBACAjC,KAAKnB,MAAM0C,kB,aAHlBU,E,QAOSA,KAAKG,OAAOuG,SAAU1G,EAAKA,KAAKG,OAAO6J,O,wBAC9CjM,KAAKqC,SAAS,CACZ6I,SAAS,EACT3D,SAAUtF,EAAKA,KAAKG,OAAO6J,S,kCAI7BjM,KAAKqC,SAAL,gBACKrC,KAAKqM,WAAW9K,cADrB,CAEE2J,SAAS,EACT3D,SAAU,wCAA0C8D,KAEtDa,SAASC,eAAe,qBAAqBC,Q,oGAKvC,IAAD,SAC4BpM,KAAKnB,MAAhC4P,EADD,EACCA,WAAYnM,EADb,EACaA,WACpB,OACE,yBAAKhD,UAAU,kCACb,kBAAC,IAAD,CAAQ4J,QAAQ,YAAYpI,MAAM,UAAU2C,QAASzD,KAAK2L,iBAAkBjM,MAAO,CAAE6M,IAAK,KAAMC,KAAM,MAAOC,SAAU,UAAvH,QAGA,mDACA,kBAAC,IAAD,CAAgB/M,MAAO,CAAE8D,UAAW,SAAUkJ,SAAU,SAAWnK,MAAOgH,SAASvJ,KAAKnB,MAAMqM,UAC3FlL,KAAKnB,MAAMqM,QAAU,GAAKlL,KAAKnB,MAAM0I,UAExC,0BAAMzE,GAAG,oBAAoByF,SAAUvI,KAAKkP,yBAA0BxP,MAAO,CAAEyJ,OAAQ,OACrF,+BACE,+BACE,4BACE,qCACA,uCAGJ,+BACE,4BACE,4BACE,oDAIF,4BACE,kBAAC,KAAD,CACEO,MAAO+E,EAAWnE,QAAO,qBAAGZ,QAAsB,EAAK7K,MAAM0C,cAAc8J,iBAC3E1B,SAAU3J,KAAK0O,0BACf7J,QAAS4J,EACThE,YAAY,wBACZnC,UAAQ,MAId,4BACE,4BACE,iDAIF,4BACE,kBAAC,KAAD,CACEoB,MAAOpH,EAAWgI,QAAO,qBAAGZ,QAAsB,EAAK7K,MAAM0C,cAAc0B,cAC3E0G,SAAU3J,KAAK2O,uBACf9J,QAASvC,EACTmI,YAAY,qBACZnC,UAAQ,MAId,4BACE,4BACE,+CAIF,4BACE,2BAAOlK,KAAK,OAAOoL,KAAK,aAAaG,SAAU3J,KAAK4O,sBAGxD,4BACE,4BACE,6CAIF,4BACE,kBAAC,KAAD,CAAYO,SAAUnP,KAAKnB,MAAM0C,cAAcuC,OAAQ6F,SAAU3J,KAAK6O,sBAAuBnF,MAAO1J,KAAKnB,MAAM0C,cAAcuC,OAAQwE,UAAQ,EAACmB,aAAa,UAG/J,4BACE,4BACE,6CAIF,4BACE,2BAAOrL,KAAK,OAAOoL,KAAK,WAAWG,SAAU3J,KAAK4O,sBAGtD,4BACE,4BACE,mDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,iBAAiBG,SAAU3J,KAAK4O,sBAG5D,4BACE,4BACE,yCAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,QAAQG,SAAU3J,KAAK4O,sBAGnD,4BACE,4BACE,gDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,cAAcG,SAAU3J,KAAK4O,sBAGzD,4BACE,4BACE,8CAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,YAAYG,SAAU3J,KAAK4O,sBAGvD,4BACE,4BACE,2CAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,UAAUG,SAAU3J,KAAK4O,sBAGrD,4BACE,4BACE,mDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,gBAAgBG,SAAU3J,KAAK4O,sBAG3D,4BACE,4BACE,wDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,qBAAqBG,SAAU3J,KAAK4O,sBAGhE,4BACE,4BACE,4CAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,WAAWG,SAAU3J,KAAK4O,sBAGtD,4BACE,4BACE,oDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,iBAAiBG,SAAU3J,KAAK4O,sBAG5D,4BACE,4BACE,qDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,kBAAkBG,SAAU3J,KAAK4O,sBAG7D,4BACE,4BACE,mDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,iBAAiBG,SAAU3J,KAAK4O,sBAG5D,4BACE,4BACE,iDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,eAAeG,SAAU3J,KAAK4O,sBAG1D,4BACE,4BACE,iDAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,eAAeG,SAAU3J,KAAK4O,sBAG1D,4BACE,4BACE,2DAIF,4BACE,2BAAOxQ,KAAK,OAAOoL,KAAK,wBAAwBG,SAAU3J,KAAK4O,wBAKvE,kBAAC,IAAD,CACExQ,KAAK,SACL8K,QAAQ,SACRpI,MAAM,UACNpB,MAAO,CAAEyJ,OAAQ,SAChB,gB,GA9YmB5I,c,WCN1B6O,GAAS,CACb,4BACA,4BACA,6BAGIC,GAAoB,CACxBC,SAAU,IACVC,mBAAoB,IACpBC,UAAU,EACVC,YAAY,EACZC,MAAO,EACPC,QAAQ,GAeKC,GAZG,WAChB,OACE,yBAAKtQ,UAAU,mBACb,kBAAC,QAAS+P,GAEND,GAAOnJ,KAAI,SAAC4J,EAAMC,GAAP,OAAiB,yBAAKhQ,IAAKgQ,EAAOpQ,MAAO,CAAEE,MAAO,QAAUmQ,IAAKF,EAAMG,IAAKH,UCXlFI,OATf,WACI,OACI,yBAAK3Q,UAAU,IACX,2DACA,kBAAC,GAAD,QCiFG4Q,G,YArFb,WAAYjQ,GAAQ,IAAD,8BACjB,4CAAMA,KAQRkQ,YAAc,WACZ,EAAK9N,SAAS,CACZ+N,YAAY,EAAKvR,MAAMuR,cATzB,EAAKD,YAAc,EAAKA,YAAY1E,KAAjB,iBACnB,EAAK4E,kBAAmB,EAAKA,kBAAkB5E,KAAvB,iBACxB,EAAK6E,qBAAuB,EAAKA,qBAAqB7E,KAA1B,iBAC5B,EAAK5M,MAAQ,CACXuR,WAAWnQ,EAAMsQ,aANF,E,iFAejBvQ,KAAKqC,SAAS,CACZ+N,YAAW,M,6CAIb1J,aAAaqB,QAAQ,YAAY,IACjCrB,aAAaqB,QAAQ,WAAW,IAChCrB,aAAaqB,QAAQ,cAAc,IACnC/H,KAAKqC,SAAS,CACZ+N,YAAW,M,+BAIb,OACE,yBAAK9Q,UAAWU,KAAKnB,MAAMuR,WAAa,iBAAiB,OAAStN,GAAG,aACrE,yBAAKxD,UAAU,gBACC,yBAAKA,UAAU,UAAUwD,GAAG,cAA5B,WACA,yBAAKiN,IAAI,qDAAqDC,IAAI,QAAQ1Q,UAAU,UACpF,4BAAQA,UAAU,kCAAkCwD,GAAG,cAAcW,QAASzD,KAAKmQ,aAC/E,yBAAK7Q,UAAU,oBACX,0BAAMA,UAAU,iBAChB,0BAAMA,UAAU,oBAChB,0BAAMA,UAAU,oBAChB,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,6BAIvC,yBAAKA,UAAWU,KAAKnB,MAAMuR,WAAa,2BAA2B,YAAatN,GAAG,YAAY0N,OAAO,MAClG,wBAAIlR,UAAYU,KAAKnB,MAAMuR,WAAa,kBAAkB,WAAYtN,GAAG,cACzE,4BACA,kBAAC,IAAD,CAAMxD,UAAU,GAAGwH,GAAG,IAAIrD,QAAUzD,KAAKqQ,mBAAzC,OAEI,0BAAM/Q,UAAU,gBAGpB,4BACA,kBAAC,IAAD,CAAMA,UAAU,GAAGwH,GAAG,SAASrD,QAAUzD,KAAKqQ,mBAA9C,QAEE,0BAAM/Q,UAAU,gBAGlB,4BACE,kBAAC,IAAD,CAAMA,UAAU,GAAGwH,GAAG,YAAYrD,QAAUzD,KAAKqQ,mBAAjD,YAEA,0BAAM/Q,UAAU,gBAGjBoH,aAAaC,QAAQ,aACnB,4BACA,kBAAC,IAAD,CAAMrH,UAAU,GAAGwH,GAAG,SAASrD,QAAUzD,KAAKsQ,sBAA9C,SAEA,0BAAMhR,UAAU,gBAIjB,4BACE,kBAAC,IAAD,CAAMA,UAAU,GAAGwH,GAAG,SAASrD,QAAUzD,KAAKqQ,mBAA9C,QAEA,0BAAM/Q,UAAU,uB,GA3ETiB,aC2CNkQ,G,YA1Cb,WAAYxQ,GAAQ,IAAD,8BACjB,4CAAMA,KAEDqQ,qBAAuB,EAAKA,qBAAqB7E,KAA1B,iBAHX,E,oFAMjB/E,aAAaqB,QAAQ,YAAY,IACjCrB,aAAaqB,QAAQ,WAAW,M,+BAGhC,OACE,4BAAQzI,UAAU,2CAChB,yBAAKA,UAAU,iBACf,kBAAC,IAAD,CAAMA,UAAU,eAAewH,GAAG,KAAlC,QAGA,kBAAC,IAAD,CAAMxH,UAAU,eAAewH,GAAG,UAAlC,SAGA,kBAAC,IAAD,CAAMxH,UAAU,eAAewH,GAAG,aAAlC,aAGKJ,aAAaC,QAAQ,aAEnB,kBAAC,IAAD,CAAMrH,UAAU,eAAewH,GAAG,SAASrD,QAAUzD,KAAKsQ,sBAA1D,UAMC,kBAAC,IAAD,CAAMhR,UAAU,eAAewH,GAAG,UAAlC,e,GA/BKvG,aCarB,IAOMmQ,G,YACF,WAAYzQ,GAAQ,IAAD,8BACf,4CAAMA,KACDpB,MAAQ,CACT8R,MAAO,EACPhT,MAAO,CAAC,QAAS,SACjBC,QAAS,IAEb,EAAKgT,SAAW,GAChB,EAAKC,iBAAmB,EAAKA,iBAAiBpF,KAAtB,iBACxB,EAAKqF,UAAY,EAAKA,UAAUrF,KAAf,iBACjB,EAAKsF,SAAW,EAAKA,SAAStF,KAAd,iBAChB,EAAKuF,WAAa,EAAKA,WAAWvF,KAAhB,iBAXH,E,uEAaTK,GACN9L,KAAK4Q,SAAW9E,EAAMjJ,OAAO6G,Q,iCAG7B1J,KAAKC,MAAMgR,QAAQjR,KAAK4Q,Y,yCAGxB5Q,KAAKqC,SAAS,CACVsO,MAAO3Q,KAAKnB,MAAM8R,MAAQ,M,mCAK9B3Q,KAAKC,MAAMiR,mB,2CAGXhF,SAASlH,MAAT,yBAAmChF,KAAKnB,MAAM8R,MAA9C,Y,0CAGAzE,SAASlH,MAAT,yBAAmChF,KAAKnB,MAAM8R,MAA9C,Y,+BAGA,OACI,6BACI,6CAAmB3Q,KAAKnB,MAAM8R,MAA9B,UACA,4BAAQlN,QAASzD,KAAK6Q,mBACtB,2BAAOzS,KAAK,OAAOuL,SAAU3J,KAAK8Q,YAClC,4BAAQrN,QAASzD,KAAK+Q,WACtB,4BAEQ/Q,KAAKC,MAAMtC,MAAMsI,KAAI,SAAAkL,GAAI,OACrB,wBAAIrR,IAAKqR,GAAOA,OAI5B,4BAAQ1N,QAASzD,KAAKgR,YAAtB,gBACA,4BAEQhR,KAAKC,MAAMrC,QAAQqI,KAAI,SAAAkL,GAAI,OACvB,wBAAIrR,IAAKqR,EAAKrO,IAAKqO,EAAKnM,gB,GArDfzE,a,IA6DxB6Q,aApEW,SAACvS,GACrB,MAAO,CACHlB,MAAOkB,EAAMlB,MACbC,QAASiB,EAAMjB,YAbvB,SAA4ByT,GACxB,MAAO,CACHJ,QAAS,SAAAE,GACLE,ECPD,CACHjT,KAAM,MACNc,QDKqBiS,KAErBD,eAAgB,WACZG,ECJD,CACHjT,KAAM,gBD2EDgT,CAA6CV,I,8HE1E1D,SAASY,GAAWrR,GAClB,OAAO,kBAAC,KAAD,eAAOsR,UAAU,MAAStR,IAGpB,SAASuR,GAAT,GAQX,IAPFC,EAOC,EAPDA,YACA3I,EAMC,EANDA,aACA4I,EAKC,EALDA,OAKC,IAJDC,qBAIC,SAHDC,EAGC,EAHDA,iBACA5M,EAEC,EAFDA,MACAxF,EACC,EADDA,KAEA,OACE,kBAAC,KAAD,CACEqS,KAAMH,EACNI,WAAYR,GACZS,aAAW,EACXC,QAASP,EACTQ,kBAAgB,2BAChBC,mBAAiB,kCAEjB,kBAAC,KAAD,KAAclN,GACd,kBAAC,KAAD,KACE,kBAAC,KAAD,KAAoBxF,IAEtB,kBAAC,KAAD,KACGmS,EACC,kBAAC,IAAD,CAAQlO,QAASgO,EAAavI,QAAQ,SAASpI,MAAM,WAClD,UAED,KACJ,kBAAC,IAAD,CAAQ2C,QAASqF,EAAchI,MAAM,WAClC8Q,K,IC7BUO,G,2MAEnBtT,MAAQ,CACNuT,mBAAmB,EACnBC,KAAM,EAAKpS,MAAMwH,U,EAGnB6K,kBAAoB,WAClB,EAAKjQ,UAAS,iBAAO,CACnB+P,mBAAmB,O,EAIvBG,aAAe,WAKb,OACE,kBAACf,GAAD,CACEE,OAAQ,EAAK7S,MAAMuT,kBACnBJ,QAAS,EAAKQ,aACd1J,aARY,WACd,EAAKzG,UAAS,iBAAO,CAAE+P,mBAAmB,OAQxCpN,MAAM,iBACNxF,KAAK,yCACLoS,iBAAiB,U,EAKvBpK,cAAgB,iCAAA5F,EAAAC,OAAA,uDACd4Q,EADc,EACdA,YACA9K,EAFc,EAEdA,cACAC,EAHc,EAGdA,UAHc,WAAAhG,EAAA,MAKIE,IAAMC,KAAK,8BAA+B,CAC1DC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,CACJoQ,KAAM,EAAKxT,MAAMwT,KACjBI,kBATU,UAad5K,GARIA,EALU,QAaF5F,KACZ0F,GAAc,GACTE,EAAKzF,OAfI,wBAgBZ,EAAKC,UAAS,iBAAO,CACnB+P,mBAAmB,MAjBT,2BAqBZ,EAAK/P,UAAS,iBAAO,CACnB+P,mBAAmB,MAtBT,QA0BdxK,IA1Bc,uC,wEA6BN,IAAD,OACP,OACE,kBAAC,IAAD,CACEK,cAAe,CACbyK,QAAS,GACTD,YAAa,IAEfvK,iBAAkBC,mBAASC,MAAM,CAC/BsK,QAASrK,mBAASC,SAAS,4BAC3BmK,YAAapK,mBACVsK,MAAM,CAACC,cAAI,YAAa,0BACxBtK,SAAS,0BAEdC,SAAU,kBACNmK,EADM,EACNA,QAASD,EADH,EACGA,YACT9K,EAFM,EAENA,cAAeC,EAFT,EAESA,UAFT,OAIR,EAAKJ,cAAc,CACjBkL,UACAD,cACA9K,gBACAC,eAGJY,OAAQ,SAAAvI,GAAU,IAEdwI,EAQExI,EARFwI,OACAC,EAOEzI,EAPFyI,QACAC,EAME1I,EANF0I,OACAC,EAKE3I,EALF2I,aACAC,EAIE5I,EAJF4I,WACAC,EAGE7I,EAHF6I,aACAC,EAEE9I,EAFF8I,QACAC,EACE/I,EADF+I,aAEF,OAAOA,EACL,kBAACvI,EAAD,MAEE,kBAAC,IAAD,CAAOnB,UAAU,qBAAqB8J,UAAW,IAC/C,0BAAM9J,UAAU,OAAOiJ,SAAUO,GAC/B,kBAAC,IAAD,CAAaO,WAAS,EAACF,OAAO,QAAQ5G,MAAOgH,QAAQb,EAAQgK,SAAW/J,EAAO+J,UAC7E,kBAAC,IAAD,CAAYpJ,QAAQ,eAAe/G,MAAOgH,QAAQb,EAAQgK,SAAW/J,EAAO+J,UACzE,gBAEH,kBAAC,IAAD,CACE5P,GAAG,eACH0G,KAAK,UACLpL,KAAK,WACLqL,aAAa,MACbC,MAAOjB,EAAOiK,QACd/I,SAAUf,EACVgB,OAAQf,EACRtG,MAAOgH,QAAQb,EAAQgK,SAAW/J,EAAO+J,WAC3C,kBAAC,IAAD,CAAgBnQ,MAAOgH,QAAQb,EAAQgK,SAAW/J,EAAO+J,UACtDhK,EAAQgK,SAAW/J,EAAO+J,QAAU/J,EAAO+J,QAAU,KAG1D,kBAAC,IAAD,CAAarJ,WAAS,EAACF,OAAO,QAAQ5G,MAAOgH,QAAQb,EAAQ+J,aAAe9J,EAAO8J,cACjF,kBAAC,IAAD,CAAYnJ,QAAQ,mBAAmB/G,MAAOgH,QAAQb,EAAQ+J,aAAe9J,EAAO8J,cACjF,oBAEH,kBAAC,IAAD,CACE3P,GAAG,mBACH0G,KAAK,cACLpL,KAAK,WACLsL,MAAOjB,EAAOgK,YACdhJ,aAAa,MACbE,SAAUf,EACVgB,OAAQf,EACRtG,MAAOgH,QAAQb,EAAQ+J,aAAe9J,EAAO8J,eAC/C,kBAAC,IAAD,CAAgBlQ,MAAOgH,QAAQb,EAAQ+J,aAAe9J,EAAO8J,cAC1D/J,EAAQ+J,aAAe9J,EAAO8J,YAAc9J,EAAO8J,YAAc,KAGtE,kBAAC,IAAD,CACErU,KAAK,SACL8K,QAAQ,SACRpI,MAAM,UACN+I,SAAUN,SAASR,GAAWC,GAC9BtJ,MAAO,CAAEyJ,OAAQ,SAChB,mBAGJ,EAAKoJ,uB,GA9IyBhS,aCmIhCsS,G,2MAlIbhU,MAAQ,CACNuT,mBAAmB,G,EAGrBE,kBAAoB,WAClB,EAAKjQ,UAAS,iBAAO,CACnB+P,mBAAmB,O,EAIvB5K,cAAgB,iCAAA5F,EAAAC,OAAA,uDACd4F,EADc,EACdA,SACAE,EAFc,EAEdA,cACAC,EAHc,EAGdA,UAHc,WAAAhG,EAAA,MAKIE,IAAMC,KAAK,6BAA8B,CACzDC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,CACJ,SAAYwF,MARF,UAKVI,EALU,OAWdF,GAAc,IACdE,EAAOA,EAAK5F,MACFG,OAbI,wBAcZ,EAAKC,UAAS,iBAAO,CACnB+P,mBAAmB,EACnB7P,OAAO,EACPgF,SAAU,yBAjBA,2BAqBZ,EAAKlF,UAAS,iBAAO,CACnBoF,WACA2K,mBAAmB,EACnB7P,OAAO,MAxBG,QA4BdqF,IA5Bc,uC,wEA+BN,IAAD,OACP,OACE,kBAAC,IAAD,CACEK,cAAe,CACbR,SAAU,IAEZS,iBAAkBC,mBAASC,MAAM,CAC/BX,SAAUY,mBAASC,SAAS,yCAE9BC,SAAU,kBACNd,EADM,EACNA,SACAE,EAFM,EAENA,cAAeC,EAFT,EAESA,UAFT,OAIR,EAAKJ,cAAc,CACjBC,WACAE,gBACAC,eAGJY,OAAQ,SAAAvI,GAAU,IAEdwI,EAQExI,EARFwI,OACAC,EAOEzI,EAPFyI,QACAC,EAME1I,EANF0I,OACAC,EAKE3I,EALF2I,aACAC,EAIE5I,EAJF4I,WACAC,EAGE7I,EAHF6I,aACAC,EAEE9I,EAFF8I,QACAC,EACE/I,EADF+I,aAmDF,OA/CIA,EACS,kBAACvI,EAAD,MACF,EAAK5B,MAAMuT,kBACT,yBAAK9S,UAAU,sBACxB,kBAAC,KAAD,CAAY4J,QAAQ,QAAQxJ,MAAO,CAAEyJ,OAAQ,WAA7C,oBACA,kBAAC,GAAD,CAAmB1B,SAAU,EAAK5I,MAAM4I,YAG/B,yBAAKnI,UAAU,sBACxB,kBAAC,KAAD,CAAY4J,QAAQ,QAAQxJ,MAAO,CAAEyJ,OAAQ,WAA7C,oBACA,kBAAC,IAAD,CAAO7J,UAAU,qBAAqB8J,UAAW,IAC/C,0BAAM9J,UAAU,OAAOiJ,SAAUO,GAC/B,kBAAC,IAAD,CAAaO,WAAS,EAACF,OAAO,SAC5B,kBAAC,IAAD,CACEG,QAAQ,WACR/G,MAAOgH,QAAQb,EAAQjB,UAAYkB,EAAOlB,WACzC,uBAEH,kBAAC,IAAD,CACE3E,GAAG,WACH0G,KAAK,WACLpL,KAAK,QACLqL,aAAa,MACbC,MAAOjB,EAAOhB,SACdkC,SAAUf,EACVgB,OAAQf,EACRtG,MAAOgH,QAAQb,EAAQjB,UAAYkB,EAAOlB,YAE5C,kBAAC,IAAD,CAAgBlF,MAAOgH,QAAQb,EAAQjB,UAAYkB,EAAOlB,WACvDiB,EAAQjB,UAAYkB,EAAOlB,SAAWkB,EAAOlB,SAAW,IAE3D,kBAAC,IAAD,CAAgBlF,MAAOgH,QAAQ,EAAK1K,MAAM0D,QACvC,EAAK1D,MAAM0D,MAAQ,EAAK1D,MAAM0I,SAAW,KAG9C,kBAAC,IAAD,CACEnJ,KAAK,SACL8K,QAAQ,SACRpI,MAAM,UACN+I,SAAUN,SAASR,GAAWC,GAC9BtJ,MAAO,CAAEyJ,OAAQ,SAChB,4B,GAnHQ5I,aCoHduS,G,YAvHX,WAAY7S,GAAQ,IAAD,8BACf,4CAAMA,KALVoM,WAAa,CACT/J,WAAY,IAGG,EAOnB6I,cAAgB,oBAAAvJ,EAAAC,OAAA,kEAAAD,EAAA,MACNE,IAAMC,KAAK,qCAAsC,CACnDC,QAAS,CAAE,eAAgB,sBAC5B1D,MAAK,SAAA6D,GACAA,EAAIF,KAAKG,OACT,EAAKC,SAAS,CACVC,WAAYH,EAAIF,KAAKK,WACrBC,OAAO,IAIX,EAAKF,SAAS,CAAEE,OAAO,QAXnB,sCAPG,EAiHnBoB,WAAa,SAAAC,GACT,MAAiB,kBAANA,EAAuB,GAC3BA,EAAE1C,OAAO,GAAGC,cAAgByC,EAAExC,MAAM,IAjH3C,EAAKvC,MAAL,gBAAkB,EAAKwN,YACvB,EAAKlB,gBACL,EAAKQ,iBAAmB,EAAKA,iBAAiBF,KAAtB,iBAJT,E,gFAyBfzL,KAAKC,MAAM2L,QAAQC,W,+BAGb,IAEFhH,EADEvC,EAAetC,KAAKnB,MAApByD,WAyEN,OAvEIA,EAAWyC,SACXF,EAAU,CACNG,MAAO,cACPC,UAAW,KACXC,KAAM,QACNC,WAAY,CACRC,UAAW,CACPxF,MAAO,MACPD,OAAQ,SAEZ0F,IAAK,CACD1F,OAAQ,SAGhB2F,UAAU,EACVC,SAAU,CACNC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,iBAAiB,EACjBoN,UAAU,GAEd9Q,KAAM,CACF2D,QAAS,CACL,CACI9C,GAAI,aACJ+C,MAAO,cACPC,QAAS,QAEb,CACIhD,GAAI,MACJ+C,MAAO,MACPC,QAAS,QAEb,CACIhD,GAAI,MACJ+C,MAAO,MACPC,QAAS,QAEb,CACIhD,GAAI,QACJ+C,MAAO,QACPC,QAAS,QAEb,CACIhD,GAAI,MACJ+C,MAAO,MACPC,QAAS,QAEb,CACIhD,GAAI,OACJ+C,MAAO,OACPC,QAAS,QAEb,CACIhD,GAAI,SACJ+C,MAAO,SACPC,QAAS,QAEb,CACIhD,GAAI,QACJ+C,MAAO,QACPC,QAAS,SAGjBE,KAAK,aACE1D,MAMf,8BACI,4BAAQhD,UAAU,aAAamE,QAASzD,KAAK2L,kBAA7C,QACA,4CAAkB3L,KAAK2D,WAAW+C,aAAaC,QAAQ,iBACvD,yBAAM7D,GAAG,QAAQpD,MAAO,CAAE+B,UAAW,KAAM+E,WAAY,KAAM9F,QAAS,SAClE,kBAAC,aAAD,CAAWmE,QAASA,EAASS,UAAQ,U,GAjH5B/E,aC6GdyS,G,YAvGX,WAAY/S,GAAQ,IAAD,8BACf,4CAAMA,KALVoM,WAAa,CACToC,WAAY,IAGG,EAOnBM,cAAgB,oBAAAnN,EAAAC,OAAA,kEAAAD,EAAA,MACNE,IAAMC,KAAK,mCAAoC,CACjDC,QAAS,CAAE,eAAgB,sBAC5B1D,MAAK,SAAA6D,GACAA,EAAIF,KAAKG,OACT,EAAKC,SAAS,CACVoM,WAAYtM,EAAIF,KAAKwM,WACrBlM,OAAO,IAGX,EAAKF,SAAS,CAAEE,OAAO,QAVnB,sCAPG,EAiGnBoB,WAAa,SAAAC,GACT,MAAiB,kBAANA,EAAuB,GAC3BA,EAAE1C,OAAO,GAAGC,cAAgByC,EAAExC,MAAM,IAjG3C,EAAKvC,MAAL,gBAAkB,EAAKwN,YACvB,EAAK0C,gBACL,EAAKpD,iBAAmB,EAAKA,iBAAiBF,KAAtB,iBAJT,E,gFAwBfzL,KAAKC,MAAM2L,QAAQC,W,+BAGb,IAEFhH,EADE4J,EAAezO,KAAKnB,MAApB4P,WA0DN,OAxDIA,EAAW1J,SACXF,EAAU,CACNG,MAAO,cACPC,UAAW,KACXC,KAAM,QACNC,WAAY,CACRC,UAAW,CACPxF,MAAO,MACPD,OAAQ,SAEZ0F,IAAK,CACD1F,OAAQ,SAGhB2F,UAAU,EACVC,SAAU,CACNC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,iBAAiB,EACjBoN,UAAU,GAEd9Q,KAAM,CACF2D,QAAS,CACL,CACI9C,GAAI,WACJ+C,MAAO,YACPC,QAAS,QAEb,CACIhD,GAAI,cACJ+C,MAAO,eACPC,QAAS,QAEb,CACIhD,GAAI,cACJ+C,MAAO,eACPC,QAAS,QAEb,CACIhD,GAAI,OACJ+C,MAAO,OACPC,QAAS,QAEb,CACIhD,GAAI,aACJ+C,MAAO,cACPC,QAAS,SAGjBE,KAAK,aACEyI,EAAWxI,KAAI,kBAA8D,CAAErB,SAAhE,EAAGA,SAAuEsC,YAA1E,EAAaA,YAA0EhF,YAAvF,EAA0BA,YAA0EkF,KAApG,EAAuCA,KAAmEyF,WAA1G,EAA6CA,mBAM3E,8BACI,4BAAQvN,UAAU,aAAamE,QAASzD,KAAK2L,kBAA7C,QACA,4CAAkB3L,KAAK2D,WAAW+C,aAAaC,QAAQ,iBACvD,yBAAM7D,GAAG,QAAQpD,MAAO,CAAE+B,UAAW,KAAM+E,WAAY,KAAM9F,QAAS,SAClE,kBAAC,aAAD,CAAWmE,QAASA,EAASS,UAAQ,U,GAjG5B/E,a,SCgBZ0S,GAXI,SAAC,GAAD,IAAc1S,EAAd,EAAG2S,UAAyBC,EAA5B,qCACjB,kBAAC,IAAD,iBAAWA,EAAX,CAAiB3K,OAAQ,SAACvI,GAAD,MACgB,UAArCyG,aAAaC,QAAQ,YACnB,kBAACpG,EAAcN,GACf,kBAAC,IAAD,CAAU6G,GAAI,CACZsM,SAAU,SACVvU,MAAO,CAAEwU,KAAMpT,EAAMqT,kBCgClBC,OAxBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKjU,UAAU,oBACb,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkU,KAAK,SAASN,UAAW7T,IAChC,kBAAC,IAAD,CAAOmU,KAAK,YAAYN,UAAWzT,IACnC,kBAAC,IAAD,CAAO+T,KAAK,SAASN,UAAW5L,KAChC,kBAAC,IAAD,CAAOkM,KAAK,qBAAqBN,UAAWpF,KAC5C,kBAAC,IAAD,CAAO0F,KAAK,0BAA0BN,UAAWnI,KACjD,kBAAC,IAAD,CAAOyI,KAAK,gBAAgBN,UAAW9F,KACvC,kBAAC,GAAD,CAAcoG,KAAK,gBAAgBN,UAAWvG,KAC9C,kBAAC,IAAD,CAAO6G,KAAK,kBAAkBN,UAAWJ,KACzC,kBAAC,IAAD,CAAOU,KAAK,kBAAkBN,UAAWF,KACzC,kBAAC,IAAD,CAAOQ,KAAK,kBAAkBN,UAAWL,KACzC,kBAAC,IAAD,CAAOW,KAAK,IAAIN,UAAWjD,OAG/B,kBAAC,GAAD,CAAQvJ,aAAgBA,aAAaC,QAAQ,iBC9B/B4C,QACW,cAA7BkK,OAAOH,SAASI,UAEa,UAA7BD,OAAOH,SAASI,UAEhBD,OAAOH,SAASI,SAASC,MACvB,2DCTJC,IAASpL,OACT,kBAAC,IAAD,CAAU7J,MAAOA,GACd,kBAAC,GAAD,OACUuN,SAASC,eAAe,SDuH/B,kBAAmB0H,WACrBA,UAAUC,cAAcC,MAAMzV,MAAK,SAAA0V,GACjCA,EAAaC,kB","file":"static/js/main.69efabc7.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    items: [],\r\n    apiData: [],\r\n};\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD': {\r\n            return Object.assign({}, state, {\r\n                items: state.items.concat(action.payload)\r\n            });\r\n        }\r\n        case 'DATA-LOADED': {\r\n            return Object.assign({}, state, {\r\n                apiData: state.apiData.concat(action.finalData)\r\n            });\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nexport default function* watcherSaga() {\r\n    yield takeEvery('APICALL', workerFunction)\r\n}\r\nfunction* workerFunction() {\r\n    try {\r\n        const finalData = yield call(getAPIData);\r\n        //const finalResponse = yield finalData.json();\r\n        yield put({ type: 'DATA-LOADED', finalData });\r\n    }\r\n    catch (e) {\r\n        yield put({ type: 'DATA-ERROR', finalData: e });\r\n    }\r\n}\r\nfunction getAPIData() {\r\n    return fetch('https://jsonplaceholder.typicode.com/posts').then((response) =>\r\n        response.json()\r\n    );\r\n    // return fetch('https://jsonplaceholder.typicode.com/posts').then(function(response) {\r\n    // response.json();\r\n    // })\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers/reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport watcherSaga from '../sagas/saga';\r\n\r\nconst initializeMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(initializeMiddleware));\r\ninitializeMiddleware.run(watcherSaga);\r\nexport default store;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <section className=\"about_us_2 about_us_2_animated\">\r\n                <div className=\"about_text\">\r\n                    <p className=\"main anim animated\">about bulkcom shipping</p>\r\n                    <div className=\"pic_cont anim animated\">\r\n                    </div>\r\n                    <p className=\"sub anim4 animated\">WE'VE BUILT OUR REPUTATION ON EXCELLENCE IN SHIP CHARTERING BOTH VOYAGE AND TIME CHARTER, WITH A CONSTANT FOCUS ON SERVING OUR CUSTOMERS.<br />\r\n                        We are experts in planning, executing and handling any dry cargo movement in bulk across the globe.\r\n                        We have booked over 5Million MT of dry bulk cargo on all kinds of vessel ranging from handy to cape size with special focus on supramax category.<br />\r\n                        When trust us to charter vessels exclusively through us, you'll know that your shipments are in the hands of skilled, qualified professionals with decades of experience in shipping.<br /><br />\r\n                        Contact us today to discuss your current and future chartering needs. We have trained friendly staff to provide the best customer service in the industry.\r\n\r\n                        <br /><br /><b>WHY CHOOSE US?</b><br />\r\n                        WE AIM TO PROVIDE LEVERAGE TO YOUR BUSINESS BACKED BY OUR MARKET INFORMATION<br />\r\n                        Your freight is too important to trust to amateur and most important aspect for a trade deal to conclude. We deliver every time, and that's a promise.<br /><br />\r\n\r\n                        WE KNOW THE INS AND OUTS OF SHIPPING<br />\r\n                        The difference, in one word, is experience. Our team is fully capable to provide you the best service in industry.<br /><br />\r\n\r\n                        WE'RE NOT JUST A BROKER, WE'RE YOUR PARTNER<br />\r\n                        Shipping needs fluctuate, grow, and evolve in ways you might not be able to anticipate. We can help create not just a solution, but a entire shipping strategy.<br /><br />\r\n                        {/* <span className=\"more_btn\">\r\n                            more\r\n                        <img src=\"https://aegisuae.com/resources/img/arrow_down_white.svg\" alt=\"arrow\" className=\"arrow\" />\r\n                        </span> */}\r\n                        {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                        <span className=\"sub_more\">Our Trading efforts are currently focused on Bulk, Limestone, Dolomite, Gypsum, and Coal. We also have our own fleet of Chartered in tonnage and Dry Bulk Vessels to provide end to end solutions to our Clients.\r\n                        Our business endeavours tirelessly to create strong foundations of trust with all stake holders of the organisation.\r\n                        The company specializes in Value Addition with the supply chain. Our primary objective is to cater to and exceed our clients expectations in a timely and professional manner.\r\n                The Group is on the cusp of massive expansions and business growth and has been growing from strength to strength supported with the faith our customers, suppliers and employees repose on the organisation.</span>\r\n                    </p>\r\n                    {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link_2\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass Location extends Component {\r\n    static defaultProps = {\r\n        center: {\r\n          lat: 59.95,\r\n          lng: 30.33\r\n        },\r\n        zoom: 11\r\n      };\r\n      render() {\r\n        return (\r\n            <div>\r\n                <section className=\"about_us_2 about_us_2_animated\">\r\n                    <div className=\"about_text\">\r\n                    <div style={{ height: '100vh', width: '100%' }}>\r\n                            <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: 'AIzaSyAtqgKhqfCi91s3GL1SM5HEt9pfqQvnZDw' }}\r\n                            defaultCenter={this.props.center}\r\n                            defaultZoom={this.props.zoom}\r\n                            >\r\n                            <AnyReactComponent\r\n                                lat={59.955413}\r\n                                lng={30.337844}\r\n                                text=\"My Marker\"\r\n                            />\r\n                            </GoogleMapReact>\r\n                        </div>\r\n                    </div>\r\n                    </section>\r\n            </div>\r\n        )\r\n      }\r\n}\r\nexport default Location;","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nexport default function Spinner() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <CircularProgress color=\"primary\" />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst DisplaySelectedVesselDetails = props => {\r\n    var pairs = [];\r\n    const getDisplayKey = key => {\r\n        key = key.charAt(0).toUpperCase() + key.slice(1)\r\n        return key.replace(/([A-Z])/g, ' $1').trim()\r\n    }\r\n\r\n    for (var key in props.vesselDetails) {\r\n        pairs.push(\r\n            <tr>\r\n                <td>\r\n                    <label>\r\n                        {getDisplayKey(key)}\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    {props.vesselDetails[key]}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <table style={{marginTop:'5%'}}>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    {pairs}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplaySelectedVesselDetails","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\nimport Popup from \"reactjs-popup\";\r\nimport DisplaySelectedVesselDetails from './DisplaySelectedVesselDetails';\r\n\r\nclass ClientHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getAllVoyage();\r\n        this.state = {\r\n            vesselList: [],\r\n            vesselDetails: {\r\n                vesselName: '',\r\n                vesselSize: '',\r\n                cpDate: '',\r\n                loadPort: '',\r\n                dischargePoint: '',\r\n                cargo: '',\r\n                cargoIntake: '',\r\n                onwerName: ''\r\n            },\r\n            tableData: [],\r\n            performanceDetails: {},\r\n            isPeformancePage: false,\r\n            error: false,\r\n            userName: '',\r\n        }\r\n    }\r\n\r\n    getAllVoyage = async () => {\r\n        await axios.post('/voyageDetails/getAllVoyage', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: { 'companyName': this.props.companyName },\r\n        }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    vesselList: res.data.vesselList,\r\n                    companyName: this.props.companyName,\r\n                    error: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    error: true,\r\n                    companyName: this.props.companyName,\r\n                });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handlePerformanceClick = e => {\r\n        const { vesselList } = this.state;\r\n        const c = vesselList.find(m => m['_id'] === e.target.id);\r\n        console.log(c.vesselName);\r\n    }\r\n\r\n\r\n    handleVesselClick = e => {\r\n        const { vesselList } = this.state;\r\n        const c = vesselList.find(m => m['_id'] === e.target.id);\r\n        console.log(c.vesselName);\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case \"checkPerformance\":\r\n                val = <button style={{ color: \"blue\", textAlign: \"center\" }} id={rowId} type=\"button\" onClick={this.handlePerformanceClick}>Check Performance</button>;\r\n                break;\r\n            case \"vesselName\":\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div style={{ color: \"blue\" }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        let showData;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Fixture List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"vesselName\",\r\n                            label: \"Vessel Name\",\r\n                            colSize: \"50px\",\r\n                            dataType: ''\r\n                        },\r\n                        {\r\n                            id: \"cpDate\",\r\n                            label: \"CP Date\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"checkPerformance\",\r\n                            label: \"Performance\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList.map(({ vesselName, cpDate, _id }) => ({ vesselName, cpDate, id: _id, checkPerformance: true }))\r\n                    ],\r\n                }\r\n            }\r\n\r\n            const ourCount = {};\r\n            vesselList.forEach(v => {\r\n                if (!ourCount[v.cargo]) {\r\n                    ourCount[v.cargo] = 0;\r\n                }\r\n                ourCount[v.cargo] += parseInt(v.cargoIntake);\r\n            });\r\n\r\n\r\n            showData = < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                <div style={{ marginTop: '15%', marginLeft: '18%' }}>\r\n                    <DisplaySelectedVesselDetails vesselDetails={ourCount} />\r\n                </div>\r\n            </div >\r\n        } else {\r\n            showData = <div style={{ marginTop: '15%' }}> Oops!! There are no business details for you.</div>\r\n        }\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n            <span>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                {showData}\r\n            </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        let vesselDetails = vesselList.find(m => m['_id'] === rowId);\r\n        vesselDetails = (({ vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }) => (\r\n            { vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }))(vesselDetails);\r\n\r\n        const content = <div>\r\n            <Popup trigger={<a id={rowId} style={{ color: \"blue\", textAlign: \"center\", textDecoration: 'underline', cursor: 'pointer' }}> {cellVal} </a>}\r\n                modal closeOnDocumentClick >\r\n                <div className=\"content\">\r\n                    <DisplaySelectedVesselDetails vesselDetails={vesselDetails} />\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default ClientHome;\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass AdminHome extends Component {\r\n\r\n    history;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"about_us_2 about_us_2_animated\">\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/addNewClient\">Add New Client </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/addNewVessel\">Add New Vessel</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/fillVoyageDetails\">Fill Voyage Details </Link>\r\n                    <Link style={{ width: '300px', height: '40px' }} to=\"/fillPerformanceDetails\">Fill Performance Details</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminHome);","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass ManagerHome extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"about_us_2 about_us_2_animated\">\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/viewAllClients\">View All Clients </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/viewAllVessels\">View All Vessels</Link>\r\n                    {/* <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/fillVoyageDetails\">Fill Voyage Details </Link>\r\n                    <Link style={{ width: '300px', height: '40px' }} to=\"/fillPerformanceDetails\">Fill Performance Details</Link> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default withRouter(ManagerHome);","import React from 'react';\r\nimport LoginHome from '../Login/LoginHome';\r\nimport ClientHome from '../Client/ClientHome';\r\nimport AdminHome from '../Admin/AdminHome';\r\nimport ManagerHome from '../Manager/ManagerHome';\r\n\r\nfunction Page(props) {\r\n    const { displayName, isLoggedIn, role, companyName, userName } = props.state;\r\n    if (isLoggedIn) {\r\n        switch (role.toLowerCase()) {\r\n            case 'admin':\r\n                return <AdminHome companyName={companyName} displayName={displayName} userName={userName} />;\r\n            case 'manager':\r\n                return <ManagerHome companyName={companyName} displayName={displayName} userName={userName} />;\r\n            case 'client':\r\n                return <ClientHome companyName={companyName} displayName={displayName} userName={userName} />;\r\n            default:\r\n                return <LoginHome />;\r\n        }\r\n    }\r\n    return <LoginHome />;\r\n}\r\nexport default Page","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport axios from 'axios';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../Others/Page'\r\n\r\nexport default class LoginHome extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: localStorage.getItem('authToken') ? true : false,\r\n        role: localStorage.getItem('userRole') ? localStorage.getItem('userRole') : '',\r\n        errorMsg: '',\r\n        error: localStorage.getItem('authToken') ? false : true\r\n    }\r\n\r\n    // handleLogoutClick = (e) => {\r\n    //     localStorage.setItem('authToken', '');\r\n    //     localStorage.setItem('userRole', '');\r\n    //     localStorage.setItem('userName', '');\r\n    //     this.setState({\r\n    //         isLoggedIn: false,\r\n    //         role: '',\r\n    //         errorMsg: '',\r\n    //         error: false,\r\n    //         userName: '',\r\n    //         companyName: '',\r\n    //         displayName: ''\r\n    //     });\r\n    // }\r\n\r\n    _handleSubmit = async ({\r\n        username,\r\n        password,\r\n        setSubmitting,\r\n        resetForm,\r\n    }) => {\r\n        this.setState(() => ({\r\n            isLoggedIn: false,\r\n            error: false,\r\n            role: '',\r\n        }));\r\n        let resp = (await axios.post('/userDetails/login', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data: {\r\n                username,\r\n                password,\r\n            }\r\n        }));\r\n\r\n        resp = resp.data;\r\n        setSubmitting(false);\r\n        if (!resp.status) {\r\n            this.setState(() => ({\r\n                isLoggedIn: false,\r\n                errorMsg: resp.err,\r\n                error: true,\r\n                role: '',\r\n            }))\r\n            return;\r\n        } else {\r\n            this.setState(() => ({\r\n                isLoggedIn: true,\r\n                error: false,\r\n                errorMsg: '',\r\n                userName: resp.userName,\r\n                companyName: resp.companyName,\r\n                displayName: resp.displayName,\r\n                role: resp.role,\r\n            }))\r\n            localStorage.setItem('authToken', resp.token);\r\n            localStorage.setItem('userRole', resp.role);\r\n            localStorage.setItem('displayName', resp.displayName);\r\n        }\r\n\r\n        resetForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                }}\r\n                validationSchema={object().shape({\r\n                    username: string().required('Please enter a valid email address.'),\r\n                    password: string().required('Password is required'),\r\n                })}\r\n                onSubmit={(\r\n                    { username, password },\r\n                    { setSubmitting, resetForm }\r\n                ) =>\r\n                    this._handleSubmit({\r\n                        username,\r\n                        password,\r\n                        setSubmitting,\r\n                        resetForm,\r\n                    })\r\n                }\r\n                render={props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isValid,\r\n                        isSubmitting,\r\n                    } = props\r\n\r\n                    const { error } = this.state;\r\n                    const authToken = localStorage.getItem('authToken');\r\n                    const userRole = localStorage.getItem('userRole');\r\n                    let showData;\r\n                    if (isSubmitting) {\r\n                        showData = <Spinner />\r\n                    } else if (userRole && !error) {\r\n                        showData = <div>\r\n                            <Page state={this.state} />\r\n                            {/* <LogoutButton onClick={this.handleLogoutClick} ></LogoutButton> */}\r\n                        </div>\r\n                    } else {\r\n                        showData = <div className=\"ForgotPasswordForm\">\r\n                            <Typography variant=\"title\" style={{ margin: '16px 0' }}> Login </Typography>\r\n                            <Paper className=\"form form--wrapper\" elevation={10}>\r\n                                <form className=\"form\" onSubmit={handleSubmit}>\r\n                                    <FormControl fullWidth margin=\"dense\">\r\n                                        <InputLabel htmlFor=\"username\" error={Boolean(touched.username && errors.username)}>\r\n                                            {'Enter your username'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id=\"username\"\r\n                                            name=\"username\"\r\n                                            type=\"email\"\r\n                                            required\r\n                                            autoComplete=\"off\"\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.username && errors.username)} />\r\n                                        <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                                            {touched.username && errors.username ? errors.username : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        fullWidth\r\n                                        margin=\"dense\"\r\n                                        error={Boolean(touched.password && errors.password)}>\r\n                                        <InputLabel htmlFor=\"password\" error={Boolean(touched.password && errors.password)}>\r\n                                            {'Enter your password'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            type=\"password\"\r\n                                            autoComplete=\"off\"\r\n                                            value={values.password}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.password && errors.password)}\r\n                                        />\r\n                                        <FormHelperText error={Boolean(touched.password && errors.password)}>\r\n                                            {touched.password && errors.password ? errors.password : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormHelperText error={Boolean(this.state.error)}>\r\n                                        {this.state.error ? this.state.errorMsg : ''}\r\n                                    </FormHelperText>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"raised\"\r\n                                        color=\"primary\"\r\n                                        disabled={Boolean(!isValid || isSubmitting)}\r\n                                        style={{ margin: '16px' }}>\r\n                                        {'Login'}\r\n                                    </Button>\r\n                                    <Link style={{ color: 'black' }} to=\"/forgotPassword\">Forgot Password !!</Link>\r\n                                </form>\r\n                            </Paper>\r\n                        </div>\r\n                    }\r\n                    return (\r\n                        showData\r\n                    )\r\n                }\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst ShowDropDownAdmin = props => {\r\n    const clients = props.state.allClients.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const vessels = props.state.allVslForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const dates = props.state.allCpDatesForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    return (\r\n        <div style={{ display: 'flex', marginTop: '2%' }}>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={clients.filter(({ value }) => value === props.state.selectedClient)}\r\n                    onChange={props.handleClientListChange}\r\n                    options={clients}\r\n                    placeholder='Select Client'\r\n                    isDisabled={!clients || !clients.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={vessels.filter(({ value }) => value === props.state.selectedVessel)}\r\n                    onChange={props.handleVesselListChange}\r\n                    options={vessels}\r\n                    placeholder='Select Vessel'\r\n                    isDisabled={!vessels || !vessels.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={dates.filter(({ value }) => value === props.state.selectedCpDate)}\r\n                    onChange={props.handleCpDateChange}\r\n                    options={dates}\r\n                    placeholder='Select CP Date'\r\n                    isDisabled={!dates || !dates.length}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowDropDownAdmin","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport ShowDropDownAdmin from './ShowDropDownAdmin';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nclass FillPerformanceDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getAllVessels();\r\n    this.handleVesselListChange = this.handleVesselListChange.bind(this);\r\n    this.handleClientListChange = this.handleClientListChange.bind(this);\r\n    this.handleCpDateChange = this.handleCpDateChange.bind(this);\r\n    this.handlePerformanceDetailSubmit = this.handlePerformanceDetailSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.state = {\r\n      vesselList: [],\r\n      selectedClient: 'SelectClient',\r\n      selectedVessel: 'SelectVessel',\r\n      selectedCpDate: 'SelectCpDate',\r\n      allClients: [],\r\n      allVslForSelectedClient: [],\r\n      allCpDatesForSelectedClient: [],\r\n      error: false,\r\n      performanceDetails: {\r\n\r\n      },\r\n    }\r\n  }\r\n\r\n  handlePerformanceDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      ...this.state,\r\n      performanceDetails: {\r\n        ...this.state.performanceDetails,\r\n        [name]: value.trim(),\r\n      },\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  getAllVessels = async () => {\r\n    await axios.post('/performanceDetails/getAllVessels', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        'isDetailsFilled': false,\r\n      }\r\n    }).then(res => {\r\n      if (res.data.status) {\r\n        const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n        this.setState({\r\n          vesselList: res.data.vesselList,\r\n          allClients: allClients,\r\n          error: false,\r\n        });\r\n      } else {\r\n        this.setState({ error: true });\r\n        return;\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCpDateChange = e => {\r\n    const { vesselList, selectedVessel } = this.state;\r\n    let vesselDetails = vesselList.find(m => m.vesselName === selectedVessel && m.cpDate === e.value);\r\n    vesselDetails = (({ chartererName, vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }) => (\r\n      { chartererName, vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }))(vesselDetails);\r\n    this.setState({\r\n      vesselDetails: vesselDetails,\r\n      selectedCpDate: e.value,\r\n      isPeformancePage: false,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleVesselListChange = async e => {\r\n    const { selectedVessel, vesselList } = this.state;\r\n    if (e.value === selectedVessel) {\r\n      return;\r\n    }\r\n\r\n    if (e.value !== selectedVessel) {\r\n      this.setState({ selectedCpDate: 'SelectCpDate' });\r\n    }\r\n\r\n    const allCpDates = vesselList.filter(f => f.vesselName === e.value).map(m => m.cpDate);\r\n    if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n      this.setState({\r\n        allCpDatesForSelectedClient: [],\r\n        selectedVessel: e.value,\r\n        selectedCpDate: 'SelectCpDate',\r\n        isPeformancePage: false,\r\n        error: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allCpDatesForSelectedClient: allCpDates,\r\n      selectedVessel: e.value,\r\n      selectedCpDate: 'SelectCpDate',\r\n      isPeformancePage: false,\r\n      error: false,\r\n    });\r\n  }\r\n\r\n  handleClientListChange = e => {\r\n    const { selectedClient, vesselList } = this.state;\r\n    if (e.value === selectedClient) {\r\n      return;\r\n    }\r\n\r\n    if (e.value !== selectedClient) {\r\n      this.setState({ selectedCpDate: 'SelectCpDate', selectedVessel: 'SelectVessel' });\r\n    }\r\n\r\n    const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.value).map(m => m.vesselName))];\r\n    if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n      this.setState({\r\n        allVslForSelectedClient: [],\r\n        selectedClient: e.value,\r\n        selectedVessel: 'SelectVessel',\r\n        selectedCpDate: 'SelectCpDate',\r\n        error: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allVslForSelectedClient: allVessels,\r\n      selectedClient: e.value,\r\n      selectedVessel: 'SelectVessel',\r\n      selectedCpDate: 'SelectCpDate',\r\n      error: false\r\n    });\r\n  }\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handlePerformanceDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { chartererName, vesselName, cpDate } = this.state.performanceDetails;\r\n\r\n    if (!chartererName || !vesselName || !cpDate.toString()) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = (await axios.post('/performanceDetails/insertPerformanceData', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        ...this.state.performanceDetails,\r\n        isDetailsFilled: true,\r\n      }\r\n    }));\r\n\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('performanceDetailsForm').reset();\r\n      this.setState({\r\n        ...this.localState.vesselDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! Performance Details saved for = ' + this.state.selectedClient\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedCpDate } = this.state;\r\n    let showTable;\r\n    if (selectedCpDate !== 'SelectCpDate') {\r\n      showTable = <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <form id='performanceDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Original Value</th>\r\n                <th>Actual Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Number of Days *\r\n                  </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"NumberOfDaysOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"NumberOfDaysAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Consumption (MT) *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionIFOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionIFOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionMDOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionMDOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Price *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceIFOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceIFOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DWTBunkerPriceMDOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceMDOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LoadPortDAOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LoadPortDAAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DischargePortDAOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DischargePortDAAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    ILOHC and CVE\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"ILOHCandCVEOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"ILOHCandCVEAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Survey Cost Bends *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerSurveyCostBendsOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerSurveyCostBendsAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    WX Routing Expense *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"WXRoutingExpenseOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"WXRoutingExpenseAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"PNIInsuranceOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"PNIInsuranceAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Despatch Paid\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DespatchPaidOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DespatchPaidAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Other Expense\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"OtherExpenseOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"OtherExpenseAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    HRA/WAR Risk\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"HRA_WARRiskOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"HRA_WARRiskAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Demmurrage Received\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DemmurrageReceivedOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DemmurrageReceivedAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Quantity (MT)\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"CargoQuantityOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"CargoQuantityAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    }\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <h2>Fill Performance Details</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <ShowDropDownAdmin\r\n          handleClientListChange={this.handleClientListChange}\r\n          handleVesselListChange={this.handleVesselListChange}\r\n          handleCpDateChange={this.handleCpDateChange}\r\n          state={this.state}\r\n        />\r\n        <br />\r\n        {showTable}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FillPerformanceDetails;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport '../../css/Admin.css';\r\nimport Select from 'react-select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nclass AddNewClient extends Component {\r\n\r\n  userDetails = {\r\n    userName: '',\r\n    companyName: '',\r\n    displayName: '',\r\n    password: '',\r\n    role: '',\r\n    clientType: '',\r\n    success: true,\r\n    errorMsg: ''\r\n  };\r\n\r\n  roles = [{ label: \"Admin\", value: \"Admin\" }, { label: \"Client\", value: \"Client\" }, { label: \"Manager\", value: \"Manager\" }];\r\n  clientType = [{ label: \"Owner\", value: \"Owner\" }, { label: \"Charterer\", value: \"Charterer\" }];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.userDetails };\r\n    this.handleUserDetailsChange = this.handleUserDetailsChange.bind(this);\r\n    this.handleRoleChange = this.handleRoleChange.bind(this);\r\n    this.handleClientTypeChange = this.handleClientTypeChange.bind(this);\r\n    this.handleAddNewUserSubmit = this.handleAddNewUserSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleUserDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  handleRoleChange = e => {\r\n    this.setState({\r\n      role: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  handleClientTypeChange = e => {\r\n    this.setState({\r\n      clientType: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  async handleAddNewUserSubmit(event) {\r\n    event.preventDefault();\r\n    const { userName, password, displayName, companyName, role, clientType } = this.state;\r\n    if (!userName || !displayName || !password || !role || !companyName || (role === 'Client' && !clientType)) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!clientType) {\r\n      this.state.clientType = role;\r\n    }\r\n\r\n    let data = (await axios.post('/userDetails/insertUserDetails', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        ...this.state\r\n      }\r\n    }));\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      if (data.data.status.errmsg.indexOf('duplicate key error') >= 0) {\r\n        data.data.status.errmsg = 'Username already exits.'\r\n      }\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('userDetailsForm').reset();\r\n      this.setState({\r\n        ...this.userDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New user created = ' + userName\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const role = this.state.role;\r\n    let tableData;\r\n    if (role === 'Client') {\r\n      tableData = <tr>\r\n        <td>\r\n          <label>\r\n            Client Type *\r\n        </label>\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.clientType.filter(({ value }) => value === this.state.clientType)}\r\n            onChange={this.handleClientTypeChange}\r\n            options={this.clientType}\r\n            placeholder='Select Client Type'\r\n            name=\"clientType\"\r\n          />\r\n        </td>\r\n      </tr>\r\n    }\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New User</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='userDetailsForm' onSubmit={this.handleAddNewUserSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    User Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"email\" name=\"userName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Company Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"companyName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Display Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"displayName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Password *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"password\" name=\"password\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Role *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Select\r\n                      value={this.roles.filter(({ value }) => value === this.state.role)}\r\n                      onChange={this.handleRoleChange}\r\n                      options={this.roles}\r\n                      placeholder='Select Role'\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              {tableData}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewClient;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../../css/Admin.css';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass AddNewVessel extends Component {\r\n\r\n  vesselDetails = {\r\n    vesselName: '',\r\n    IMO: '',\r\n    DWT: '',\r\n    built: '',\r\n    LOA: '',\r\n    beam: '',\r\n    cranes: '',\r\n    grabs: '',\r\n    success: true,\r\n    errorMsg: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.vesselDetails };\r\n    this.handleVesselDetailsChange = this.handleVesselDetailsChange.bind(this);\r\n    this.handleAddNewVesselSubmit = this.handleAddNewVesselSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleVesselDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handleAddNewVesselSubmit(event) {\r\n    event.preventDefault();\r\n    const { vesselName, IMO, DWT } = this.state;\r\n    if (!vesselName || !DWT || !IMO) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = (await axios.post('/vesselDetails/insertVesselDetails', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        ...this.state\r\n      }\r\n    }));\r\n\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.vesselDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New vessel created = ' + vesselName,\r\n      });\r\n      document.getElementById('vesselDetailsForm').reset();\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New Vessel</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='vesselDetailsForm' onSubmit={this.handleAddNewVesselSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"vesselName\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IMO *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"IMO\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    DWT *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DWT\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Built\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"built\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    LOA\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LOA\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Beam\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"beam\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cranes\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cranes\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grabs\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"grabs\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewVessel;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport '../../css/Admin.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\n\r\nclass FillVoyageDetails extends Component {\r\n\r\n  localState = {\r\n    vesselDetails: {\r\n      chartererName: '',\r\n      vesselName: '',\r\n      vesselSize: '',\r\n      cpDate: new Date(),\r\n      loadPort: '',\r\n      cargo: '',\r\n      cargoIntake: '',\r\n      onwerName: '',\r\n      Shipper: '',\r\n      loadPortAgent: '',\r\n      dischargePoint: '',\r\n      receiver: '',\r\n      onHireSurveyor: '',\r\n      offHireSurveyor: '',\r\n      bunkerSupplier: '',\r\n      bunkerTrader: '',\r\n      pniInsurance: '',\r\n      weatherRoutingCompany: '',\r\n    },\r\n    clientList: [],\r\n    vesselList: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.localState };\r\n    this.handleAdminChange = this.handleAdminChange.bind(this);\r\n    this.handleVesselDetailSubmit = this.handleVesselDetailSubmit.bind(this);\r\n    this.handleChartererNameChange = this.handleChartererNameChange.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAllClients();\r\n    this.getAllVessels();\r\n  }\r\n\r\n  handleChartererNameChange = e => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        chartererName: e.value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleVesselNameChange = e => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        vesselName: e.value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleAdminChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        [name]: value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDateFieldChange = (V) => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        cpDate: V\r\n      }\r\n    })\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  getAllClients = async () => {\r\n    await axios.post('/userDetails/getAllClients', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n    }).then(res => {\r\n      if (res.data.status) {\r\n        const cl = res.data.clientList.sort().map(v => ({\r\n          label: v,\r\n          value: v\r\n        }));\r\n        this.setState({\r\n          clientList: cl,\r\n          error: false,\r\n        });\r\n      } else {\r\n        this.setState({ error: true });\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllVessels = async () => {\r\n    await axios.post('/vesselDetails/getAllVessels', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n    }).then(res => {\r\n      if (res.data.status) {\r\n        const vl = res.data.vesselList.map(m => m.vesselName + '_' + m.DWT).sort().map(v => ({\r\n          label: v,\r\n          value: v\r\n        }));\r\n        this.setState({\r\n          vesselList: vl,\r\n          error: false,\r\n        });\r\n\r\n      } else {\r\n        this.setState({ error: true });\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  async handleVesselDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { chartererName, vesselName, cpDate } = this.state.vesselDetails;\r\n    if (!chartererName || !vesselName || !cpDate.toString()) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = (await axios.post('/performanceDetails/insertPerformanceData', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        cpDate: this.state.vesselDetails.cpDate,\r\n        vesselName: this.state.vesselDetails.vesselName,\r\n        chartererName: this.state.vesselDetails.chartererName,\r\n        isDetailsFilled: false,\r\n      }\r\n    }));\r\n\r\n    data = (await axios.post('/voyageDetails/insertVoyageData', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        ...this.state.vesselDetails\r\n      }\r\n    }));\r\n\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.localState.vesselDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! Voyage Details saved for = ' + chartererName\r\n      });\r\n      document.getElementById('voyageDetailsForm').reset();\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { clientList, vesselList } = this.state;\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Fill Voyage Details</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='voyageDetailsForm' onSubmit={this.handleVesselDetailSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Charterer Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={clientList.filter(({ value }) => value === this.state.vesselDetails.chartererName)}\r\n                    onChange={this.handleChartererNameChange}\r\n                    options={clientList}\r\n                    placeholder='Select Charterer Name'\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={vesselList.filter(({ value }) => value === this.state.vesselDetails.vesselName)}\r\n                    onChange={this.handleVesselNameChange}\r\n                    options={vesselList}\r\n                    placeholder='Select Vessel Name'\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Size\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"vesselSize\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    CP Date *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <DatePicker selected={this.state.vesselDetails.cpDate} onChange={this.handleDateFieldChange} value={this.state.vesselDetails.cpDate} required autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"loadPort\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Point\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"dischargePoint\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cargo\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Intake\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cargoIntake\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Owner Name\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"onwerName\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Shipper\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"Shipper\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"loadPortAgent\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"dischargePortAgent\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Receiver\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"receiver\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    On Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"onHireSurveyor\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Off Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"offHireSurveyor\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Supplier\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"bunkerSupplier\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Trader\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"bunkerTrader\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"pniInsurance\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Weather Routing Company\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"weatherRoutingCompany\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FillVoyageDetails;","import React from 'react';\r\nimport { Zoom } from 'react-slideshow-image';\r\n\r\nconst images = [\r\n  '/assests/images/ship1.jpg',\r\n  '/assests/images/ship2.jpg',\r\n  '/assests/images/ship3.jpg',\r\n];\r\n\r\nconst zoomOutProperties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n  scale: 2,\r\n  arrows: true\r\n}\r\n\r\nconst SlideShow = () => {\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <Zoom {...zoomOutProperties}>\r\n        {\r\n          images.map((each, index) => <img key={index} style={{ width: \"100%\" }} src={each} alt={each} />)\r\n        }\r\n      </Zoom>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SlideShow;","import React from 'react';\r\nimport Slideshow from './SlideShow';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"\">\r\n            <h2>Welcome to Bulkcom Shipping</h2>\r\n            <Slideshow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.toggleHeaderState =this.toggleHeaderState.bind(this);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n    this.state = {\r\n      showHeader:props.toggleState,\r\n    }\r\n  }\r\n  handleClick = ()=> {\r\n    this.setState({\r\n      showHeader:!this.state.showHeader,\r\n    })\r\n  }\r\n  toggleHeaderState() {\r\n    this.setState({\r\n      showHeader:false,\r\n    })\r\n  }\r\n  logoutAndToggleState() {\r\n    localStorage.setItem('authToken','');\r\n    localStorage.setItem('userRole','');\r\n    localStorage.setItem('displayName','');\r\n    this.setState({\r\n      showHeader:false,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={this.state.showHeader ? 'menu_open menu':'menu'}  id=\"main_menu\">\r\n      <div className=\"header_right\">\r\n                      <div className=\"explore\" id=\"menu_label\">explore</div>\r\n                      <img src=\"https://aegisuae.com/resources/img/arrow_white.svg\" alt=\"arrow\" className=\"arrow\"/>\r\n                      <button className=\"js-toggle-nav c-btn-nav -inited\" id=\"menu_button\" onClick={this.handleClick} >\r\n                          <div className=\"c-btn-nav_burger\">\r\n                              <span className=\"c-burger_top\"></span>\r\n                              <span className=\"c-burger_middle\"></span>\r\n                              <span className=\"c-burger_bottom\"></span>\r\n                              <div className=\"c-close-burger_top\"></div>\r\n                              <div className=\"c-close-burger_bottom\"></div>\r\n                          </div>\r\n                      </button>\r\n      </div>\r\n      <div className={this.state.showHeader ? 'left_menu_open left_menu':'left_menu'} id=\"left_menu\" scroll=\"no\">\r\n          <ul className ={this.state.showHeader ? 'opened main_nav':'main_nav'} id=\"navigation\">\r\n          <li>\r\n          <Link className=\"\" to=\"/\" onClick ={this.toggleHeaderState}>\r\n              Home\r\n              <span className=\"menu_line\"></span>\r\n          </Link>\r\n          </li>\r\n          <li>\r\n          <Link className=\"\" to=\"/about\" onClick ={this.toggleHeaderState}>\r\n            About\r\n            <span className=\"menu_line\"></span>\r\n          </Link>\r\n          </li>\r\n          <li>\r\n            <Link className=\"\" to=\"/location\" onClick ={this.toggleHeaderState}>\r\n            Locations\r\n            <span className=\"menu_line\"></span>\r\n          </Link>\r\n          </li>\r\n          {localStorage.getItem('authToken') ? (\r\n             <li>\r\n             <Link className=\"\" to=\"/login\" onClick ={this.logoutAndToggleState}>\r\n             Logout\r\n             <span className=\"menu_line\"></span>\r\n           </Link>\r\n           </li>\r\n          ) : (\r\n            <li>\r\n              <Link className=\"\" to=\"/login\" onClick ={this.toggleHeaderState}>\r\n              Login\r\n              <span className=\"menu_line\"></span>\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\nexport default Header;","import React,{Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n  }\r\n  logoutAndToggleState() {\r\n    localStorage.setItem('authToken','');\r\n    localStorage.setItem('userRole','');\r\n  }\r\n  render() {\r\n    return (\r\n      <footer className=\"navbar navbar-dark bg-primary fixed-top\">\r\n        <div className=\"bottom_footer\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Home\r\n            </Link>\r\n        <Link className=\"navbar-brand\" to=\"/about\">\r\n          About\r\n            </Link>\r\n        <Link className=\"navbar-brand\" to=\"/location\">\r\n          Locations\r\n            </Link>\r\n            {localStorage.getItem('authToken') ? (\r\n               \r\n               <Link className=\"navbar-brand\" to=\"/login\" onClick ={this.logoutAndToggleState}>\r\n               Logout\r\n             </Link>\r\n             \r\n            ) : (\r\n              \r\n                <Link className=\"navbar-brand\" to=\"/login\">\r\n                Login\r\n                </Link>\r\n              \r\n            )}\r\n            </div>\r\n      </footer>\r\n  \r\n    )\r\n  }\r\n  \r\n}\r\nexport default Footer;","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem, getApiActionCal } from '../action/action';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addItem: item => {\r\n            dispatch(addItem(item))\r\n        },\r\n        getApiCallData: () => {\r\n            dispatch(getApiActionCal())\r\n        }\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        apiData: state.apiData\r\n    };\r\n}\r\n\r\nclass FirstComponentStateFul extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 1,\r\n            items: ['bunty', 'babli'],\r\n            apiData: []\r\n        }\r\n        this.itemList = '';\r\n        this.incrementCounter = this.incrementCounter.bind(this);\r\n        this.addItemTo = this.addItemTo.bind(this);\r\n        this.addItems = this.addItems.bind(this);\r\n        this.getApiCall = this.getApiCall.bind(this);\r\n    }\r\n    addItemTo(event) {\r\n        this.itemList = event.target.value;\r\n    }\r\n    addItems() {\r\n        this.props.addItem(this.itemList)\r\n    }\r\n    incrementCounter() {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n\r\n    }\r\n    getApiCall() {\r\n        this.props.getApiCallData();\r\n    }\r\n    componentDidUpdate() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    componentDidMount() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>you clicked it {this.state.count} times</p>\r\n                <button onClick={this.incrementCounter}></button>\r\n                <input type=\"text\" onChange={this.addItemTo} />\r\n                <button onClick={this.addItems}></button>\r\n                <ul>\r\n                    {\r\n                        this.props.items.map(item =>\r\n                            <li key={item}>{item}</li>)\r\n                    }\r\n\r\n                </ul>\r\n                <button onClick={this.getApiCall}>get API call</button>\r\n                <ul>\r\n                    {\r\n                        this.props.apiData.map(item =>\r\n                            <li key={item.id}>{item.title}</li>)\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Form = connect(mapStatetoProps, mapDispatchToProps)(FirstComponentStateFul)\r\nexport default Form;","export function addItem(payload) {\r\n    return {\r\n        type: 'ADD',\r\n        payload\r\n    }\r\n}\r\nexport function getApiActionCal() {\r\n    return {\r\n        type: 'APICALL'\r\n    }\r\n}\r\nexport function getDataLoaded(payload) {\r\n    return {\r\n        type: 'DATA-LOADED',\r\n        payload\r\n    }\r\n}\r\nexport function getDataError() {\r\n    return {\r\n        type: 'DATA-ERROR'\r\n    }\r\n}","import React from 'react'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nexport default function Alert({\r\n  handleClose,\r\n  handleSubmit,\r\n  isOpen,\r\n  hasTwoButtons = false,\r\n  submitButtonText,\r\n  title,\r\n  text,\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      transition={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{text}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {hasTwoButtons ? (\r\n          <Button onClick={handleClose} variant=\"raised\" color=\"primary\">\r\n            {'CANCEL'}\r\n          </Button>\r\n        ) : null}\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          {submitButtonText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, ref, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Alert from '../Others/Alert'\r\nimport axios from 'axios';\r\n\r\nexport default class FormPasswordReset extends Component {\r\n\r\n  state = {\r\n    passChangeSuccess: false,\r\n    user: this.props.username,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _renderModal = () => {\r\n    const onClick = () => {\r\n      this.setState(() => ({ passChangeSuccess: false }))\r\n    }\r\n\r\n    return (\r\n      <Alert\r\n        isOpen={this.state.passChangeSuccess}\r\n        onClose={this._handleClose}\r\n        handleSubmit={onClick}\r\n        title=\"Password Reset\"\r\n        text=\"Your password was changed successfully\"\r\n        submitButtonText=\"Done\"\r\n      />\r\n    )\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    confirmPass,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    let resp = (await axios.post('/userDetails/updatePassword', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        user: this.state.user,\r\n        confirmPass,\r\n      }\r\n    }));\r\n\r\n    resp = resp.data;\r\n    setSubmitting(false);\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n      }));\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        passChangeSuccess: true,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newPass: '',\r\n          confirmPass: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          newPass: string().required('New password is required'),\r\n          confirmPass: string()\r\n            .oneOf([ref('newPass')], 'Passwords do not match')\r\n            .required('Password is required'),\r\n        })}\r\n        onSubmit={(\r\n          { newPass, confirmPass },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            newPass,\r\n            confirmPass,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n          return isSubmitting ? (\r\n            <Spinner />\r\n          ) : (\r\n              <Paper className=\"form form--wrapper\" elevation={10}>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin=\"dense\" error={Boolean(touched.newPass && errors.newPass)}>\r\n                    <InputLabel htmlFor=\"password-new\" error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {'New Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"password-new\"\r\n                      name=\"newPass\"\r\n                      type=\"password\"\r\n                      autoComplete=\"off\"\r\n                      value={values.newPass}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.newPass && errors.newPass)} />\r\n                    <FormHelperText error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {touched.newPass && errors.newPass ? errors.newPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl fullWidth margin=\"dense\" error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                    <InputLabel htmlFor=\"password-confirm\" error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {'Confirm Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"password-confirm\"\r\n                      name=\"confirmPass\"\r\n                      type=\"password\"\r\n                      value={values.confirmPass}\r\n                      autoComplete=\"off\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.confirmPass && errors.confirmPass)} />\r\n                    <FormHelperText error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {touched.confirmPass && errors.confirmPass ? errors.confirmPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"raised\"\r\n                    color=\"primary\"\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }} >\r\n                    {'Reset Password'}\r\n                  </Button>\r\n                </form>\r\n                {this._renderModal()}\r\n              </Paper>\r\n            )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport axios from 'axios';\r\nimport FormPasswordReset from './FormPasswordReset';\r\nimport Typography from '@material-ui/core/Typography'\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    passChangeSuccess: false,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    username,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    let resp = (await axios.post('/userDetails/checkUsername', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: {\r\n        'userName': username,\r\n      }\r\n    }));\r\n    setSubmitting(false);\r\n    resp = resp.data;\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n        error: true,\r\n        errorMsg: 'Username not found'\r\n      }))\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        username,\r\n        passChangeSuccess: true,\r\n        error: false,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          username: string().required('Please enter a valid email address.'),\r\n        })}\r\n        onSubmit={(\r\n          { username },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            username,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n\r\n          let showData;\r\n          if (isSubmitting) {\r\n            showData = <Spinner />\r\n          } else if (this.state.passChangeSuccess) {\r\n            showData = <div className=\"ForgotPasswordForm\">\r\n              <Typography variant=\"title\" style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <FormPasswordReset username={this.state.username} />\r\n            </div>\r\n          } else {\r\n            showData = <div className=\"ForgotPasswordForm\">\r\n              <Typography variant=\"title\" style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <Paper className=\"form form--wrapper\" elevation={10}>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin=\"dense\">\r\n                    <InputLabel\r\n                      htmlFor=\"username\"\r\n                      error={Boolean(touched.username && errors.username)}>\r\n                      {'Enter your username'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"username\"\r\n                      name=\"username\"\r\n                      type=\"email\"\r\n                      autoComplete=\"off\"\r\n                      value={values.username}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.username && errors.username)}\r\n                    />\r\n                    <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                      {touched.username && errors.username ? errors.username : ''}\r\n                    </FormHelperText>\r\n                    <FormHelperText error={Boolean(this.state.error)}>\r\n                      {this.state.error ? this.state.errorMsg : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"raised\"\r\n                    color=\"primary\"\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }}>\r\n                    {'Check Username'}\r\n                  </Button>\r\n                </form>\r\n              </Paper>\r\n            </div>\r\n          }\r\n          return (\r\n            showData\r\n          )\r\n        }\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\n\r\nclass ViewAllVessels extends Component {\r\n\r\n    localState = {\r\n        vesselList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.getAllVessels();\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    getAllVessels = async () => {\r\n        await axios.post('/vesselDetails/getAllVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    vesselList: res.data.vesselList,\r\n                    error: false,\r\n                });\r\n\r\n            } else {\r\n                this.setState({ error: true });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Vessel List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                    canClick: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"vesselName\",\r\n                            label: \"Vessel Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"IMO\",\r\n                            label: \"IMO\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"DWT\",\r\n                            label: \"DWT\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"built\",\r\n                            label: \"Built\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"LOA\",\r\n                            label: \"LOA\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"beam\",\r\n                            label: \"Beam\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"cranes\",\r\n                            label: \"cranes\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"grabs\",\r\n                            label: \"grabs\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList\r\n                    ],\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllVessels;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\n\r\nclass ViewAllClients extends Component {\r\n\r\n    localState = {\r\n        clientList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.getAllClients();\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    getAllClients = async () => {\r\n        await axios.post('/userDetails/getAllClientDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    clientList: res.data.clientList,\r\n                    error: false,\r\n                });\r\n            } else {\r\n                this.setState({ error: true });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n        let { clientList } = this.state;\r\n        let options;\r\n        if (clientList.length) {\r\n            options = {\r\n                title: 'Client List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                    canClick: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"userName\",\r\n                            label: \"User Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"displayName\",\r\n                            label: \"Display Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"companyName\",\r\n                            label: \"Company Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"role\",\r\n                            label: \"Role\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"clientType\",\r\n                            label: \"Client Type\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...clientList.map(({ userName, displayName, companyName, role, clientType}) => ({ userName, displayName, companyName, role, clientType}))\r\n                    ],\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllClients;\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        localStorage.getItem('userRole') === 'Admin'\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/login',\r\n            state: { from: props.location }\r\n          }} />\r\n    )} />\r\n  )\r\n\r\n  export default PrivateRoute;","import React from 'react';\r\nimport './css/App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport About from './components/Others/About';\r\nimport Location from './components/Others/Location';\r\nimport LoginHome from './components/Login/LoginHome';\r\nimport FillPerformanceDetails from './components/Admin/FillPerformanceDetails';\r\nimport AddNewClient from './components/Admin/AddNewClient';\r\nimport AddNewVessel from './components/Admin/AddNewVessel';\r\nimport FillVoyageDetails from './components/Admin/FillVoyageDetails';\r\nimport Home from './components/Others/Home';\r\nimport Header from './components/Others/Header';\r\nimport Footer from './components/Others/Footer';\r\nimport FirstComponentStateFul from './components/FirstComponentStateFul'\r\nimport ForgotPassword from './components/Login/ForgotPassword';\r\nimport ViewAllVessels from './components/Manager/ViewAllVessels';\r\nimport ViewAllClients from './components/Manager/ViewAllClients';\r\nimport PrivateRoute from './components/Admin/PrivateRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App main-wrapper\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/about\" component={About}></Route>\r\n          <Route path=\"/location\" component={Location}></Route>\r\n          <Route path=\"/login\" component={LoginHome}></Route>\r\n          <Route path=\"/fillVoyageDetails\" component={FillVoyageDetails}></Route>\r\n          <Route path=\"/fillPerformanceDetails\" component={FillPerformanceDetails}></Route>\r\n          <Route path=\"/addNewVessel\" component={AddNewVessel}></Route>\r\n          <PrivateRoute path=\"/addNewClient\" component={AddNewClient}></PrivateRoute>\r\n          <Route path=\"/viewAllVessels\" component={ViewAllVessels}></Route>\r\n          <Route path=\"/viewAllClients\" component={ViewAllClients}></Route>\r\n          <Route path=\"/forgotPassword\" component={ForgotPassword}></Route>\r\n          <Route path=\"/\" component={Home}></Route>\r\n        </Switch>\r\n      </div>\r\n      <Footer localStorage = {localStorage.getItem('authToken')}/>\r\n      {/* <FirstComponentStateFul/> */}\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/index\";\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n   <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}