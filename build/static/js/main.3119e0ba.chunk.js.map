{"version":3,"sources":["reducers/reducer.js","sagas/saga.js","js/index.js","components/Others/About.js","components/Others/Location.js","components/Others/Spinner.js","components/Client/DisplaySelectedVesselDetails.js","components/Admin/PieCharts.js","components/api/index.js","components/Client/ClientHome.js","components/Admin/AdminHome.js","components/Manager/ManagerHome.js","components/Others/Page.js","components/Login/LoginHome.js","components/Admin/ShowDropDownAdmin.js","components/Admin/FillPerformanceDetails.js","components/Admin/AddNewUser.js","components/Admin/AddNewVessel.js","components/Admin/FillVoyageDetails.js","components/Others/SlideShow.js","components/Others/Home.js","components/Others/Header.js","components/Others/Footer.js","components/FirstComponentStateFul.js","action/action.js","components/Others/Alert.js","components/Login/FormPasswordReset.js","components/Login/ForgotPassword.js","components/Manager/ViewAllVessels.js","components/Manager/ViewAllUsers.js","components/Admin/PrivateRoute.js","components/Client/CheckPerformance.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","apiData","watcherSaga","workerFunction","takeEvery","call","getAPIData","finalData","put","type","fetch","then","response","json","initializeMiddleware","createSagaMiddleware","store","createStore","state","action","Object","assign","concat","payload","applyMiddleware","run","About","className","AnyReactComponent","text","Location","style","height","width","bootstrapURLKeys","key","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","Spinner","display","flexDirection","justifyContent","alignItems","color","DisplaySelectedVesselDetails","pairs","getDisplayKey","charAt","toUpperCase","slice","replace","trim","vesselDetails","push","marginTop","PieCharts","options","chart","labels","keys","responsive","breakpoint","legend","position","series","values","api","apiUrl","checkUsername","data","axios","post","headers","updatePassword","login","insertUserDetails","insertVesselDetails","insertPerformanceData","insertVoyageData","getAllClientDetails","getAllManager","getAllVesselsPerformance","getAllVoyage","getAllClients","getAllVessels","getAllVesselsDetails","fillPerformanceDetails","ClientHome","a","async","localStorage","getItem","res","status","setState","vesselList","companyName","error","handlePerformanceClick","e","c","find","m","target","id","console","log","vesselName","history","pathname","detail","buildCustomTableBodyCell","val","cellVal","column","rowId","textAlign","onClick","getPopupContent","capitalize","s","vesselSize","cpDate","loadPort","cargo","cargoIntake","onwerName","trigger","textDecoration","cursor","modal","closeOnDocumentClick","dischargePoint","tableData","performanceDetails","isPeformancePage","userName","showData","length","title","keyColumn","font","dimensions","datatable","row","stripped","features","canSearch","canDownload","canPrint","canOrderColumns","columns","label","colSize","dataType","rows","map","_id","checkPerformance","ourCount","previousYearDate","Date","pastYear","getFullYear","setFullYear","forEach","v","getTime","parseInt","marginLeft","CustomTableBodyCell","withRouter","AdminHome","marginRight","to","ManagerHome","localRoles","split","arrayItemsRoles","role","item","i","bind","Page","toLowerCase","LoginHome","isLoggedIn","errorMsg","_handleSubmit","username","password","setSubmitting","resetForm","resp","err","setItem","token","displayName","managerRoles","initialValues","validationSchema","object","shape","string","required","onSubmit","render","touched","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","userRole","variant","margin","elevation","fullWidth","htmlFor","Boolean","name","autoComplete","value","onChange","onBlur","disabled","ShowDropDownAdmin","clients","allClients","sort","vessels","allVslForSelectedClient","dates","allCpDatesForSelectedClient","filter","selectedClient","handleClientListChange","placeholder","isDisabled","selectedVessel","handleVesselListChange","selectedCpDate","handleCpDateChange","FillPerformanceDetails","handlePerformanceDetailsChange","preventDefault","success","Set","chartererName","allCpDates","f","allVessels","handlePerformanceDetailSubmit","handleBackButton","goBack","event","vessel","vId","errmsg","document","getElementById","reset","showTable","top","left","fontSize","AddNewUser","userDetails","clientType","AddUser","AddVessel","FillVoyage","FillPerformance","ViewUsers","roles","handleUserDetailsChange","handleMultiSelect","checked","handleRoleChange","handleClientTypeChange","handleAddNewUserSubmit","data1","indexOf","component","control","AddNewVessel","IMO","DWT","built","LOA","beam","cranes","grabs","handleVesselDetailsChange","handleAddNewVesselSubmit","FillVoyageDetails","localState","Shipper","loadPortAgent","receiver","onHireSurveyor","offHireSurveyor","bunkerSupplier","bunkerTrader","pniInsurance","weatherRoutingCompany","clientList","handleChartererNameChange","handleVesselNameChange","handleAdminChange","handleDateFieldChange","V","cl","vl","handleVesselDetailSubmit","toString","isDetailsFilled","selected","maxDate","placeholderText","images","zoomOutProperties","duration","transitionDuration","infinite","indicators","scale","arrows","SlideShow","each","index","src","alt","Home","Header","handleClick","showHeader","toggleHeaderState","logoutAndToggleState","toggleState","clear","scroll","Footer","FirstComponentStateFul","count","itemList","incrementCounter","addItemTo","addItems","getApiCall","addItem","getApiCallData","connect","dispatch","Transition","direction","Alert","handleClose","isOpen","hasTwoButtons","submitButtonText","open","transition","keepMounted","onClose","aria-labelledby","aria-describedby","FormPasswordReset","passChangeSuccess","user","_handleModalClose","_renderModal","_handleClose","confirmPass","newPass","oneOf","ref","ForgotPassword","ViewAllVessels","getAllVesselDetails","canClick","ViewAllUsers","handleEditClick","edit","PrivateRoute","rest","from","location","CheckPerformance","App","path","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3119e0ba.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    items: [],\r\n    apiData: [],\r\n};\r\nexport default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD': {\r\n            return Object.assign({}, state, {\r\n                items: state.items.concat(action.payload)\r\n            });\r\n        }\r\n        case 'DATA-LOADED': {\r\n            return Object.assign({}, state, {\r\n                apiData: state.apiData.concat(action.finalData)\r\n            });\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\n\r\nexport default function* watcherSaga() {\r\n    yield takeEvery('APICALL', workerFunction)\r\n}\r\nfunction* workerFunction() {\r\n    try {\r\n        const finalData = yield call(getAPIData);\r\n        //const finalResponse = yield finalData.json();\r\n        yield put({ type: 'DATA-LOADED', finalData });\r\n    }\r\n    catch (e) {\r\n        yield put({ type: 'DATA-ERROR', finalData: e });\r\n    }\r\n}\r\nfunction getAPIData() {\r\n    return fetch('https://jsonplaceholder.typicode.com/posts').then((response) =>\r\n        response.json()\r\n    );\r\n    // return fetch('https://jsonplaceholder.typicode.com/posts').then(function(response) {\r\n    // response.json();\r\n    // })\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers/reducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport watcherSaga from '../sagas/saga';\r\n\r\nconst initializeMiddleware = createSagaMiddleware();\r\nconst store = createStore(rootReducer, applyMiddleware(initializeMiddleware));\r\ninitializeMiddleware.run(watcherSaga);\r\nexport default store;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <section className=\"about_us_2 about_us_2_animated\">\r\n                <div className=\"about_text\">\r\n                    <p className=\"main anim animated\">about bulkcom shipping</p>\r\n                    <div className=\"pic_cont anim animated\">\r\n                    </div>\r\n                    <p className=\"sub anim4 animated\">WE'VE BUILT OUR REPUTATION ON EXCELLENCE IN SHIP CHARTERING BOTH VOYAGE AND TIME CHARTER, WITH A CONSTANT FOCUS ON SERVING OUR CUSTOMERS.<br />\r\n                        We are experts in planning, executing and handling any dry cargo movement in bulk across the globe.\r\n                        We have booked over 5Million MT of dry bulk cargo on all kinds of vessel ranging from handy to cape size with special focus on supramax category.<br />\r\n                        When trust us to charter vessels exclusively through us, you'll know that your shipments are in the hands of skilled, qualified professionals with decades of experience in shipping.<br /><br />\r\n                        Contact us today to discuss your current and future chartering needs. We have trained friendly staff to provide the best customer service in the industry.\r\n\r\n                        <br /><br /><b>WHY CHOOSE US?</b><br />\r\n                        WE AIM TO PROVIDE LEVERAGE TO YOUR BUSINESS BACKED BY OUR MARKET INFORMATION<br />\r\n                        Your freight is too important to trust to amateur and most important aspect for a trade deal to conclude. We deliver every time, and that's a promise.<br /><br />\r\n\r\n                        WE KNOW THE INS AND OUTS OF SHIPPING<br />\r\n                        The difference, in one word, is experience. Our team is fully capable to provide you the best service in industry.<br /><br />\r\n\r\n                        WE'RE NOT JUST A BROKER, WE'RE YOUR PARTNER<br />\r\n                        Shipping needs fluctuate, grow, and evolve in ways you might not be able to anticipate. We can help create not just a solution, but a entire shipping strategy.<br /><br />\r\n                        {/* <span className=\"more_btn\">\r\n                            more\r\n                        <img src=\"https://aegisuae.com/resources/img/arrow_down_white.svg\" alt=\"arrow\" className=\"arrow\" />\r\n                        </span> */}\r\n                        {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                        <span className=\"sub_more\">Our Trading efforts are currently focused on Bulk, Limestone, Dolomite, Gypsum, and Coal. We also have our own fleet of Chartered in tonnage and Dry Bulk Vessels to provide end to end solutions to our Clients.\r\n                        Our business endeavours tirelessly to create strong foundations of trust with all stake holders of the organisation.\r\n                        The company specializes in Value Addition with the supply chain. Our primary objective is to cater to and exceed our clients expectations in a timely and professional manner.\r\n                The Group is on the cusp of massive expansions and business growth and has been growing from strength to strength supported with the faith our customers, suppliers and employees repose on the organisation.</span>\r\n                    </p>\r\n                    {/* <a href=\"https://aegisuae.com/pages_pdf/aegis_all.pdf\" target=\"_blank\" className=\"pdf_link_2\"><img src=\"https://aegisuae.com/resources/img/pdf_symbol_blue.svg\" alt=\"pdf-icon\" className=\"pdfs\" /></a> */}\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nclass Location extends Component {\r\n    static defaultProps = {\r\n        center: {\r\n          lat: 59.95,\r\n          lng: 30.33\r\n        },\r\n        zoom: 11\r\n      };\r\n      render() {\r\n        return (\r\n            <div>\r\n                <section className=\"about_us_2 about_us_2_animated\">\r\n                    <div className=\"about_text\">\r\n                    <div style={{ height: '100vh', width: '100%' }}>\r\n                            <GoogleMapReact\r\n                            bootstrapURLKeys={{ key: 'AIzaSyAtqgKhqfCi91s3GL1SM5HEt9pfqQvnZDw' }}\r\n                            defaultCenter={this.props.center}\r\n                            defaultZoom={this.props.zoom}\r\n                            >\r\n                            <AnyReactComponent\r\n                                lat={59.955413}\r\n                                lng={30.337844}\r\n                                text=\"My Marker\"\r\n                            />\r\n                            </GoogleMapReact>\r\n                        </div>\r\n                    </div>\r\n                    </section>\r\n            </div>\r\n        )\r\n      }\r\n}\r\nexport default Location;","import React from 'react'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nexport default function Spinner() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <CircularProgress color=\"primary\" />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nconst DisplaySelectedVesselDetails = props => {\r\n    var pairs = [];\r\n    const getDisplayKey = key => {\r\n        key = key.charAt(0).toUpperCase() + key.slice(1)\r\n        return key.replace(/([A-Z])/g, ' $1').trim()\r\n    }\r\n\r\n    for (var key in props.vesselDetails) {\r\n        pairs.push(\r\n            <tr>\r\n                <td>\r\n                    <label>\r\n                        {getDisplayKey(key)}\r\n                    </label>\r\n                </td>\r\n                <td>\r\n                    {props.vesselDetails[key]}\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <table style={{marginTop:'5%'}}>\r\n                <thead>\r\n                </thead>\r\n                <tbody>\r\n                    {pairs}\r\n                </tbody>\r\n            </table>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default DisplaySelectedVesselDetails","import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nclass PieCharts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          width: 380,\r\n          type: 'pie',\r\n        },\r\n        labels: Object.keys(props.vesselDetails),\r\n        responsive: [{\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200\r\n            },\r\n            legend: {\r\n              position: 'bottom'\r\n            }\r\n          }\r\n        }]\r\n},\r\n      series: Object.values(props.vesselDetails),\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\" />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col percentage-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"pie\"\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default PieCharts;\r\n\r\n/*import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {},\r\n      series: [44, 55, 41, 17, 15],\r\n      labels: [\"A\", \"B\", \"C\", \"D\", \"E\"]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\" />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col percentage-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"pie\"\r\n              width={500}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n */","import axios from 'axios';\r\n\r\nclass API {\r\n    apiUrl = '';\r\n\r\n    checkUsername = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/checkUsername', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    updatePassword = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/updatePassword', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    login = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/login', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertUserDetails = data => {\r\n        return axios.post(this.apiUrl + '/userDetails/insertUserDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVesselDetails = data => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/insertVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertPerformanceData = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/insertPerformanceData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    insertVoyageData = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/insertVoyageData', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n    \r\n    getAllClientDetails = () => {\r\n        return axios.post(this.apiUrl + '/userDetails/getAllClientDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    }\r\n\r\n    getAllManager = () => {\r\n        return axios.post(this.apiUrl + '/userDetails/getAllManager', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    }\r\n\r\n    getAllVesselsPerformance = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/getAllVessels', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllVoyage = data => {\r\n        return axios.post(this.apiUrl + '/voyageDetails/getAllVoyage', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n\r\n    getAllClients = () => {\r\n        return axios.post(this.apiUrl + '/userDetails/getAllClients', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    }\r\n\r\n    getAllVessels = () => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/getAllVessels', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    }\r\n\r\n    getAllVesselsDetails = () => {\r\n        return axios.post(this.apiUrl + '/vesselDetails/getAllVesselDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        });\r\n    }\r\n\r\n    fillPerformanceDetails = data => {\r\n        return axios.post(this.apiUrl + '/performanceDetails/fillPerformanceDetails', {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            data,\r\n        });\r\n    }\r\n    \r\n\r\n   \r\n};\r\n\r\nconst api = new API();\r\nexport default api;","import React, { Component } from 'react';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\nimport Popup from \"reactjs-popup\";\r\nimport DisplaySelectedVesselDetails from './DisplaySelectedVesselDetails';\r\nimport { withRouter } from 'react-router-dom'\r\nimport PieCharts from '../../components/Admin/PieCharts';\r\nimport api from '../api';\r\n\r\nclass ClientHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getAllVoyage();\r\n        this.state = {\r\n            vesselList: [],\r\n            vesselDetails: {\r\n                vesselName: '',\r\n                vesselSize: '',\r\n                cpDate: '',\r\n                loadPort: '',\r\n                dischargePoint: '',\r\n                cargo: '',\r\n                cargoIntake: '',\r\n                onwerName: ''\r\n            },\r\n            tableData: [],\r\n            performanceDetails: {},\r\n            isPeformancePage: false,\r\n            error: false,\r\n            userName: '',\r\n        }\r\n    }\r\n\r\n    getAllVoyage = async () => {\r\n        api.getAllVoyage({ 'companyName': localStorage.getItem('companyName') }).then(res => {\r\n            if (res.data.status) {\r\n                this.setState({\r\n                    vesselList: res.data.vesselList,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                    error: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    error: true,\r\n                    companyName: localStorage.getItem('companyName'),\r\n                });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    handlePerformanceClick = e => {\r\n        const { vesselList } = this.state;\r\n        const c = vesselList.find(m => m['_id'] === e.target.id);\r\n        console.log(c.vesselName);\r\n        //let history = useHistory();\r\n        // history.push('/DisplaySelectedVesselPerformance');\r\n        this.props.history.push({\r\n            pathname: '/CheckPerformance',\r\n            state: { detail: c }\r\n        })\r\n        //alert(c.vesselName)\r\n    }\r\n\r\n\r\n    // handleVesselClick = e => {\r\n    //     const { vesselList } = this.state;\r\n    //     const c = vesselList.find(m => m['_id'] === e.target.id);\r\n    //     console.log(c.vesselName);\r\n    //     alert(c.vesselName)\r\n    // }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case \"checkPerformance\":\r\n                val = <button style={{ color: \"blue\", textAlign: \"center\" }} id={rowId} type=\"button\" onClick={this.handlePerformanceClick}>Check Performance</button>;\r\n                break;\r\n            case \"vesselName\":\r\n                val = this.getPopupContent(cellVal, rowId);\r\n                break;\r\n            default:\r\n                val = <div style={{ color: \"blue\" }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        let showData;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Fixture List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"vesselName\",\r\n                            label: \"Vessel Name\",\r\n                            colSize: \"50px\",\r\n                            dataType: ''\r\n                        },\r\n                        {\r\n                            id: \"cpDate\",\r\n                            label: \"CP Date\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"checkPerformance\",\r\n                            label: \"Performance\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList.map(({ vesselName, cpDate, _id }) => ({ vesselName, cpDate, id: _id, checkPerformance: true }))\r\n                    ],\r\n                }\r\n            }\r\n\r\n            const ourCount = {};\r\n            let previousYearDate = new Date();\r\n            const pastYear = previousYearDate.getFullYear() - 1;\r\n            previousYearDate.setFullYear(pastYear);\r\n            vesselList.forEach(v => {\r\n                if (!ourCount[v.cargo]) {\r\n                    ourCount[v.cargo] = 0;\r\n                }\r\n                if (new Date(v.cpDate).getTime() <= new Date().getTime() && new Date(v.cpDate).getTime() > previousYearDate.getTime()) {\r\n                    ourCount[v.cargo] += parseInt(v.cargoIntake);\r\n                }\r\n            });\r\n\r\n\r\n            showData = < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                <div style={{ marginTop: '15%', marginLeft: '0%' }}>\r\n                    {/* <DisplaySelectedVesselDetails vesselDetails={ourCount} /> */}\r\n                    <PieCharts vesselDetails={ourCount} />\r\n\r\n                </div>\r\n            </div >\r\n        } else {\r\n            showData = <div style={{ marginTop: '15%' }}> Oops!! There are no business details for you.</div>\r\n        }\r\n        return (\r\n            <div className='about_us_2 about_us_2_animated'>\r\n                <span>\r\n                    <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                    {showData}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n\r\n    getPopupContent = (cellVal, rowId) => {\r\n        const { vesselList } = this.state;\r\n        let vesselDetails = vesselList.find(m => m['_id'] === rowId);\r\n        vesselDetails = (({ vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }) => (\r\n            { vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }))(vesselDetails);\r\n\r\n        const content = <div>\r\n            <Popup trigger={<a id={rowId} style={{ color: \"blue\", textAlign: \"center\", textDecoration: 'underline', cursor: 'pointer' }}> {cellVal} </a>}\r\n                modal closeOnDocumentClick >\r\n                <div className=\"content\">\r\n                    <DisplaySelectedVesselDetails vesselDetails={vesselDetails} />\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n\r\n        return content;\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientHome);\r\n","import React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nclass AdminHome extends Component {\r\n\r\n    history;\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"about_us_2 about_us_2_animated\">\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/addNewUser\">Add New User </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/viewAllUsers\">View All Users </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/addNewVessel\">Add New Vessel</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/viewAllVessels\">View All Vessels</Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/fillVoyageDetails\">Fill Voyage Details </Link>\r\n                    <Link style={{ width: '300px', height: '40px', marginRight: '80px' }} to=\"/fillPerformanceDetails\">Fill Performance Details</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default withRouter(AdminHome);","\r\nimport React, { Component } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nclass ManagerHome extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let localRoles = localStorage.getItem('managerRoles');\r\n        localRoles = localRoles.length && localRoles.split(',');\r\n        this.state = {\r\n            arrayItemsRoles: [{ role: localRoles[0], to: '/addNewUser', text: 'Add New User' },\r\n            { role: localRoles[1], to: '/addNewVessel', text: 'Add New Vessel' },\r\n            { role: localRoles[2], to: '/fillVoyageDetails', text: 'Fill Voyage Details' },\r\n            { role: localRoles[3], to: '/fillPerformanceDetails', text: 'Fill Performance Details' },\r\n            { role: localRoles[4], to: '/viewAllUsers', text: 'View All Users' }]\r\n        }\r\n    }\r\n    render() {\r\n        const data = this.state.arrayItemsRoles.map(function(item, i) {\r\n            return item.role === 'true' ? \r\n                (<Link style={{ width: '300px', height: '40px', marginRight: '80px' }} key={i} to={item.to}> {item.text} </Link>) :\r\n               ''\r\n        }.bind(this));\r\n        return (\r\n            <div className=\"about_us_2 about_us_2_animated\">\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                <div style={{ display: 'inline-block', marginTop: '15%' }}>\r\n                    {data}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\nexport default withRouter(ManagerHome);","import React from 'react';\r\nimport LoginHome from '../Login/LoginHome';\r\nimport ClientHome from '../Client/ClientHome';\r\nimport AdminHome from '../Admin/AdminHome';\r\nimport ManagerHome from '../Manager/ManagerHome';\r\n\r\nfunction Page(props) {\r\n    if (localStorage.getItem('authToken')) {\r\n        switch (localStorage.getItem('userRole').toLowerCase()) {\r\n            case 'admin':\r\n                return <AdminHome/>;\r\n            case 'manager':\r\n                return <ManagerHome/>;\r\n            case 'client':\r\n                return <ClientHome/>;\r\n            default:\r\n                return <LoginHome />;\r\n        }\r\n    }\r\n    return <LoginHome />;\r\n}\r\nexport default Page","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Link } from 'react-router-dom';\r\nimport Page from '../Others/Page'\r\nimport api from '../api'\r\n\r\nexport default class LoginHome extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: localStorage.getItem('authToken') ? true : false,\r\n        role: localStorage.getItem('userRole') ? localStorage.getItem('userRole') : '',\r\n        errorMsg: '',\r\n        error: localStorage.getItem('authToken') ? false : true\r\n    }\r\n\r\n    // handleLogoutClick = (e) => {\r\n    //     localStorage.setItem('authToken', '');\r\n    //     localStorage.setItem('userRole', '');\r\n    //     localStorage.setItem('userName', '');\r\n    //     this.setState({\r\n    //         isLoggedIn: false,\r\n    //         role: '',\r\n    //         errorMsg: '',\r\n    //         error: false,\r\n    //     });\r\n    // }\r\n\r\n    _handleSubmit = async ({\r\n        username,\r\n        password,\r\n        setSubmitting,\r\n        resetForm,\r\n    }) => {\r\n        this.setState(() => ({\r\n            isLoggedIn: false,\r\n            error: false,\r\n            role: '',\r\n        }));\r\n\r\n        let resp = await api.login({ username, password, });\r\n        resp = resp.data;\r\n        setSubmitting(false);\r\n        if (!resp.status) {\r\n            this.setState(() => ({\r\n                isLoggedIn: false,\r\n                errorMsg: resp.err,\r\n                error: true,\r\n                role: '',\r\n            }))\r\n            return;\r\n        } else {\r\n            this.setState(() => ({\r\n                isLoggedIn: true,\r\n                error: false,\r\n                errorMsg: '',\r\n            }))\r\n            localStorage.setItem('authToken', resp.token);\r\n            localStorage.setItem('userRole', resp.role);\r\n            localStorage.setItem('displayName', resp.displayName);\r\n            localStorage.setItem('userName', resp.userName);\r\n            localStorage.setItem('companyName', resp.companyName);\r\n            localStorage.setItem('managerRoles', resp.managerRoles);\r\n        }\r\n\r\n        resetForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                }}\r\n                validationSchema={object().shape({\r\n                    username: string().required('Please enter a valid email address.'),\r\n                    password: string().required('Password is required'),\r\n                })}\r\n                onSubmit={(\r\n                    { username, password },\r\n                    { setSubmitting, resetForm }\r\n                ) =>\r\n                    this._handleSubmit({\r\n                        username,\r\n                        password,\r\n                        setSubmitting,\r\n                        resetForm,\r\n                    })\r\n                }\r\n                render={props => {\r\n                    const {\r\n                        values,\r\n                        touched,\r\n                        errors,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isValid,\r\n                        isSubmitting,\r\n                    } = props\r\n\r\n                    const { error } = this.state;\r\n                    const authToken = localStorage.getItem('authToken');\r\n                    const userRole = localStorage.getItem('userRole');\r\n                    let showData;\r\n                    if (isSubmitting) {\r\n                        showData = <Spinner />\r\n                    } else if (userRole && !error) {\r\n                        showData = <div>\r\n                            <Page />\r\n                            {/* <LogoutButton onClick={this.handleLogoutClick} ></LogoutButton> */}\r\n                        </div>\r\n                    } else {\r\n                        showData = <div className=\"ForgotPasswordForm\">\r\n                            <Typography variant=\"title\" style={{ margin: '16px 0' }}> Login </Typography>\r\n                            <Paper className=\"form form--wrapper\" elevation={10}>\r\n                                <form className=\"form\" onSubmit={handleSubmit}>\r\n                                    <FormControl fullWidth margin=\"dense\">\r\n                                        <InputLabel htmlFor=\"username\" error={Boolean(touched.username && errors.username)}>\r\n                                            {'Enter your username'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id=\"username\"\r\n                                            name=\"username\"\r\n                                            type=\"email\"\r\n                                            required\r\n                                            autoComplete=\"off\"\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.username && errors.username)} />\r\n                                        <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                                            {touched.username && errors.username ? errors.username : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormControl\r\n                                        fullWidth\r\n                                        margin=\"dense\"\r\n                                        error={Boolean(touched.password && errors.password)}>\r\n                                        <InputLabel htmlFor=\"password\" error={Boolean(touched.password && errors.password)}>\r\n                                            {'Enter your password'}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            type=\"password\"\r\n                                            autoComplete=\"off\"\r\n                                            value={values.password}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                            error={Boolean(touched.password && errors.password)}\r\n                                        />\r\n                                        <FormHelperText error={Boolean(touched.password && errors.password)}>\r\n                                            {touched.password && errors.password ? errors.password : ''}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                    <FormHelperText error={Boolean(this.state.error)}>\r\n                                        {this.state.error ? this.state.errorMsg : ''}\r\n                                    </FormHelperText>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        variant=\"raised\"\r\n                                        color=\"primary\"\r\n                                        disabled={Boolean(!isValid || isSubmitting)}\r\n                                        style={{ margin: '16px' }}>\r\n                                        {'Login'}\r\n                                    </Button>\r\n                                    <Link style={{ color: 'black' }} to=\"/forgotPassword\">Forgot Password !!</Link>\r\n                                </form>\r\n                            </Paper>\r\n                        </div>\r\n                    }\r\n                    return (\r\n                        showData\r\n                    )\r\n                }\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst ShowDropDownAdmin = props => {\r\n    const clients = props.state.allClients.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const vessels = props.state.allVslForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    const dates = props.state.allCpDatesForSelectedClient.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n    }));\r\n\r\n    return (\r\n        <div style={{ display: 'flex', marginTop: '2%' }}>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={clients.filter(({ value }) => value === props.state.selectedClient)}\r\n                    onChange={props.handleClientListChange}\r\n                    options={clients}\r\n                    placeholder='Select Client'\r\n                    isDisabled={!clients || !clients.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={vessels.filter(({ value }) => value === props.state.selectedVessel)}\r\n                    onChange={props.handleVesselListChange}\r\n                    options={vessels}\r\n                    placeholder='Select Vessel'\r\n                    isDisabled={!vessels || !vessels.length}\r\n                /></div>\r\n            <div className='fillPerformanceDropDowns'>\r\n                <Select\r\n                    value={dates.filter(({ value }) => value === props.state.selectedCpDate)}\r\n                    onChange={props.handleCpDateChange}\r\n                    options={dates}\r\n                    placeholder='Select CP Date'\r\n                    isDisabled={!dates || !dates.length}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowDropDownAdmin","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShowDropDownAdmin from './ShowDropDownAdmin';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport api from '../api';\r\nclass FillPerformanceDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.getAllVesselsPerformance();\r\n    this.handleVesselListChange = this.handleVesselListChange.bind(this);\r\n    this.handleClientListChange = this.handleClientListChange.bind(this);\r\n    this.handleCpDateChange = this.handleCpDateChange.bind(this);\r\n    this.handlePerformanceDetailSubmit = this.handlePerformanceDetailSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n    this.state = {\r\n      vesselList: [],\r\n      selectedClient: 'SelectClient',\r\n      selectedVessel: 'SelectVessel',\r\n      selectedCpDate: 'SelectCpDate',\r\n      allClients: [],\r\n      allVslForSelectedClient: [],\r\n      allCpDatesForSelectedClient: [],\r\n      error: false,\r\n      performanceDetails: {\r\n\r\n      },\r\n    }\r\n  }\r\n\r\n  handlePerformanceDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      ...this.state,\r\n      performanceDetails: {\r\n        ...this.state.performanceDetails,\r\n        [name]: value.trim(),\r\n      },\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  getAllVesselsPerformance = async () => {\r\n    const res = await api.getAllVesselsPerformance({ 'isDetailsFilled': false });\r\n    if (res.data.status) {\r\n      const allClients = [...new Set(res.data.vesselList.map(m => m.chartererName))];\r\n      this.setState({\r\n        vesselList: res.data.vesselList,\r\n        allClients: allClients,\r\n        error: false,\r\n      });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  };\r\n\r\n  handleCpDateChange = e => {\r\n    const { vesselList, selectedVessel } = this.state;\r\n    let vesselDetails = vesselList.find(m => m.vesselName === selectedVessel && m.cpDate === e.value);\r\n    vesselDetails = (({ chartererName, vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }) => (\r\n      { chartererName, vesselName, vesselSize, cpDate, loadPort, cargo, cargoIntake, onwerName }))(vesselDetails);\r\n    this.setState({\r\n      vesselDetails: vesselDetails,\r\n      selectedCpDate: e.value,\r\n      isPeformancePage: false,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleVesselListChange = async e => {\r\n    const { selectedVessel, vesselList, selectedClient } = this.state;\r\n    if (e.value !== selectedVessel) {\r\n      this.setState({ selectedCpDate: 'SelectCpDate' });\r\n    }\r\n\r\n    const allCpDates = vesselList.filter(f => f.vesselName === e.value && f.chartererName === selectedClient).map(m => m.cpDate);\r\n    if (!allCpDates.length || (allCpDates.length === 1 && allCpDates[0] === '')) {\r\n      this.setState({\r\n        allCpDatesForSelectedClient: [],\r\n        selectedVessel: e.value,\r\n        selectedCpDate: 'SelectCpDate',\r\n        isPeformancePage: false,\r\n        error: true,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allCpDatesForSelectedClient: allCpDates,\r\n      selectedVessel: e.value,\r\n      selectedCpDate: 'SelectCpDate',\r\n      isPeformancePage: false,\r\n      error: false,\r\n    });\r\n  }\r\n\r\n  handleClientListChange = e => {\r\n    const { selectedClient, vesselList } = this.state;\r\n    if (e.value !== selectedClient) {\r\n      this.setState({ selectedCpDate: 'SelectCpDate', selectedVessel: 'SelectVessel' });\r\n    }\r\n\r\n    const allVessels = [...new Set(vesselList.filter(m => m.chartererName === e.value).map(m => m.vesselName))];\r\n    if (!allVessels.length || (allVessels.length === 1 && allVessels[0] === '')) {\r\n      this.setState({\r\n        allVslForSelectedClient: [],\r\n        selectedClient: e.value,\r\n        selectedVessel: 'SelectVessel',\r\n        selectedCpDate: 'SelectCpDate',\r\n        error: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      allVslForSelectedClient: allVessels,\r\n      selectedClient: e.value,\r\n      selectedVessel: 'SelectVessel',\r\n      selectedCpDate: 'SelectCpDate',\r\n      error: false\r\n    });\r\n  }\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handlePerformanceDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { selectedClient, selectedVessel, selectedCpDate, vesselList } = this.state;\r\n    const vessel = vesselList.find(f => f.chartererName === selectedClient && f.vesselName === selectedVessel && f.cpDate === selectedCpDate)\r\n    const vId = vessel ? vessel['_id'] : '';\r\n\r\n    let data = await api.fillPerformanceDetails({ ...this.state.performanceDetails, vId });\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('performanceDetailsForm').reset();\r\n      this.setState({\r\n        performanceDetails: {},\r\n        success: false,\r\n        errorMsg: 'Success!! Performance Details saved for = ' + this.state.selectedClient\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedCpDate } = this.state;\r\n    let showTable;\r\n    if (selectedCpDate !== 'SelectCpDate') {\r\n      showTable = <div>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <form id='performanceDetailsForm' onSubmit={this.handlePerformanceDetailSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Original Value</th>\r\n                <th>Actual Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Number of Days *\r\n                  </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"NumberOfDaysOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"NumberOfDaysAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Consumption (MT) *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionIFOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionIFOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionMDOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerConsumptionMDOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Price *\r\n              </label>\r\n                </td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IFO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceIFOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceIFOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    MDO\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceMDOOrg\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerPriceMDOAct\" required onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LoadPortDAOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LoadPortDAAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port DA *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DischargePortDAOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DischargePortDAAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    ILOHC and CVE\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"ILOHCandCVEOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"ILOHCandCVEAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Survey Cost Bends *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerSurveyCostBendsOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"BunkerSurveyCostBendsAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    WX Routing Expense *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"WXRoutingExpenseOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"WXRoutingExpenseAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance *\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"PNIInsuranceOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"PNIInsuranceAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Despatch Paid\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DespatchPaidOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DespatchPaidAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Other Expense\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"OtherExpenseOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"OtherExpenseAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    HRA/WAR Risk\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"HRA_WARRiskOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"HRA_WARRiskAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Demmurrage Received\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DemmurrageReceivedOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DemmurrageReceivedAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Quantity (MT)\r\n              </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"CargoQuantityOrg\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"CargoQuantityAct\" onChange={this.handlePerformanceDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    }\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <h2>Fill Performance Details</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <ShowDropDownAdmin\r\n          handleClientListChange={this.handleClientListChange}\r\n          handleVesselListChange={this.handleVesselListChange}\r\n          handleCpDateChange={this.handleCpDateChange}\r\n          state={this.state}\r\n        />\r\n        <br />\r\n        {showTable}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FillPerformanceDetails;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../../css/Admin.css';\r\nimport Select from 'react-select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport api from '../api';\r\n\r\nclass AddNewUser extends Component {\r\n\r\n  userDetails = {\r\n    userName: '',\r\n    companyName: '',\r\n    displayName: '',\r\n    password: '',\r\n    role: '',\r\n    clientType: '',\r\n    success: true,\r\n    errorMsg: '',\r\n    managerRoles: {\r\n      AddUser: false,\r\n      AddVessel: false,\r\n      FillVoyage: false,\r\n      FillPerformance: false,\r\n      ViewUsers: false\r\n    },\r\n  };\r\n\r\n  roles = [{ label: \"Client\", value: \"Client\" }, { label: \"Manager\", value: \"Manager\" }];\r\n  clientType = [{ label: \"Owner\", value: \"Owner\" }, { label: \"Charterer\", value: \"Charterer\" }];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.userDetails };\r\n    this.handleUserDetailsChange = this.handleUserDetailsChange.bind(this);\r\n    this.handleRoleChange = this.handleRoleChange.bind(this);\r\n    this.handleClientTypeChange = this.handleClientTypeChange.bind(this);\r\n    this.handleAddNewUserSubmit = this.handleAddNewUserSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleUserDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleMultiSelect = (event) => {\r\n    console.log(event);\r\n    this.setState({\r\n      ...this.state, managerRoles: {\r\n        ...this.state.managerRoles,\r\n        [event.target.name]: event.target.checked\r\n      }\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  handleRoleChange = e => {\r\n    this.setState({\r\n      role: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  handleClientTypeChange = e => {\r\n    this.setState({\r\n      clientType: e.value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  }\r\n\r\n  async handleAddNewUserSubmit(event) {\r\n    event.preventDefault();\r\n    const { userName, password, displayName, companyName, role, clientType, managerRoles } = this.state;\r\n    if (!userName || !displayName || !password || !role || !companyName || (role === 'Client' && !clientType)) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let roles = [];\r\n    if (role === 'Manager') {\r\n      const { AddUser, AddVessel, FillVoyage, FillPerformance, ViewUsers } = managerRoles;\r\n      const error = [AddUser, AddVessel, FillVoyage, FillPerformance, ViewUsers].filter((v) => v).length < 1;\r\n      roles = [AddUser, AddVessel, FillVoyage, FillPerformance, ViewUsers];\r\n      if (error) {\r\n        this.setState({\r\n          success: false,\r\n          errorMsg: 'Please select minimum one role'\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!clientType) {\r\n      this.state.clientType = role;\r\n    }\r\n    const data1 = { ...this.state };\r\n    if (roles.length) {\r\n      data1.managerRoles = roles\r\n    }\r\n\r\n    let data = await api.insertUserDetails({ ...data1 });\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      if (data.data.status.errmsg.indexOf('duplicate key error') >= 0) {\r\n        data.data.status.errmsg = 'Username already exits.'\r\n      }\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      document.getElementById('userDetailsForm').reset();\r\n      this.setState({\r\n        ...this.userDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New user created = ' + userName\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const role = this.state.role;\r\n    const { AddUser, AddVessel, FillVoyage, FillPerformance, ViewUsers } = this.state.managerRoles;\r\n    const error = [AddUser, AddVessel, FillVoyage, FillPerformance, ViewUsers].filter((v) => v).length < 1;\r\n    let tableData;\r\n    if (role === 'Client') {\r\n      tableData = <tr>\r\n        <td>\r\n          <label>\r\n            Client Type *\r\n        </label>\r\n        </td>\r\n        <td>\r\n          <Select\r\n            value={this.clientType.filter(({ value }) => value === this.state.clientType)}\r\n            onChange={this.handleClientTypeChange}\r\n            options={this.clientType}\r\n            placeholder='Select Client Type'\r\n            name=\"clientType\"\r\n          />\r\n        </td>\r\n      </tr>\r\n    } else if (role === 'Manager') {\r\n      tableData = <tr>\r\n        <td>\r\n          <label>\r\n            Select Manager Roles *\r\n          </label>\r\n        </td>\r\n        <td>\r\n          <FormControl required error={error} component=\"fieldset\" style={{ display: 'flex' }}>\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox checked={AddUser} onChange={this.handleMultiSelect} name=\"AddUser\" />}\r\n                label=\"Add New User\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={AddVessel} onChange={this.handleMultiSelect} name=\"AddVessel\" />}\r\n                label=\"Add New Vessel\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={FillVoyage} onChange={this.handleMultiSelect} name=\"FillVoyage\" />}\r\n                label=\"Fill Voyage Details\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={FillPerformance} onChange={this.handleMultiSelect} name=\"FillPerformance\" />}\r\n                label=\"Fill Performance Details\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox checked={ViewUsers} onChange={this.handleMultiSelect} name=\"ViewUsers\" />}\r\n                label=\"View All Users\"\r\n              />\r\n            </FormGroup>\r\n            <FormHelperText>Please select minimum one role</FormHelperText>\r\n          </FormControl>\r\n        </td>\r\n      </tr>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New User</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='userDetailsForm' onSubmit={this.handleAddNewUserSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    User Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"email\" name=\"userName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Company Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"companyName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Display Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"displayName\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Password *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"password\" name=\"password\" required onChange={this.handleUserDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Role *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <div>\r\n                    <Select\r\n                      value={this.roles.filter(({ value }) => value === this.state.role)}\r\n                      onChange={this.handleRoleChange}\r\n                      options={this.roles}\r\n                      placeholder='Select Role'\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              {tableData}\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewUser;","import React, { Component } from 'react';\r\nimport '../../css/Admin.css';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button';\r\nimport api from '../api';\r\n\r\nclass AddNewVessel extends Component {\r\n\r\n  vesselDetails = {\r\n    vesselName: '',\r\n    IMO: '',\r\n    DWT: '',\r\n    built: '',\r\n    LOA: '',\r\n    beam: '',\r\n    cranes: '',\r\n    grabs: '',\r\n    success: true,\r\n    errorMsg: ''\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.vesselDetails };\r\n    this.handleVesselDetailsChange = this.handleVesselDetailsChange.bind(this);\r\n    this.handleAddNewVesselSubmit = this.handleAddNewVesselSubmit.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  handleVesselDetailsChange = e => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      success: true,\r\n      errorMsg: ''\r\n    });\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  async handleAddNewVesselSubmit(event) {\r\n    event.preventDefault();\r\n    const { vesselName, IMO, DWT } = this.state;\r\n    if (!vesselName || !DWT || !IMO) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    const data = await api.insertVesselDetails({ ...this.state});\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.vesselDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! New vessel created = ' + vesselName,\r\n      });\r\n      document.getElementById('vesselDetailsForm').reset();\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Add New Vessel</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='vesselDetailsForm' onSubmit={this.handleAddNewVesselSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"vesselName\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    IMO *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"IMO\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    DWT *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"DWT\" required onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Built\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"built\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    LOA\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"LOA\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Beam\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"beam\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cranes\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cranes\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Grabs\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"grabs\" onChange={this.handleVesselDetailsChange} autoComplete=\"off\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewVessel;","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../../css/Admin.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport api from '../api';\r\n\r\nclass FillVoyageDetails extends Component {\r\n\r\n  localState = {\r\n    vesselDetails: {\r\n      chartererName: '',\r\n      vesselName: '',\r\n      vesselSize: '',\r\n      cpDate: new Date(),\r\n      loadPort: '',\r\n      cargo: '',\r\n      cargoIntake: '',\r\n      onwerName: '',\r\n      Shipper: '',\r\n      loadPortAgent: '',\r\n      dischargePoint: '',\r\n      receiver: '',\r\n      onHireSurveyor: '',\r\n      offHireSurveyor: '',\r\n      bunkerSupplier: '',\r\n      bunkerTrader: '',\r\n      pniInsurance: '',\r\n      weatherRoutingCompany: '',\r\n    },\r\n    clientList: [],\r\n    vesselList: []\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...this.localState };\r\n    this.handleAdminChange = this.handleAdminChange.bind(this);\r\n    this.handleVesselDetailSubmit = this.handleVesselDetailSubmit.bind(this);\r\n    this.handleChartererNameChange = this.handleChartererNameChange.bind(this);\r\n    this.handleBackButton = this.handleBackButton.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getAllClients();\r\n    this.getAllVessels();\r\n  }\r\n\r\n  handleChartererNameChange = e => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        chartererName: e.value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleVesselNameChange = e => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        vesselName: e.value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleAdminChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        [name]: value,\r\n      }\r\n    });\r\n  };\r\n\r\n  handleDateFieldChange = (V) => {\r\n    this.setState({\r\n      vesselDetails: {\r\n        ...this.state.vesselDetails,\r\n        cpDate: V\r\n      }\r\n    })\r\n  };\r\n\r\n  handleBackButton() {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  getAllClients = async () => {\r\n    const res = await api.getAllClients();\r\n    if (res.data.status) {\r\n      const cl = res.data.clientList.sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n      }));\r\n      this.setState({\r\n        clientList: cl,\r\n        error: false,\r\n      });\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  getAllVessels = async () => {\r\n    const res = await api.getAllVessels();\r\n    if (res.data.status) {\r\n      const vl = res.data.vesselList.map(m => m.vesselName + '_' + m.DWT).sort().map(v => ({\r\n        label: v,\r\n        value: v\r\n      }));\r\n      this.setState({\r\n        vesselList: vl,\r\n        error: false,\r\n      });\r\n\r\n    } else {\r\n      this.setState({ error: true });\r\n      return;\r\n    }\r\n  }\r\n\r\n  async handleVesselDetailSubmit(event) {\r\n    event.preventDefault();\r\n    const { chartererName, vesselName, cpDate } = this.state.vesselDetails;\r\n    if (!chartererName || !vesselName || !cpDate.toString()) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: 'Please fill the required details'\r\n      });\r\n      return;\r\n    }\r\n\r\n    let data = await api.insertPerformanceData({\r\n      cpDate: this.state.vesselDetails.cpDate,\r\n      vesselName: this.state.vesselDetails.vesselName,\r\n      chartererName: this.state.vesselDetails.chartererName,\r\n      isDetailsFilled: false,\r\n    });\r\n\r\n    data = await api.insertVoyageData({ ...this.state.vesselDetails });\r\n\r\n    if (data.data.status.errors || data.data.status.errmsg) {\r\n      this.setState({\r\n        success: false,\r\n        errorMsg: data.data.status.errmsg\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        ...this.localState.vesselDetails,\r\n        success: false,\r\n        errorMsg: 'Success!! Voyage Details saved for = ' + chartererName\r\n      });\r\n      document.getElementById('voyageDetailsForm').reset();\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { clientList, vesselList } = this.state;\r\n    return (\r\n      <div className=\"about_us_2 about_us_2_animated\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleBackButton} style={{ top: \"4%\", left: \"10%\", position: \"fixed\" }}>\r\n          Back\r\n        </Button>\r\n        <h2>Fill Voyage Details</h2>\r\n        <FormHelperText style={{ textAlign: 'center', fontSize: 'large' }} error={Boolean(!this.state.success)}>\r\n          {this.state.success ? '' : this.state.errorMsg}\r\n        </FormHelperText>\r\n        <form id='voyageDetailsForm' onSubmit={this.handleVesselDetailSubmit} style={{ margin: \"1%\" }}>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Field</th>\r\n                <th>Value</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Charterer Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={clientList.filter(({ value }) => value === this.state.vesselDetails.chartererName)}\r\n                    onChange={this.handleChartererNameChange}\r\n                    options={clientList}\r\n                    placeholder='Select Charterer Name'\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Name *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <Select\r\n                    value={vesselList.filter(({ value }) => value === this.state.vesselDetails.vesselName)}\r\n                    onChange={this.handleVesselNameChange}\r\n                    options={vesselList}\r\n                    placeholder='Select Vessel Name'\r\n                    required\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Vessel Size\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"vesselSize\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    CP Date *\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <DatePicker selected={this.state.vesselDetails.cpDate} onChange={this.handleDateFieldChange} value={this.state.vesselDetails.cpDate} required autoComplete=\"off\" maxDate={new Date()}\r\n      placeholderText='Select a date before 1 day in the future'/>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"loadPort\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Point\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"dischargePoint\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cargo\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Cargo Intake\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"cargoIntake\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Owner Name\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"onwerName\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Shipper\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"Shipper\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Load Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"loadPortAgent\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Discharge Port Agent\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"dischargePortAgent\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Receiver\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"receiver\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    On Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"onHireSurveyor\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Off Hire Surveyor\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"offHireSurveyor\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Supplier\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"bunkerSupplier\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Bunker Trader\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"bunkerTrader\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    PNI Insurance\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"pniInsurance\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>\r\n                    Weather Routing Company\r\n                </label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" name=\"weatherRoutingCompany\" onChange={this.handleAdminChange} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"raised\"\r\n            color=\"primary\"\r\n            style={{ margin: '16px' }}>\r\n            {'Submit'}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FillVoyageDetails;","import React from 'react';\r\nimport { Zoom } from 'react-slideshow-image';\r\n\r\nconst images = [\r\n  '/assests/images/ship1.jpg',\r\n  '/assests/images/ship2.jpg',\r\n  '/assests/images/ship3.jpg',\r\n];\r\n\r\nconst zoomOutProperties = {\r\n  duration: 5000,\r\n  transitionDuration: 500,\r\n  infinite: true,\r\n  indicators: true,\r\n  scale: 2,\r\n  arrows: true\r\n}\r\n\r\nconst SlideShow = () => {\r\n  return (\r\n    <div className=\"slide-container\">\r\n      <Zoom {...zoomOutProperties}>\r\n        {\r\n          images.map((each, index) => <img key={index} style={{ width: \"100%\" }} src={each} alt={each} />)\r\n        }\r\n      </Zoom>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SlideShow;","import React from 'react';\r\nimport Slideshow from './SlideShow';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"\">\r\n            <h2>Welcome to Bulkcom Shipping</h2>\r\n            <Slideshow />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.toggleHeaderState = this.toggleHeaderState.bind(this);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n    this.state = {\r\n      showHeader: props.toggleState,\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({\r\n      showHeader: !this.state.showHeader,\r\n    })\r\n  }\r\n\r\n  toggleHeaderState() {\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n    this.setState({\r\n      showHeader: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.showHeader ? 'menu_open menu' : 'menu'} id=\"main_menu\">\r\n        <div className=\"header_right\">\r\n          <div className=\"explore\" id=\"menu_label\">explore</div>\r\n          <img src=\"https://aegisuae.com/resources/img/arrow_white.svg\" alt=\"arrow\" className=\"arrow\" />\r\n          <button className=\"js-toggle-nav c-btn-nav -inited\" id=\"menu_button\" onClick={this.handleClick} >\r\n            <div className=\"c-btn-nav_burger\">\r\n              <span className=\"c-burger_top\"></span>\r\n              <span className=\"c-burger_middle\"></span>\r\n              <span className=\"c-burger_bottom\"></span>\r\n              <div className=\"c-close-burger_top\"></div>\r\n              <div className=\"c-close-burger_bottom\"></div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div className={this.state.showHeader ? 'left_menu_open left_menu' : 'left_menu'} id=\"left_menu\" scroll=\"no\">\r\n          <ul className={this.state.showHeader ? 'opened main_nav' : 'main_nav'} id=\"navigation\">\r\n            <li>\r\n              <Link className=\"\" to=\"/\" onClick={this.toggleHeaderState}>\r\n                Home\r\n              <span className=\"menu_line\"></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"\" to=\"/about\" onClick={this.toggleHeaderState}>\r\n                About\r\n            <span className=\"menu_line\"></span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"\" to=\"/location\" onClick={this.toggleHeaderState}>\r\n                Locations\r\n            <span className=\"menu_line\"></span>\r\n              </Link>\r\n            </li>\r\n            {localStorage.getItem('authToken') ? (\r\n              <li>\r\n                <Link className=\"\" to=\"/login\" onClick={this.logoutAndToggleState}>\r\n                  Logout\r\n             <span className=\"menu_line\"></span>\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n                <li>\r\n                  <Link className=\"\" to=\"/login\" onClick={this.toggleHeaderState}>\r\n                    Login\r\n              <span className=\"menu_line\"></span>\r\n                  </Link>\r\n                </li>\r\n              )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass Footer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.logoutAndToggleState = this.logoutAndToggleState.bind(this);\r\n  }\r\n\r\n  logoutAndToggleState() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <footer className=\"navbar navbar-dark bg-primary fixed-top\">\r\n        <div className=\"bottom_footer\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Home\r\n            </Link>\r\n          <Link className=\"navbar-brand\" to=\"/about\">\r\n            About\r\n            </Link>\r\n          <Link className=\"navbar-brand\" to=\"/location\">\r\n            Locations\r\n            </Link>\r\n          {localStorage.getItem('authToken') ? (\r\n            <Link className=\"navbar-brand\" to=\"/login\" onClick={this.logoutAndToggleState}>\r\n              Logout\r\n             </Link>) : (\r\n              <Link className=\"navbar-brand\" to=\"/login\">\r\n                Login\r\n                </Link>\r\n            )}\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem, getApiActionCal } from '../action/action';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addItem: item => {\r\n            dispatch(addItem(item))\r\n        },\r\n        getApiCallData: () => {\r\n            dispatch(getApiActionCal())\r\n        }\r\n    }\r\n}\r\nconst mapStatetoProps = (state) => {\r\n    return {\r\n        items: state.items,\r\n        apiData: state.apiData\r\n    };\r\n}\r\n\r\nclass FirstComponentStateFul extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 1,\r\n            items: ['bunty', 'babli'],\r\n            apiData: []\r\n        }\r\n        this.itemList = '';\r\n        this.incrementCounter = this.incrementCounter.bind(this);\r\n        this.addItemTo = this.addItemTo.bind(this);\r\n        this.addItems = this.addItems.bind(this);\r\n        this.getApiCall = this.getApiCall.bind(this);\r\n    }\r\n    addItemTo(event) {\r\n        this.itemList = event.target.value;\r\n    }\r\n    addItems() {\r\n        this.props.addItem(this.itemList)\r\n    }\r\n    incrementCounter() {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n\r\n    }\r\n    getApiCall() {\r\n        this.props.getApiCallData();\r\n    }\r\n    componentDidUpdate() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    componentDidMount() {\r\n        document.title = `You clicked it ${this.state.count} times`;\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>you clicked it {this.state.count} times</p>\r\n                <button onClick={this.incrementCounter}></button>\r\n                <input type=\"text\" onChange={this.addItemTo} />\r\n                <button onClick={this.addItems}></button>\r\n                <ul>\r\n                    {\r\n                        this.props.items.map(item =>\r\n                            <li key={item}>{item}</li>)\r\n                    }\r\n\r\n                </ul>\r\n                <button onClick={this.getApiCall}>get API call</button>\r\n                <ul>\r\n                    {\r\n                        this.props.apiData.map(item =>\r\n                            <li key={item.id}>{item.title}</li>)\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Form = connect(mapStatetoProps, mapDispatchToProps)(FirstComponentStateFul)\r\nexport default Form;","export function addItem(payload) {\r\n    return {\r\n        type: 'ADD',\r\n        payload\r\n    }\r\n}\r\nexport function getApiActionCal() {\r\n    return {\r\n        type: 'APICALL'\r\n    }\r\n}\r\nexport function getDataLoaded(payload) {\r\n    return {\r\n        type: 'DATA-LOADED',\r\n        payload\r\n    }\r\n}\r\nexport function getDataError() {\r\n    return {\r\n        type: 'DATA-ERROR'\r\n    }\r\n}","import React from 'react'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />\r\n}\r\n\r\nexport default function Alert({\r\n  handleClose,\r\n  handleSubmit,\r\n  isOpen,\r\n  hasTwoButtons = false,\r\n  submitButtonText,\r\n  title,\r\n  text,\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={isOpen}\r\n      transition={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>{text}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {hasTwoButtons ? (\r\n          <Button onClick={handleClose} variant=\"raised\" color=\"primary\">\r\n            {'CANCEL'}\r\n          </Button>\r\n        ) : null}\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          {submitButtonText}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, ref, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport Alert from '../Others/Alert';\r\nimport api from '../api'\r\n\r\nexport default class FormPasswordReset extends Component {\r\n\r\n  state = {\r\n    passChangeSuccess: false,\r\n    user: this.props.username,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _renderModal = () => {\r\n    const onClick = () => {\r\n      this.setState(() => ({ passChangeSuccess: false }))\r\n    }\r\n\r\n    return (\r\n      <Alert\r\n        isOpen={this.state.passChangeSuccess}\r\n        onClose={this._handleClose}\r\n        handleSubmit={onClick}\r\n        title=\"Password Reset\"\r\n        text=\"Your password was changed successfully\"\r\n        submitButtonText=\"Done\"\r\n      />\r\n    )\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    confirmPass,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n\r\n    let resp = await api.updatePassword({ user: this.state.user, confirmPass });\r\n    resp = resp.data;\r\n    setSubmitting(false);\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n      }));\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        passChangeSuccess: true,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          newPass: '',\r\n          confirmPass: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          newPass: string().required('New password is required'),\r\n          confirmPass: string()\r\n            .oneOf([ref('newPass')], 'Passwords do not match')\r\n            .required('Password is required'),\r\n        })}\r\n        onSubmit={(\r\n          { newPass, confirmPass },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            newPass,\r\n            confirmPass,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n          return isSubmitting ? (\r\n            <Spinner />\r\n          ) : (\r\n              <Paper className=\"form form--wrapper\" elevation={10}>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin=\"dense\" error={Boolean(touched.newPass && errors.newPass)}>\r\n                    <InputLabel htmlFor=\"password-new\" error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {'New Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"password-new\"\r\n                      name=\"newPass\"\r\n                      type=\"password\"\r\n                      autoComplete=\"off\"\r\n                      value={values.newPass}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.newPass && errors.newPass)} />\r\n                    <FormHelperText error={Boolean(touched.newPass && errors.newPass)}>\r\n                      {touched.newPass && errors.newPass ? errors.newPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl fullWidth margin=\"dense\" error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                    <InputLabel htmlFor=\"password-confirm\" error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {'Confirm Password'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"password-confirm\"\r\n                      name=\"confirmPass\"\r\n                      type=\"password\"\r\n                      value={values.confirmPass}\r\n                      autoComplete=\"off\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.confirmPass && errors.confirmPass)} />\r\n                    <FormHelperText error={Boolean(touched.confirmPass && errors.confirmPass)}>\r\n                      {touched.confirmPass && errors.confirmPass ? errors.confirmPass : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"raised\"\r\n                    color=\"primary\"\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }} >\r\n                    {'Reset Password'}\r\n                  </Button>\r\n                </form>\r\n                {this._renderModal()}\r\n              </Paper>\r\n            )\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Formik } from 'formik'\r\nimport { object, string } from 'yup'\r\nimport Input from '@material-ui/core/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Spinner from '../Others/Spinner'\r\nimport FormPasswordReset from './FormPasswordReset';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport api from '../api'\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    passChangeSuccess: false,\r\n  }\r\n\r\n  _handleModalClose = () => {\r\n    this.setState(() => ({\r\n      passChangeSuccess: false,\r\n    }))\r\n  }\r\n\r\n  _handleSubmit = async ({\r\n    username,\r\n    setSubmitting,\r\n    resetForm,\r\n  }) => {\r\n    let resp = await api.checkUsername({ username });\r\n    setSubmitting(false);\r\n    resp = resp.data;\r\n    if (!resp.status) {\r\n      this.setState(() => ({\r\n        passChangeSuccess: false,\r\n        error: true,\r\n        errorMsg: 'Username not found'\r\n      }))\r\n      return;\r\n    } else {\r\n      this.setState(() => ({\r\n        username,\r\n        passChangeSuccess: true,\r\n        error: false,\r\n      }))\r\n    }\r\n\r\n    resetForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n        }}\r\n        validationSchema={object().shape({\r\n          username: string().required('Please enter a valid email address.'),\r\n        })}\r\n        onSubmit={(\r\n          { username },\r\n          { setSubmitting, resetForm }\r\n        ) =>\r\n          this._handleSubmit({\r\n            username,\r\n            setSubmitting,\r\n            resetForm,\r\n          })\r\n        }\r\n        render={props => {\r\n          const {\r\n            values,\r\n            touched,\r\n            errors,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isValid,\r\n            isSubmitting,\r\n          } = props\r\n\r\n          let showData;\r\n          if (isSubmitting) {\r\n            showData = <Spinner />\r\n          } else if (this.state.passChangeSuccess) {\r\n            showData = <div className=\"ForgotPasswordForm\">\r\n              <Typography variant=\"title\" style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <FormPasswordReset username={this.state.username} />\r\n            </div>\r\n          } else {\r\n            showData = <div className=\"ForgotPasswordForm\">\r\n              <Typography variant=\"title\" style={{ margin: '16px 0' }}> Password Reset </Typography>\r\n              <Paper className=\"form form--wrapper\" elevation={10}>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                  <FormControl fullWidth margin=\"dense\">\r\n                    <InputLabel\r\n                      htmlFor=\"username\"\r\n                      error={Boolean(touched.username && errors.username)}>\r\n                      {'Enter your username'}\r\n                    </InputLabel>\r\n                    <Input\r\n                      id=\"username\"\r\n                      name=\"username\"\r\n                      type=\"email\"\r\n                      autoComplete=\"off\"\r\n                      value={values.username}\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={Boolean(touched.username && errors.username)}\r\n                    />\r\n                    <FormHelperText error={Boolean(touched.username && errors.username)}>\r\n                      {touched.username && errors.username ? errors.username : ''}\r\n                    </FormHelperText>\r\n                    <FormHelperText error={Boolean(this.state.error)}>\r\n                      {this.state.error ? this.state.errorMsg : ''}\r\n                    </FormHelperText>\r\n                  </FormControl>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"raised\"\r\n                    color=\"primary\"\r\n                    disabled={Boolean(!isValid || isSubmitting)}\r\n                    style={{ margin: '16px' }}>\r\n                    {'Check Username'}\r\n                  </Button>\r\n                </form>\r\n              </Paper>\r\n            </div>\r\n          }\r\n          return (\r\n            showData\r\n          )\r\n        }\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;","import React, { Component } from 'react';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\nimport api from '../api';\r\n\r\nclass ViewAllVessels extends Component {\r\n\r\n    localState = {\r\n        vesselList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.getAllVesselDetails();\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    getAllVesselDetails = async () => {\r\n        const res = await api.getAllVesselsDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                vesselList: res.data.vesselList,\r\n                error: false,\r\n            });\r\n\r\n        } else {\r\n            this.setState({ error: true });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n        let { vesselList } = this.state;\r\n        let options;\r\n        if (vesselList.length) {\r\n            options = {\r\n                title: 'Vessel List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                    canClick: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"vesselName\",\r\n                            label: \"Vessel Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"IMO\",\r\n                            label: \"IMO\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"DWT\",\r\n                            label: \"DWT\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"built\",\r\n                            label: \"Built\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"LOA\",\r\n                            label: \"LOA\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"beam\",\r\n                            label: \"Beam\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"cranes\",\r\n                            label: \"cranes\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"grabs\",\r\n                            label: \"grabs\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...vesselList\r\n                    ],\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllVessels;\r\n","import React, { Component } from 'react';\r\nimport { Datatable } from \"@o2xp/react-datatable\";\r\nimport api from '../api';\r\n\r\nclass ViewAllUsers extends Component {\r\n\r\n    localState = {\r\n        clientList: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...this.localState };\r\n        this.getAllClients();\r\n        this.handleBackButton = this.handleBackButton.bind(this);\r\n    }\r\n\r\n    getAllClients = async () => {\r\n        const res = await api.getAllClientDetails();\r\n        if (res.data.status) {\r\n            this.setState({\r\n                clientList: res.data.clientList,\r\n                error: false,\r\n            });\r\n        } else {\r\n            this.setState({ error: true });\r\n            return;\r\n        }\r\n    }\r\n\r\n    handleBackButton() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleEditClick = e => {\r\n        const { clientList } = this.state;\r\n        const c = clientList.find(m => m['id'] === e.target.id);\r\n    }\r\n\r\n    buildCustomTableBodyCell = ({ cellVal, column, rowId }) => {\r\n        let val;\r\n        switch (column.id) {\r\n            case \"edit\":\r\n                val = <button style={{ color: \"blue\", textAlign: \"center\", marginLeft: '20%' }} id={rowId} type=\"button\" onClick={this.handleEditClick}>Edit</button>;\r\n                break;\r\n            default:\r\n                val = <div style={{ color: \"blue\" }}>{cellVal}</div>;\r\n                break;\r\n        }\r\n        return val;\r\n    };\r\n\r\n    render() {\r\n        let { clientList } = this.state;\r\n        let options;\r\n        if (clientList.length) {\r\n            options = {\r\n                title: 'Client List',\r\n                keyColumn: 'id',\r\n                font: \"Arial\",\r\n                dimensions: {\r\n                    datatable: {\r\n                        width: '60%',\r\n                        height: '648px',\r\n                    },\r\n                    row: {\r\n                        height: \"10px\"\r\n                    }\r\n                },\r\n                stripped: true,\r\n                features: {\r\n                    canSearch: true,\r\n                    canDownload: true,\r\n                    canPrint: true,\r\n                    canOrderColumns: true,\r\n                },\r\n                data: {\r\n                    columns: [\r\n                        {\r\n                            id: \"edit\",\r\n                            label: \"Edit\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"userName\",\r\n                            label: \"User Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"displayName\",\r\n                            label: \"Display Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"companyName\",\r\n                            label: \"Company Name\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"role\",\r\n                            label: \"Role\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                        {\r\n                            id: \"userType\",\r\n                            label: \"User Type\",\r\n                            colSize: \"50px\",\r\n                        },\r\n                    ],\r\n                    rows: [\r\n                        ...clientList.map(({ userName, displayName, companyName, role, clientType, id }) => ({ userName, displayName, companyName, role, clientType, id, edit: true }))\r\n                    ],\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <span>\r\n                <button className='backButton' onClick={this.handleBackButton}>Back</button>\r\n                <h2> Welcome Mr. {this.capitalize(localStorage.getItem('displayName'))}</h2>\r\n                < div id='table' style={{ marginTop: '2%', marginLeft: '2%', display: 'flex' }}>\r\n                    <Datatable options={options} stripped CustomTableBodyCell={this.buildCustomTableBodyCell} />\r\n                </div >\r\n            </span>\r\n        );\r\n    }\r\n\r\n    capitalize = s => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n}\r\n\r\nexport default ViewAllUsers;\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  withRouter\r\n} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n        localStorage.getItem('userRole') === 'Admin' ||\r\n        localStorage.getItem('userRole') === 'Manager' ||\r\n        localStorage.getItem('userRole') === 'Client'\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/login',\r\n            state: { from: props.location }\r\n          }} />\r\n    )} />\r\n  )\r\n\r\n  export default PrivateRoute;","import React,{Component} from 'react';\r\n\r\nclass CheckPerformance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.location.state);\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                Check Performance\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CheckPerformance;","import React from 'react';\r\nimport './css/App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport About from './components/Others/About';\r\nimport Location from './components/Others/Location';\r\nimport LoginHome from './components/Login/LoginHome';\r\nimport FillPerformanceDetails from './components/Admin/FillPerformanceDetails';\r\nimport AddNewUser from './components/Admin/AddNewUser';\r\nimport AddNewVessel from './components/Admin/AddNewVessel';\r\nimport FillVoyageDetails from './components/Admin/FillVoyageDetails';\r\nimport Home from './components/Others/Home';\r\nimport Header from './components/Others/Header';\r\nimport Footer from './components/Others/Footer';\r\nimport FirstComponentStateFul from './components/FirstComponentStateFul'\r\nimport ForgotPassword from './components/Login/ForgotPassword';\r\nimport ViewAllVessels from './components/Manager/ViewAllVessels';\r\nimport ViewAllUsers from './components/Manager/ViewAllUsers';\r\nimport PrivateRoute from './components/Admin/PrivateRoute';\r\nimport PieCharts from './components/Admin/PieCharts';\r\nimport CheckPerformance from './components/Client/CheckPerformance';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App main-wrapper\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/about\" component={About}></Route>\r\n          <Route path=\"/location\" component={Location}></Route>\r\n          <Route path=\"/login\" component={LoginHome}></Route>\r\n          <PrivateRoute path=\"/fillVoyageDetails\" component={FillVoyageDetails}></PrivateRoute>\r\n          <PrivateRoute path=\"/fillPerformanceDetails\" component={FillPerformanceDetails}></PrivateRoute>\r\n          <PrivateRoute path=\"/addNewVessel\" component={AddNewVessel}></PrivateRoute>\r\n          <PrivateRoute path=\"/addNewUser\" component={AddNewUser}></PrivateRoute>\r\n          <PrivateRoute path=\"/viewAllVessels\" component={ViewAllVessels}></PrivateRoute>\r\n          <PrivateRoute path=\"/viewAllUsers\" component={ViewAllUsers}></PrivateRoute>\r\n          <PrivateRoute path='/checkPerformance' component={CheckPerformance}></PrivateRoute>\r\n          <Route path=\"/pieChart\" component={PieCharts}></Route>\r\n          <Route path=\"/forgotPassword\" component={ForgotPassword}></Route>\r\n          <Route path=\"/\" component={Home}></Route>\r\n        </Switch>\r\n      </div>\r\n      <Footer/>\r\n      {/* <FirstComponentStateFul/> */}\r\n    </Router>\r\n  );\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./js/index\";\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n   <App />\r\n</Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}